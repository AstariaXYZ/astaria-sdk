{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "enum IVaultImplementation.InvalidRequestReason",
          "name": "reason",
          "type": "uint8"
        }
      ],
      "name": "InvalidRequest",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "name": "AllowListEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "name": "AllowListUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "DelegateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "IncrementNonce",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "NonceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "VaultShutdown",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "COLLATERAL_TOKEN",
      "outputs": [
        {
          "internalType": "contract ICollateralToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "EPOCH_LENGTH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IMPL_TYPE",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROUTER",
      "outputs": [
        {
          "internalType": "contract IAstariaRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "START",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STRATEGY_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VAULT_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "asset",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint8",
                  "name": "collateralType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "strategyRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralId",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "maxAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "rate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxPotentialDebt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidationInitialAsk",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ILienToken.Details",
                  "name": "details",
                  "type": "tuple"
                }
              ],
              "internalType": "struct ILienToken.Lien",
              "name": "lien",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint88",
                  "name": "amount",
                  "type": "uint88"
                },
                {
                  "internalType": "uint40",
                  "name": "last",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "end",
                  "type": "uint40"
                },
                {
                  "internalType": "uint256",
                  "name": "lienId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ILienToken.Point",
              "name": "point",
              "type": "tuple"
            }
          ],
          "internalType": "struct ILienToken.Stack[]",
          "name": "stack",
          "type": "tuple[]"
        },
        {
          "internalType": "uint8",
          "name": "position",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "version",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct IAstariaRouter.StrategyDetailsParam",
                  "name": "strategy",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "uint8",
                          "name": "collateralType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "vault",
                          "type": "address"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "strategyRoot",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "collateralId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "maxAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rate",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "duration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "maxPotentialDebt",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "liquidationInitialAsk",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct ILienToken.Details",
                          "name": "details",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct ILienToken.Lien",
                      "name": "lien",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint88",
                          "name": "amount",
                          "type": "uint88"
                        },
                        {
                          "internalType": "uint40",
                          "name": "last",
                          "type": "uint40"
                        },
                        {
                          "internalType": "uint40",
                          "name": "end",
                          "type": "uint40"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lienId",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct ILienToken.Point",
                      "name": "point",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct ILienToken.Stack[]",
                  "name": "stack",
                  "type": "tuple[]"
                },
                {
                  "internalType": "bytes",
                  "name": "nlrDetails",
                  "type": "bytes"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "root",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ],
                  "internalType": "struct IAstariaRouter.MerkleData",
                  "name": "merkle",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct IAstariaRouter.NewLienRequest",
              "name": "lienRequest",
              "type": "tuple"
            }
          ],
          "internalType": "struct IAstariaRouter.Commitment",
          "name": "incomingTerms",
          "type": "tuple"
        }
      ],
      "name": "buyoutLien",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint8",
                  "name": "collateralType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "strategyRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralId",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "maxAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "rate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxPotentialDebt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidationInitialAsk",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ILienToken.Details",
                  "name": "details",
                  "type": "tuple"
                }
              ],
              "internalType": "struct ILienToken.Lien",
              "name": "lien",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint88",
                  "name": "amount",
                  "type": "uint88"
                },
                {
                  "internalType": "uint40",
                  "name": "last",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "end",
                  "type": "uint40"
                },
                {
                  "internalType": "uint256",
                  "name": "lienId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ILienToken.Point",
              "name": "point",
              "type": "tuple"
            }
          ],
          "internalType": "struct ILienToken.Stack[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint8",
                  "name": "collateralType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "strategyRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralId",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "maxAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "rate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxPotentialDebt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidationInitialAsk",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ILienToken.Details",
                  "name": "details",
                  "type": "tuple"
                }
              ],
              "internalType": "struct ILienToken.Lien",
              "name": "lien",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint88",
                  "name": "amount",
                  "type": "uint88"
                },
                {
                  "internalType": "uint40",
                  "name": "last",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "end",
                  "type": "uint40"
                },
                {
                  "internalType": "uint256",
                  "name": "lienId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ILienToken.Point",
              "name": "point",
              "type": "tuple"
            }
          ],
          "internalType": "struct ILienToken.Stack",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "version",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct IAstariaRouter.StrategyDetailsParam",
                  "name": "strategy",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "uint8",
                          "name": "collateralType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "vault",
                          "type": "address"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "strategyRoot",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "collateralId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "maxAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rate",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "duration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "maxPotentialDebt",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "liquidationInitialAsk",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct ILienToken.Details",
                          "name": "details",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct ILienToken.Lien",
                      "name": "lien",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint88",
                          "name": "amount",
                          "type": "uint88"
                        },
                        {
                          "internalType": "uint40",
                          "name": "last",
                          "type": "uint40"
                        },
                        {
                          "internalType": "uint40",
                          "name": "end",
                          "type": "uint40"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lienId",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct ILienToken.Point",
                      "name": "point",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct ILienToken.Stack[]",
                  "name": "stack",
                  "type": "tuple[]"
                },
                {
                  "internalType": "bytes",
                  "name": "nlrDetails",
                  "type": "bytes"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "root",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ],
                  "internalType": "struct IAstariaRouter.MerkleData",
                  "name": "merkle",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct IAstariaRouter.NewLienRequest",
              "name": "lienRequest",
              "type": "tuple"
            }
          ],
          "internalType": "struct IAstariaRouter.Commitment",
          "name": "params",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "commitToLien",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lienId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint8",
                  "name": "collateralType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "strategyRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralId",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "maxAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "rate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxPotentialDebt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidationInitialAsk",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ILienToken.Details",
                  "name": "details",
                  "type": "tuple"
                }
              ],
              "internalType": "struct ILienToken.Lien",
              "name": "lien",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint88",
                  "name": "amount",
                  "type": "uint88"
                },
                {
                  "internalType": "uint40",
                  "name": "last",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "end",
                  "type": "uint40"
                },
                {
                  "internalType": "uint256",
                  "name": "lienId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ILienToken.Point",
              "name": "point",
              "type": "tuple"
            }
          ],
          "internalType": "struct ILienToken.Stack[]",
          "name": "stack",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "payout",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableAllowList",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "domainSeparator",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableAllowList",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            }
          ],
          "internalType": "struct IAstariaRouter.StrategyDetailsParam",
          "name": "strategy",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        }
      ],
      "name": "encodeStrategyData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getShutdown",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStrategistNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "incrementNonce",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "delegate",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "allowListEnabled",
              "type": "bool"
            },
            {
              "internalType": "address[]",
              "name": "allowList",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "depositCap",
              "type": "uint256"
            }
          ],
          "internalType": "struct IVaultImplementation.InitParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "name": "modifyAllowList",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newCap",
          "type": "uint256"
        }
      ],
      "name": "modifyDepositCap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "recipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegate_",
          "type": "address"
        }
      ],
      "name": "setDelegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shutdown",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50612b32806100206000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c806366d003ac11610104578063c0e9b053116100a2578063dc2fbaee11610071578063dc2fbaee14610381578063f5f1f1a7146103e6578063f698da25146103ee578063fc0e74d1146103f657600080fd5b8063c0e9b053146103a9578063c237c703146103b1578063ca5eb5e1146103cb578063cb58189d146103de57600080fd5b80638da5cb5b116100de5780638da5cb5b1461038957806395d89b4114610391578063ac4746ab14610399578063ba9a061a146103a157600080fd5b806366d003ac146103665780636e553f651461036e578063834029ba1461038157600080fd5b80633177e0fe1161017c578063474a1e541161014b578063474a1e54146103025780634880d1981461031557806351ab5c4914610337578063627cdcb91461035e57600080fd5b80633177e0fe146102b457806332fe7b26146102c757806338d52e0f146102e75780633c96ce12146102ef57600080fd5b8063150b7a02116101b8578063150b7a021461023e5780632917e097146102765780632e1a7d4d1461028957806330040e771461029e57600080fd5b806301ffc9a7146101df57806306fdde0314610208578063133321d21461021d575b600080fd5b6101f36101ed3660046119ef565b50600090565b60405190151581526020015b60405180910390f35b6102106103fe565b6040516101ff9190611a69565b61023061022b366004611ab3565b610491565b6040516101ff929190611c64565b61025d61024c366004611c9d565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016101ff565b610210610284366004611d3b565b61091a565b61029c610297366004611d66565b61093d565b005b6102a6610984565b6040519081526020016101ff565b61029c6102c2366004611d8d565b610997565b6102cf6109b3565b6040516001600160a01b0390911681526020016101ff565b6102cf6109c4565b61029c6102fd366004611d66565b6109d0565b61029c610310366004611dc6565b610a2b565b610328610323366004611e00565b610b8a565b6040516101ff93929190611e46565b6102a67f679f3933bd13bd2e4ec6e9cde341ede07736ad7b635428a8a211e9cccb4393b081565b61029c610ca4565b6102cf610d62565b6102a661037c366004611e6f565b610d83565b61029c610997565b6102cf610de9565b610210610df5565b6102a6610e7d565b6102a6610e89565b6101f3610e95565b6103b9610eab565b60405160ff90911681526020016101ff565b61029c6103d9366004611e94565b610eb7565b6102a6610f89565b6102cf610f95565b6102a6611000565b61029c61107f565b60606104086109c4565b6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610445573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261046d9190810190611f85565b60405160200161047d9190612018565b604051602081830303815290604052905090565b606061049b611935565b6104a36109b3565b6001600160a01b0316635c975abb6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610504919061204a565b1561052e57600860405163eac08f1960e01b81526004016105259190612067565b60405180910390fd5b6105366110eb565b6001015460ff161561055e57600760405163eac08f1960e01b81526004016105259190612067565b60006105686109b3565b6001600160a01b03166341700b976040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c9919061208f565b9050600080826001600160a01b03166365b95e0a8a8a8a60ff168181106105f2576105f26120ac565b90506101c002016040518263ffffffff1660e01b815260040161061591906121d8565b6040805180830381865afa158015610631573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065591906121e7565b915091506106616109c4565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156106a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cb919061220b565b8111156106ee57600460405163eac08f1960e01b81526004016105259190612067565b6106ff866106fa610d62565b611119565b61078461070a6109b3565b6001600160a01b03166396d6401d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610747573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076b919061208f565b826107746109c4565b6001600160a01b03169190611476565b826001600160a01b0316635b2ed28760405180604001604052808a60ff16815260200160405180608001604052808781526020016107c0610d62565b6001600160a01b031681526020016107d66109b3565b6001600160a01b031663349d947b8d60006040518363ffffffff1660e01b81526004016108049291906124fa565b610140604051808303816000875af1158015610824573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084891906125f9565b81526020018e8e808060200260200160405190810160405280939291908181526020016000905b8282101561089c5761088d6101c08302860136819003810190612677565b8152602001906001019061086f565b50505050508152508152506040518263ffffffff1660e01b81526004016108c39190612763565b6000604051808303816000875af11580156108e2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261090a91908101906128e8565b9450945050505094509492505050565b606060006109266110eb565b90506109338185856114f3565b9150505b92915050565b610945610de9565b6001600160a01b0316336001600160a01b03161461096257600080fd5b6109813033836109706109c4565b6001600160a01b03169291906115be565b50565b600061098e6110eb565b60020154905090565b600060405163eac08f1960e01b81526004016105259190612067565b60006109bf6000611648565b905090565b60006109bf6029611648565b6109d8610de9565b6001600160a01b0316336001600160a01b0316146109f557600080fd5b6109fe8161166d565b610a066110eb565b80546affffffffffffffffffffff19166001600160581b039290921691909117905550565b610a336109b3565b6001600160a01b0316336001600160a01b031614610a5057600080fd5b6000610a5a6110eb565b90506000610a6b6020840184611e94565b6001600160a01b031614610aad57610a866020830183611e94565b81546001600160a01b0391909116600160581b02600160581b600160f81b03199091161781555b610aba826060013561166d565b81546affffffffffffffffffffff19166001600160581b0391909116178155610ae96040830160208401612937565b15610b865780546001600160f81b0316600160f81b17815560005b610b116040840184612954565b9050811015610b84576001600383016000610b2f6040870187612954565b85818110610b3f57610b3f6120ac565b9050602002016020810190610b549190611e94565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055600101610b04565b505b5050565b600060606000610b986109b3565b6001600160a01b0316635c975abb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf9919061204a565b15610c1a57600860405163eac08f1960e01b81526004016105259190612067565b610c226110eb565b6001015460ff1615610c4a57600760405163eac08f1960e01b81526004016105259190612067565b6000610c568686611683565b82519397509195509093509150610c9c908490610c75906001906129b3565b81518110610c8557610c856120ac565b602002602001015160200151604001518583610b84565b509250925092565b6000610cae6110eb565b9050610cb8610de9565b6001600160a01b0316336001600160a01b031614158015610cea57508054600160581b90046001600160a01b03163314155b15610d0b57600060405163eac08f1960e01b81526004016105259190612067565b600281018054906000610d1d836129c6565b91905055507fc6f316165836b9a9ca658ba2e3bbf32b3acff9aca1956fc77393fb506d26b0d68160020154604051610d5791815260200190565b60405180910390a150565b60006001610d6e610eab565b60ff1603610d7b57503090565b6109bf610de9565b600080610d8e6110eb565b33600090815260038201602052604090205490915060ff168015610dca5750610db5610de9565b6001600160a01b0316836001600160a01b0316145b610dd357600080fd5b610de13330866109706109c4565b509192915050565b60006109bf6015611648565b6060610dff610de9565b610e076109c4565b6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610e44573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e6c9190810190611f85565b60405160200161047d9291906129df565b60006109bf605d61175f565b60006109bf603d61175f565b6000610e9f6110eb565b6001015460ff16919050565b60006109bf6014611781565b610ebf610de9565b6001600160a01b0316336001600160a01b031614610edc57600080fd5b6000610ee66110eb565b8054600160581b600160f81b031916600160581b6001600160a01b0385169081029190911782556040519081529091507fbf313af507f7586dc28510c0974f0196ee356634bf104cf3ab61a28a2616c1549060200160405180910390a1604080516001600160a01b0384168152600160208201527f73121574a4eadb4cfdeb2ba56a6a88067b03edd1f0a0dfcac0a5a95682a24367910160405180910390a15050565b60006109bf607d61175f565b6000610f9f6109b3565b6001600160a01b031663f5f1f1a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fdc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bf919061208f565b604080517f2aef22f9d7df5f9d21c56d14029233f3fdaa91917727e1eb68e504d27072d6cd60208201527f044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d9181019190915246606082015230608082015260009060a00160405160208183030381529060405280519060200120905090565b611087610de9565b6001600160a01b0316336001600160a01b0316146110a457600080fd5b60016110ae6110eb565b600101805460ff19169115159190911790556040517f43849b84f1a1ce86ba1205cd8a5d4fa1563bca4b169db452674f94b4b6ddaa6990600090a1565b60008061093760017f8db05f23e24c991e45d8dd3599daf8e419ee5ab93565cf65b18905286a24ec146129b3565b60006111466020840180359061112f9086611e94565b6001600160a01b03166000526020526034600c2090565b90506000611152610f95565b6040516331a9108f60e11b8152600481018490529091506000906001600160a01b03831690636352211e90602401602060405180830381865afa15801561119d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c1919061208f565b60405163020604bf60e21b8152600481018590529091506000906001600160a01b0384169063081812fc90602401602060405180830381865afa15801561120c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611230919061208f565b9050336001600160a01b0383161480159061125d5750816001600160a01b0316856001600160a01b031614155b801561127b5750806001600160a01b0316856001600160a01b031614155b80156112f4575060405163e985e9c560e01b81526001600160a01b03838116600483015233602483015284169063e985e9c590604401602060405180830381865afa1580156112ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f2919061204a565b155b1561131557600060405163eac08f1960e01b81526004016105259190612067565b600061131f6110eb565b9050600060016113578361133660408c018c612a2f565b61134360408d018d612a2f565b6113519060a0810190612a50565b356114f3565b805160209091012061136c60408b018b612a2f565b61137e9061010081019060e001612a66565b61138b60408c018c612a2f565b610100013561139d60408d018d612a2f565b6040805160008152602081018083529590955260ff9093169284019290925260608301526101200135608082015260a0016020604051602081039080840390855afa1580156113f0573d6000803e3d6000fd5b505050602060405103519050611404610de9565b6001600160a01b0316816001600160a01b031614158015611439575081546001600160a01b03828116600160581b9092041614155b8061144b57506001600160a01b038116155b1561146c57600160405163eac08f1960e01b81526004016105259190612067565b5050505050505050565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806114ed5760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b6044820152606401610525565b50505050565b606060007f679f3933bd13bd2e4ec6e9cde341ede07736ad7b635428a8a211e9cccb4393b0856002015485602001358560405160200161154c949392919093845260208401929092526040830152606082015260800190565b60408051601f1981840301815291905280516020909101209050601960f81b600160f81b611578611000565b6040516001600160f81b031993841660208201529290911660218301526022820152604281018290526062016040516020818303038152906040529150505b9392505050565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806116415760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606401610525565b5050505050565b60008061165f600119368181013560f01c90030190565b929092013560601c92915050565b6000600160581b821061167f57600080fd5b5090565b600060606000806116948686611119565b61169c6109b3565b6001600160a01b03166345be6867876116b3610d62565b6040518363ffffffff1660e01b81526004016116d0929190612a83565b6000604051808303816000875af11580156116ef573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526117179190810190612aad565b9195509350915061173761172e6040880188612a2f565b60c001356117a6565b905061175685826117466109c4565b6001600160a01b031691906118bd565b92959194509250565b600080611776600119368181013560f01c90030190565b929092013592915050565b600080611798600119368181013560f01c90030190565b929092013560f81c92915050565b6000806117b16109b3565b6001600160a01b031663017e7e586040518163ffffffff1660e01b81526004016020604051808303816000875af11580156117f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611814919061208f565b90506001600160a01b03811615801590610de15760006118326109b3565b6001600160a01b0316630f0245ad866040518263ffffffff1660e01b815260040161185f91815260200190565b602060405180830381865afa15801561187c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118a0919061220b565b905080850394506118b483826117466109c4565b50509192915050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806114ed5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606401610525565b6040518060400160405280611948611977565b81526040805160808101825260008082526020828101829052928201819052606082015291015290565b905290565b6040518060c00160405280600060ff16815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008019168152602001600081526020016119726040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b600060208284031215611a0157600080fd5b81356001600160e01b0319811681146115b757600080fd5b60005b83811015611a34578181015183820152602001611a1c565b50506000910152565b60008151808452611a55816020860160208601611a19565b601f01601f19169290920160200192915050565b6020815260006115b76020830184611a3d565b60ff8116811461098157600080fd5b8035611a9681611a7c565b919050565b600060608284031215611aad57600080fd5b50919050565b60008060008060608587031215611ac957600080fd5b84356001600160401b0380821115611ae057600080fd5b818701915087601f830112611af457600080fd5b813581811115611b0357600080fd5b8860206101c083028501011115611b1957600080fd5b60208301965080955050611b2f60208801611a8b565b93506040870135915080821115611b4557600080fd5b50611b5287828801611a9b565b91505092959194509250565b805160ff1682526020808201516001600160a01b039081168285015260408084015190911681850152606080840151818601526080808501518187015260a0948501518051958701959095529284015160c08601529083015160e0850152820151610100840152015161012090910152565b611bdb828251611b5e565b60209081015180516001600160581b03166101408401529081015164ffffffffff908116610160840152604082015116610180830152606001516101a090910152565b600081518084526020808501945080840160005b83811015611c5957611c45878351611bd0565b6101c0969096019590820190600101611c32565b509495945050505050565b60006101e0808352611c7881840186611c1e565b9150506115b76020830184611bd0565b6001600160a01b038116811461098157600080fd5b600080600080600060808688031215611cb557600080fd5b8535611cc081611c88565b94506020860135611cd081611c88565b93506040860135925060608601356001600160401b0380821115611cf357600080fd5b818801915088601f830112611d0757600080fd5b813581811115611d1657600080fd5b896020828501011115611d2857600080fd5b9699959850939650602001949392505050565b60008060808385031215611d4e57600080fd5b611d588484611a9b565b946060939093013593505050565b600060208284031215611d7857600080fd5b5035919050565b801515811461098157600080fd5b60008060408385031215611da057600080fd5b8235611dab81611c88565b91506020830135611dbb81611d7f565b809150509250929050565b600060208284031215611dd857600080fd5b81356001600160401b03811115611dee57600080fd5b8201608081850312156115b757600080fd5b60008060408385031215611e1357600080fd5b82356001600160401b03811115611e2957600080fd5b611e3585828601611a9b565b9250506020830135611dbb81611c88565b838152606060208201526000611e5f6060830185611c1e565b9050826040830152949350505050565b60008060408385031215611e8257600080fd5b823591506020830135611dbb81611c88565b600060208284031215611ea657600080fd5b81356115b781611c88565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715611ee957611ee9611eb1565b60405290565b604051608081016001600160401b0381118282101715611ee957611ee9611eb1565b604080519081016001600160401b0381118282101715611ee957611ee9611eb1565b60405160a081016001600160401b0381118282101715611ee957611ee9611eb1565b604051601f8201601f191681016001600160401b0381118282101715611f7d57611f7d611eb1565b604052919050565b600060208284031215611f9757600080fd5b81516001600160401b0380821115611fae57600080fd5b818401915084601f830112611fc257600080fd5b815181811115611fd457611fd4611eb1565b611fe7601f8201601f1916602001611f55565b9150808252856020828501011115611ffe57600080fd5b61200f816020840160208601611a19565b50949350505050565b694153542d5661756c742d60b01b81526000825161203d81600a850160208701611a19565b91909101600a0192915050565b60006020828403121561205c57600080fd5b81516115b781611d7f565b602081016009831061208957634e487b7160e01b600052602160045260246000fd5b91905290565b6000602082840312156120a157600080fd5b81516115b781611c88565b634e487b7160e01b600052603260045260246000fd5b6001600160581b038116811461098157600080fd5b64ffffffffff8116811461098157600080fd5b80356120f5816120c2565b6001600160581b03168252602081013561210e816120d7565b64ffffffffff908116602084015260408201359061212b826120d7565b166040830152606090810135910152565b803561214781611a7c565b60ff168252602081013561215a81611c88565b6001600160a01b03908116602084015260408201359061217982611c88565b166040830152606081810135908301526080808201359083015260a0808201359083015260c0808201359083015260e0808201359083015261010080820135908301526101208082013590830152610140610b848184018284016120ea565b6101c08101610937828461213c565b600080604083850312156121fa57600080fd5b505080516020909101519092909150565b60006020828403121561221d57600080fd5b5051919050565b6000808335601e1984360301811261223b57600080fd5b83016020810192503590506001600160401b0381111561225a57600080fd5b6101c08102360382131561226d57600080fd5b9250929050565b81835260208301925060008160005b848110156122a957612295868361213c565b6101c0958601959190910190600101612283565b5093949350505050565b6000808335601e198436030181126122ca57600080fd5b83016020810192503590506001600160401b038111156122e957600080fd5b80360382131561226d57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008235603e1983360301811261233757600080fd5b90910192915050565b8035825260006020820135601e1983360301811261235d57600080fd5b82016020810190356001600160401b0381111561237957600080fd5b8060051b80360383131561238c57600080fd5b60406020870181905286018290526001600160fb1b038211156123ae57600080fd5b8083606088013794909401606001949350505050565b600081356123d181611c88565b6001600160a01b039081168452602083810135908501526040830135903684900361013e1901821261240257600080fd5b6060604086015290830190813561241881611a7c565b60ff16606086015260208201356080860152604082013561243881611c88565b1660a085015261244b6060820182612224565b6101408060c08801526124636101a088018385612274565b925061247260808501856122b3565b9250605f19808986030160e08a015261248c8585846122f8565b945061249b60a0870187612321565b935061010091508089860301828a0152506124b68484612340565b9350610120925060c0850135838901526124d260e08601611a8b565b60ff811689840152508401356101608801525090910135610180909401939093525090919050565b60408152600061250d60408301856123c4565b90508260208301529392505050565b600081830361014081121561253057600080fd5b612538611ec7565b9150825161254581611a7c565b8252602083015161255581611c88565b6020830152604083015161256881611c88565b6040830152606083810151908301526080808401519083015260a0609f198201121561259357600080fd5b5060405160a081018181106001600160401b03821117156125b6576125b6611eb1565b806040525060a0830151815260c0830151602082015260e08301516040820152610100830151606082015261012083015160808201528060a08301525092915050565b6000610140828403121561260c57600080fd5b6115b7838361251c565b60006080828403121561262857600080fd5b612630611eef565b9050813561263d816120c2565b8152602082013561264d816120d7565b60208201526040820135612660816120d7565b806040830152506060820135606082015292915050565b60008183036101c081121561268b57600080fd5b612693611f11565b610140808312156126a357600080fd5b6126ab611ec7565b85356126b681611a7c565b815260208601356126c681611c88565b602082015260408601356126d981611c88565b6040820152606086810135908201526080808701359082015260a0609f198501121561270457600080fd5b61270c611f33565b935060a0860135845260c0860135602085015260e08601356040850152610100860135606085015261012086013560808501528360a08201528083525061275586828701612616565b602083015250949350505050565b6020815260ff8251166020820152600060208301516040808401528051606084015260018060a01b03602082015116608084015260408101516127a960a0850182611b5e565b50606001516101a06101e0840152610933610200840182611c1e565b60008183036101c08112156127d957600080fd5b6127e1611f11565b91506127ed848461251c565b8252608061013f198201121561280257600080fd5b5061280b611eef565b61014083015161281a816120c2565b815261016083015161282b816120d7565b602082015261018083015161283f816120d7565b806040830152506101a083015160608201528060208301525092915050565b600082601f83011261286f57600080fd5b815160206001600160401b0382111561288a5761288a611eb1565b612898818360051b01611f55565b8281526101c092830285018201928282019190878511156128b857600080fd5b8387015b858110156128db576128ce89826127c5565b84529284019281016128bc565b5090979650505050505050565b6000806101e083850312156128fc57600080fd5b82516001600160401b0381111561291257600080fd5b61291e8582860161285e565b92505061292e84602085016127c5565b90509250929050565b60006020828403121561294957600080fd5b81356115b781611d7f565b6000808335601e1984360301811261296b57600080fd5b8301803591506001600160401b0382111561298557600080fd5b6020019150600581901b360382131561226d57600080fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156109375761093761299d565b6000600182016129d8576129d861299d565b5060010190565b6420a9aa16ab60d91b81526bffffffffffffffffffffffff198360601b166005820152602d60f81b601982015260008251612a2181601a850160208701611a19565b91909101601a019392505050565b6000823561013e19833603018112612a4657600080fd5b9190910192915050565b60008235603e19833603018112612a4657600080fd5b600060208284031215612a7857600080fd5b81356115b781611a7c565b604081526000612a9660408301856123c4565b905060018060a01b03831660208301529392505050565b600080600060608486031215612ac257600080fd5b8351925060208401516001600160401b03811115612adf57600080fd5b612aeb8682870161285e565b92505060408401519050925092509256fea26469706673582212207f5328c7e9e791ccbc6d68fb0a06d2bfe6cb1bc41511a8280d6af8c3add6597d64736f6c63430008110033",
    "sourceMap": "1267:1739:151:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101da5760003560e01c806366d003ac11610104578063c0e9b053116100a2578063dc2fbaee11610071578063dc2fbaee14610381578063f5f1f1a7146103e6578063f698da25146103ee578063fc0e74d1146103f657600080fd5b8063c0e9b053146103a9578063c237c703146103b1578063ca5eb5e1146103cb578063cb58189d146103de57600080fd5b80638da5cb5b116100de5780638da5cb5b1461038957806395d89b4114610391578063ac4746ab14610399578063ba9a061a146103a157600080fd5b806366d003ac146103665780636e553f651461036e578063834029ba1461038157600080fd5b80633177e0fe1161017c578063474a1e541161014b578063474a1e54146103025780634880d1981461031557806351ab5c4914610337578063627cdcb91461035e57600080fd5b80633177e0fe146102b457806332fe7b26146102c757806338d52e0f146102e75780633c96ce12146102ef57600080fd5b8063150b7a02116101b8578063150b7a021461023e5780632917e097146102765780632e1a7d4d1461028957806330040e771461029e57600080fd5b806301ffc9a7146101df57806306fdde0314610208578063133321d21461021d575b600080fd5b6101f36101ed3660046119ef565b50600090565b60405190151581526020015b60405180910390f35b6102106103fe565b6040516101ff9190611a69565b61023061022b366004611ab3565b610491565b6040516101ff929190611c64565b61025d61024c366004611c9d565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016101ff565b610210610284366004611d3b565b61091a565b61029c610297366004611d66565b61093d565b005b6102a6610984565b6040519081526020016101ff565b61029c6102c2366004611d8d565b610997565b6102cf6109b3565b6040516001600160a01b0390911681526020016101ff565b6102cf6109c4565b61029c6102fd366004611d66565b6109d0565b61029c610310366004611dc6565b610a2b565b610328610323366004611e00565b610b8a565b6040516101ff93929190611e46565b6102a67f679f3933bd13bd2e4ec6e9cde341ede07736ad7b635428a8a211e9cccb4393b081565b61029c610ca4565b6102cf610d62565b6102a661037c366004611e6f565b610d83565b61029c610997565b6102cf610de9565b610210610df5565b6102a6610e7d565b6102a6610e89565b6101f3610e95565b6103b9610eab565b60405160ff90911681526020016101ff565b61029c6103d9366004611e94565b610eb7565b6102a6610f89565b6102cf610f95565b6102a6611000565b61029c61107f565b60606104086109c4565b6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610445573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261046d9190810190611f85565b60405160200161047d9190612018565b604051602081830303815290604052905090565b606061049b611935565b6104a36109b3565b6001600160a01b0316635c975abb6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610504919061204a565b1561052e57600860405163eac08f1960e01b81526004016105259190612067565b60405180910390fd5b6105366110eb565b6001015460ff161561055e57600760405163eac08f1960e01b81526004016105259190612067565b60006105686109b3565b6001600160a01b03166341700b976040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c9919061208f565b9050600080826001600160a01b03166365b95e0a8a8a8a60ff168181106105f2576105f26120ac565b90506101c002016040518263ffffffff1660e01b815260040161061591906121d8565b6040805180830381865afa158015610631573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065591906121e7565b915091506106616109c4565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156106a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cb919061220b565b8111156106ee57600460405163eac08f1960e01b81526004016105259190612067565b6106ff866106fa610d62565b611119565b61078461070a6109b3565b6001600160a01b03166396d6401d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610747573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076b919061208f565b826107746109c4565b6001600160a01b03169190611476565b826001600160a01b0316635b2ed28760405180604001604052808a60ff16815260200160405180608001604052808781526020016107c0610d62565b6001600160a01b031681526020016107d66109b3565b6001600160a01b031663349d947b8d60006040518363ffffffff1660e01b81526004016108049291906124fa565b610140604051808303816000875af1158015610824573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084891906125f9565b81526020018e8e808060200260200160405190810160405280939291908181526020016000905b8282101561089c5761088d6101c08302860136819003810190612677565b8152602001906001019061086f565b50505050508152508152506040518263ffffffff1660e01b81526004016108c39190612763565b6000604051808303816000875af11580156108e2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261090a91908101906128e8565b9450945050505094509492505050565b606060006109266110eb565b90506109338185856114f3565b9150505b92915050565b610945610de9565b6001600160a01b0316336001600160a01b03161461096257600080fd5b6109813033836109706109c4565b6001600160a01b03169291906115be565b50565b600061098e6110eb565b60020154905090565b600060405163eac08f1960e01b81526004016105259190612067565b60006109bf6000611648565b905090565b60006109bf6029611648565b6109d8610de9565b6001600160a01b0316336001600160a01b0316146109f557600080fd5b6109fe8161166d565b610a066110eb565b80546affffffffffffffffffffff19166001600160581b039290921691909117905550565b610a336109b3565b6001600160a01b0316336001600160a01b031614610a5057600080fd5b6000610a5a6110eb565b90506000610a6b6020840184611e94565b6001600160a01b031614610aad57610a866020830183611e94565b81546001600160a01b0391909116600160581b02600160581b600160f81b03199091161781555b610aba826060013561166d565b81546affffffffffffffffffffff19166001600160581b0391909116178155610ae96040830160208401612937565b15610b865780546001600160f81b0316600160f81b17815560005b610b116040840184612954565b9050811015610b84576001600383016000610b2f6040870187612954565b85818110610b3f57610b3f6120ac565b9050602002016020810190610b549190611e94565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055600101610b04565b505b5050565b600060606000610b986109b3565b6001600160a01b0316635c975abb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf9919061204a565b15610c1a57600860405163eac08f1960e01b81526004016105259190612067565b610c226110eb565b6001015460ff1615610c4a57600760405163eac08f1960e01b81526004016105259190612067565b6000610c568686611683565b82519397509195509093509150610c9c908490610c75906001906129b3565b81518110610c8557610c856120ac565b602002602001015160200151604001518583610b84565b509250925092565b6000610cae6110eb565b9050610cb8610de9565b6001600160a01b0316336001600160a01b031614158015610cea57508054600160581b90046001600160a01b03163314155b15610d0b57600060405163eac08f1960e01b81526004016105259190612067565b600281018054906000610d1d836129c6565b91905055507fc6f316165836b9a9ca658ba2e3bbf32b3acff9aca1956fc77393fb506d26b0d68160020154604051610d5791815260200190565b60405180910390a150565b60006001610d6e610eab565b60ff1603610d7b57503090565b6109bf610de9565b600080610d8e6110eb565b33600090815260038201602052604090205490915060ff168015610dca5750610db5610de9565b6001600160a01b0316836001600160a01b0316145b610dd357600080fd5b610de13330866109706109c4565b509192915050565b60006109bf6015611648565b6060610dff610de9565b610e076109c4565b6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610e44573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e6c9190810190611f85565b60405160200161047d9291906129df565b60006109bf605d61175f565b60006109bf603d61175f565b6000610e9f6110eb565b6001015460ff16919050565b60006109bf6014611781565b610ebf610de9565b6001600160a01b0316336001600160a01b031614610edc57600080fd5b6000610ee66110eb565b8054600160581b600160f81b031916600160581b6001600160a01b0385169081029190911782556040519081529091507fbf313af507f7586dc28510c0974f0196ee356634bf104cf3ab61a28a2616c1549060200160405180910390a1604080516001600160a01b0384168152600160208201527f73121574a4eadb4cfdeb2ba56a6a88067b03edd1f0a0dfcac0a5a95682a24367910160405180910390a15050565b60006109bf607d61175f565b6000610f9f6109b3565b6001600160a01b031663f5f1f1a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fdc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bf919061208f565b604080517f2aef22f9d7df5f9d21c56d14029233f3fdaa91917727e1eb68e504d27072d6cd60208201527f044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d9181019190915246606082015230608082015260009060a00160405160208183030381529060405280519060200120905090565b611087610de9565b6001600160a01b0316336001600160a01b0316146110a457600080fd5b60016110ae6110eb565b600101805460ff19169115159190911790556040517f43849b84f1a1ce86ba1205cd8a5d4fa1563bca4b169db452674f94b4b6ddaa6990600090a1565b60008061093760017f8db05f23e24c991e45d8dd3599daf8e419ee5ab93565cf65b18905286a24ec146129b3565b60006111466020840180359061112f9086611e94565b6001600160a01b03166000526020526034600c2090565b90506000611152610f95565b6040516331a9108f60e11b8152600481018490529091506000906001600160a01b03831690636352211e90602401602060405180830381865afa15801561119d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c1919061208f565b60405163020604bf60e21b8152600481018590529091506000906001600160a01b0384169063081812fc90602401602060405180830381865afa15801561120c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611230919061208f565b9050336001600160a01b0383161480159061125d5750816001600160a01b0316856001600160a01b031614155b801561127b5750806001600160a01b0316856001600160a01b031614155b80156112f4575060405163e985e9c560e01b81526001600160a01b03838116600483015233602483015284169063e985e9c590604401602060405180830381865afa1580156112ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f2919061204a565b155b1561131557600060405163eac08f1960e01b81526004016105259190612067565b600061131f6110eb565b9050600060016113578361133660408c018c612a2f565b61134360408d018d612a2f565b6113519060a0810190612a50565b356114f3565b805160209091012061136c60408b018b612a2f565b61137e9061010081019060e001612a66565b61138b60408c018c612a2f565b610100013561139d60408d018d612a2f565b6040805160008152602081018083529590955260ff9093169284019290925260608301526101200135608082015260a0016020604051602081039080840390855afa1580156113f0573d6000803e3d6000fd5b505050602060405103519050611404610de9565b6001600160a01b0316816001600160a01b031614158015611439575081546001600160a01b03828116600160581b9092041614155b8061144b57506001600160a01b038116155b1561146c57600160405163eac08f1960e01b81526004016105259190612067565b5050505050505050565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806114ed5760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b6044820152606401610525565b50505050565b606060007f679f3933bd13bd2e4ec6e9cde341ede07736ad7b635428a8a211e9cccb4393b0856002015485602001358560405160200161154c949392919093845260208401929092526040830152606082015260800190565b60408051601f1981840301815291905280516020909101209050601960f81b600160f81b611578611000565b6040516001600160f81b031993841660208201529290911660218301526022820152604281018290526062016040516020818303038152906040529150505b9392505050565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806116415760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606401610525565b5050505050565b60008061165f600119368181013560f01c90030190565b929092013560601c92915050565b6000600160581b821061167f57600080fd5b5090565b600060606000806116948686611119565b61169c6109b3565b6001600160a01b03166345be6867876116b3610d62565b6040518363ffffffff1660e01b81526004016116d0929190612a83565b6000604051808303816000875af11580156116ef573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526117179190810190612aad565b9195509350915061173761172e6040880188612a2f565b60c001356117a6565b905061175685826117466109c4565b6001600160a01b031691906118bd565b92959194509250565b600080611776600119368181013560f01c90030190565b929092013592915050565b600080611798600119368181013560f01c90030190565b929092013560f81c92915050565b6000806117b16109b3565b6001600160a01b031663017e7e586040518163ffffffff1660e01b81526004016020604051808303816000875af11580156117f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611814919061208f565b90506001600160a01b03811615801590610de15760006118326109b3565b6001600160a01b0316630f0245ad866040518263ffffffff1660e01b815260040161185f91815260200190565b602060405180830381865afa15801561187c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118a0919061220b565b905080850394506118b483826117466109c4565b50509192915050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806114ed5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606401610525565b6040518060400160405280611948611977565b81526040805160808101825260008082526020828101829052928201819052606082015291015290565b905290565b6040518060c00160405280600060ff16815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008019168152602001600081526020016119726040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b600060208284031215611a0157600080fd5b81356001600160e01b0319811681146115b757600080fd5b60005b83811015611a34578181015183820152602001611a1c565b50506000910152565b60008151808452611a55816020860160208601611a19565b601f01601f19169290920160200192915050565b6020815260006115b76020830184611a3d565b60ff8116811461098157600080fd5b8035611a9681611a7c565b919050565b600060608284031215611aad57600080fd5b50919050565b60008060008060608587031215611ac957600080fd5b84356001600160401b0380821115611ae057600080fd5b818701915087601f830112611af457600080fd5b813581811115611b0357600080fd5b8860206101c083028501011115611b1957600080fd5b60208301965080955050611b2f60208801611a8b565b93506040870135915080821115611b4557600080fd5b50611b5287828801611a9b565b91505092959194509250565b805160ff1682526020808201516001600160a01b039081168285015260408084015190911681850152606080840151818601526080808501518187015260a0948501518051958701959095529284015160c08601529083015160e0850152820151610100840152015161012090910152565b611bdb828251611b5e565b60209081015180516001600160581b03166101408401529081015164ffffffffff908116610160840152604082015116610180830152606001516101a090910152565b600081518084526020808501945080840160005b83811015611c5957611c45878351611bd0565b6101c0969096019590820190600101611c32565b509495945050505050565b60006101e0808352611c7881840186611c1e565b9150506115b76020830184611bd0565b6001600160a01b038116811461098157600080fd5b600080600080600060808688031215611cb557600080fd5b8535611cc081611c88565b94506020860135611cd081611c88565b93506040860135925060608601356001600160401b0380821115611cf357600080fd5b818801915088601f830112611d0757600080fd5b813581811115611d1657600080fd5b896020828501011115611d2857600080fd5b9699959850939650602001949392505050565b60008060808385031215611d4e57600080fd5b611d588484611a9b565b946060939093013593505050565b600060208284031215611d7857600080fd5b5035919050565b801515811461098157600080fd5b60008060408385031215611da057600080fd5b8235611dab81611c88565b91506020830135611dbb81611d7f565b809150509250929050565b600060208284031215611dd857600080fd5b81356001600160401b03811115611dee57600080fd5b8201608081850312156115b757600080fd5b60008060408385031215611e1357600080fd5b82356001600160401b03811115611e2957600080fd5b611e3585828601611a9b565b9250506020830135611dbb81611c88565b838152606060208201526000611e5f6060830185611c1e565b9050826040830152949350505050565b60008060408385031215611e8257600080fd5b823591506020830135611dbb81611c88565b600060208284031215611ea657600080fd5b81356115b781611c88565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715611ee957611ee9611eb1565b60405290565b604051608081016001600160401b0381118282101715611ee957611ee9611eb1565b604080519081016001600160401b0381118282101715611ee957611ee9611eb1565b60405160a081016001600160401b0381118282101715611ee957611ee9611eb1565b604051601f8201601f191681016001600160401b0381118282101715611f7d57611f7d611eb1565b604052919050565b600060208284031215611f9757600080fd5b81516001600160401b0380821115611fae57600080fd5b818401915084601f830112611fc257600080fd5b815181811115611fd457611fd4611eb1565b611fe7601f8201601f1916602001611f55565b9150808252856020828501011115611ffe57600080fd5b61200f816020840160208601611a19565b50949350505050565b694153542d5661756c742d60b01b81526000825161203d81600a850160208701611a19565b91909101600a0192915050565b60006020828403121561205c57600080fd5b81516115b781611d7f565b602081016009831061208957634e487b7160e01b600052602160045260246000fd5b91905290565b6000602082840312156120a157600080fd5b81516115b781611c88565b634e487b7160e01b600052603260045260246000fd5b6001600160581b038116811461098157600080fd5b64ffffffffff8116811461098157600080fd5b80356120f5816120c2565b6001600160581b03168252602081013561210e816120d7565b64ffffffffff908116602084015260408201359061212b826120d7565b166040830152606090810135910152565b803561214781611a7c565b60ff168252602081013561215a81611c88565b6001600160a01b03908116602084015260408201359061217982611c88565b166040830152606081810135908301526080808201359083015260a0808201359083015260c0808201359083015260e0808201359083015261010080820135908301526101208082013590830152610140610b848184018284016120ea565b6101c08101610937828461213c565b600080604083850312156121fa57600080fd5b505080516020909101519092909150565b60006020828403121561221d57600080fd5b5051919050565b6000808335601e1984360301811261223b57600080fd5b83016020810192503590506001600160401b0381111561225a57600080fd5b6101c08102360382131561226d57600080fd5b9250929050565b81835260208301925060008160005b848110156122a957612295868361213c565b6101c0958601959190910190600101612283565b5093949350505050565b6000808335601e198436030181126122ca57600080fd5b83016020810192503590506001600160401b038111156122e957600080fd5b80360382131561226d57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008235603e1983360301811261233757600080fd5b90910192915050565b8035825260006020820135601e1983360301811261235d57600080fd5b82016020810190356001600160401b0381111561237957600080fd5b8060051b80360383131561238c57600080fd5b60406020870181905286018290526001600160fb1b038211156123ae57600080fd5b8083606088013794909401606001949350505050565b600081356123d181611c88565b6001600160a01b039081168452602083810135908501526040830135903684900361013e1901821261240257600080fd5b6060604086015290830190813561241881611a7c565b60ff16606086015260208201356080860152604082013561243881611c88565b1660a085015261244b6060820182612224565b6101408060c08801526124636101a088018385612274565b925061247260808501856122b3565b9250605f19808986030160e08a015261248c8585846122f8565b945061249b60a0870187612321565b935061010091508089860301828a0152506124b68484612340565b9350610120925060c0850135838901526124d260e08601611a8b565b60ff811689840152508401356101608801525090910135610180909401939093525090919050565b60408152600061250d60408301856123c4565b90508260208301529392505050565b600081830361014081121561253057600080fd5b612538611ec7565b9150825161254581611a7c565b8252602083015161255581611c88565b6020830152604083015161256881611c88565b6040830152606083810151908301526080808401519083015260a0609f198201121561259357600080fd5b5060405160a081018181106001600160401b03821117156125b6576125b6611eb1565b806040525060a0830151815260c0830151602082015260e08301516040820152610100830151606082015261012083015160808201528060a08301525092915050565b6000610140828403121561260c57600080fd5b6115b7838361251c565b60006080828403121561262857600080fd5b612630611eef565b9050813561263d816120c2565b8152602082013561264d816120d7565b60208201526040820135612660816120d7565b806040830152506060820135606082015292915050565b60008183036101c081121561268b57600080fd5b612693611f11565b610140808312156126a357600080fd5b6126ab611ec7565b85356126b681611a7c565b815260208601356126c681611c88565b602082015260408601356126d981611c88565b6040820152606086810135908201526080808701359082015260a0609f198501121561270457600080fd5b61270c611f33565b935060a0860135845260c0860135602085015260e08601356040850152610100860135606085015261012086013560808501528360a08201528083525061275586828701612616565b602083015250949350505050565b6020815260ff8251166020820152600060208301516040808401528051606084015260018060a01b03602082015116608084015260408101516127a960a0850182611b5e565b50606001516101a06101e0840152610933610200840182611c1e565b60008183036101c08112156127d957600080fd5b6127e1611f11565b91506127ed848461251c565b8252608061013f198201121561280257600080fd5b5061280b611eef565b61014083015161281a816120c2565b815261016083015161282b816120d7565b602082015261018083015161283f816120d7565b806040830152506101a083015160608201528060208301525092915050565b600082601f83011261286f57600080fd5b815160206001600160401b0382111561288a5761288a611eb1565b612898818360051b01611f55565b8281526101c092830285018201928282019190878511156128b857600080fd5b8387015b858110156128db576128ce89826127c5565b84529284019281016128bc565b5090979650505050505050565b6000806101e083850312156128fc57600080fd5b82516001600160401b0381111561291257600080fd5b61291e8582860161285e565b92505061292e84602085016127c5565b90509250929050565b60006020828403121561294957600080fd5b81356115b781611d7f565b6000808335601e1984360301811261296b57600080fd5b8301803591506001600160401b0382111561298557600080fd5b6020019150600581901b360382131561226d57600080fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156109375761093761299d565b6000600182016129d8576129d861299d565b5060010190565b6420a9aa16ab60d91b81526bffffffffffffffffffffffff198360601b166005820152602d60f81b601982015260008251612a2181601a850160208701611a19565b91909101601a019392505050565b6000823561013e19833603018112612a4657600080fd5b9190910192915050565b60008235603e19833603018112612a4657600080fd5b600060208284031215612a7857600080fd5b81356115b781611a7c565b604081526000612a9660408301856123c4565b905060018060a01b03831660208301529392505050565b600080600060608486031215612ac257600080fd5b8351925060208401516001600160401b03811115612adf57600080fd5b612aeb8682870161285e565b92505060408401519050925092509256fea26469706673582212207f5328c7e9e791ccbc6d68fb0a06d2bfe6cb1bc41511a8280d6af8c3add6597d64736f6c63430008110033",
    "sourceMap": "1267:1739:151:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1756:133;;;;;;:::i;:::-;-1:-1:-1;1858:4:151;;1756:133;;;;470:14:200;;463:22;445:41;;433:2;418:18;1756:133:151;;;;;;;;1345:193;;;:::i;:::-;;;;;;;:::i;10458:1137:152:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;4498:235::-;;;;;;:::i;:::-;-1:-1:-1;;;4498:235:152;;;;;;;;;;;-1:-1:-1;;;;;;6218:33:200;;;6200:52;;6188:2;6173:18;4498:235:152;6056:202:200;5678:240:152;;;;;;:::i;:::-;;:::i;2190:156:151:-;;;;;;:::i;:::-;;:::i;:::-;;2714:109:152;;;:::i;:::-;;;7146:25:200;;;7134:2;7119:18;2714:109:152;7000:177:200;2767:237:151;;;;;;:::i;:::-;;:::i;1551:119:143:-;;;:::i;:::-;;;-1:-1:-1;;;;;7880:32:200;;;7862:51;;7850:2;7835:18;1551:119:143;7692:227:200;1874:154:143;;;:::i;3205:170:152:-;;;;;;:::i;:::-;;:::i;6305:524::-;;;;;;:::i;:::-;;:::i;9773:486::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;2139:121::-;;2187:73;2139:121;;2827:276;;;:::i;11971:204::-;;;:::i;1893:293:151:-;;;;;;:::i;:::-;;:::i;2350:205::-;;;:::i;1774:96:143:-;;;:::i;1542:210:151:-;;;:::i;2119:104:143:-;;;:::i;2032:83::-;;;:::i;4974:94:152:-;;;:::i;1674:96:143:-;;;:::i;:::-;;;10166:4:200;10154:17;;;10136:36;;10124:2;10109:18;1674:96:143;9994:184:200;6833:261:152;;;;;;:::i;:::-;;:::i;2227:88:143:-;;;:::i;2319:112::-;;;:::i;5233:237:152:-;;;:::i;5072:157::-;;;:::i;1345:193:151:-;1440:13;1514:7;:5;:7::i;:::-;-1:-1:-1;;;;;1508:21:151;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1508:23:151;;;;;;;;;;;;:::i;:::-;1477:55;;;;;;;;:::i;:::-;;;;;;;;;;;;;1463:70;;1345:193;:::o;10458:1137:152:-;10639:25;10666:23;;:::i;:::-;4772:8;:6;:8::i;:::-;-1:-1:-1;;;;;4772:15:152;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4768:88;;;4821:27;4806:43;;-1:-1:-1;;;4806:43:152;;;;;;;;:::i;:::-;;;;;;;;4768:88;4866:13;:11;:13::i;:::-;:24;;;;;4862:97;;;4922:29;4907:45;;-1:-1:-1;;;4907:45:152;;;;;;;;:::i;4862:97::-;10699:19:::1;10739:8;:6;:8::i;:::-;-1:-1:-1::0;;;;;10739:19:152::1;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10699:63;;10770:12;10784:14:::0;10802:9:::1;-1:-1:-1::0;;;;;10802:19:152::1;;10822:5;;10828:8;10822:15;;;;;;;;;:::i;:::-;;;;;;10802:36;;;;;;;;;;;;;;;:::i;:::-;;::::0;::::1;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10769:69;;;;10864:7;:5;:7::i;:::-;10858:39;::::0;-1:-1:-1;;;10858:39:152;;10891:4:::1;10858:39;::::0;::::1;7862:51:200::0;-1:-1:-1;;;;;10858:24:152;;;::::1;::::0;::::1;::::0;7835:18:200;;10858:39:152::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10849:6;:48;10845:168;;;10959:39;10914:92;;-1:-1:-1::0;;;10914:92:152::1;;;;;;;;:::i;10845:168::-;11019:47;11039:13;11054:11;:9;:11::i;:::-;11019:19;:47::i;:::-;11073:70;11108:8;:6;:8::i;:::-;-1:-1:-1::0;;;;;11108:23:152::1;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11136:6;11079:7;:5;:7::i;:::-;-1:-1:-1::0;;;;;11073:26:152::1;::::0;:70;:26:::1;:70::i;:::-;11163:9;-1:-1:-1::0;;;;;11163:20:152::1;;11193:389;;;;;;;;11243:8;11193:389;;;;;;11273:298;;;;;;;;11325:4;11273:298;;;;11353:11;:9;:11::i;:::-;-1:-1:-1::0;;;;;11273:298:152::1;;;;;11384:8;:6;:8::i;:::-;-1:-1:-1::0;;;;;11384:27:152::1;;11440:13:::0;11682:28;11384:148:::1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11273:298;;;;11553:5;;11273:298;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;::::1;;::::0;;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;11193:389:::1;;::::0;11163:427:::1;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;11163:427:152::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;11150:440;;;;;;;10458:1137:::0;;;;;;;:::o;5678:240::-;5810:12;5830:16;5849:13;:11;:13::i;:::-;5830:32;;5875:38;5895:1;5898:8;5908:4;5875:19;:38::i;:::-;5868:45;;;5678:240;;;;;:::o;2190:156:151:-;2261:7;:5;:7::i;:::-;-1:-1:-1;;;;;2247:21:151;:10;-1:-1:-1;;;;;2247:21:151;;2239:30;;;;;;2275:66;2315:4;2322:10;2334:6;2281:7;:5;:7::i;:::-;-1:-1:-1;;;;;2275:31:151;;:66;;:31;:66::i;:::-;2190:156;:::o;2714:109:152:-;2767:7;2789:13;:11;:13::i;:::-;:29;;;2782:36;;2714:109;:::o;2767:237:151:-;2965:33;2950:49;;-1:-1:-1;;;2950:49:151;;;;;;;;:::i;1551:119:143:-;1590:14;1634:17;1649:1;1634:14;:17::i;:::-;1612:40;;1551:119;:::o;1874:154::-;1968:7;1992:18;2007:2;1992:14;:18::i;3205:170:152:-;3284:7;:5;:7::i;:::-;-1:-1:-1;;;;;3270:21:152;:10;-1:-1:-1;;;;;3270:21:152;;3262:30;;;;;;3349:21;:6;:19;:21::i;:::-;3322:13;:11;:13::i;:::-;:48;;-1:-1:-1;;3322:48:152;-1:-1:-1;;;;;3322:48:152;;;;;;;;;;-1:-1:-1;3205:170:152:o;6305:524::-;6400:8;:6;:8::i;:::-;-1:-1:-1;;;;;6378:31:152;:10;-1:-1:-1;;;;;6378:31:152;;6370:40;;;;;;6416:16;6435:13;:11;:13::i;:::-;6416:32;-1:-1:-1;6486:1:152;6459:15;;;;:6;:15;:::i;:::-;-1:-1:-1;;;;;6459:29:152;;6455:78;;6511:15;;;;:6;:15;:::i;:::-;6498:28;;-1:-1:-1;;;;;6498:28:152;;;;-1:-1:-1;;;6498:28:152;-1:-1:-1;;;;;;;;6498:28:152;;;;;;6455:78;6553:32;:6;:17;;;:30;:32::i;:::-;6538:47;;-1:-1:-1;;6538:47:152;-1:-1:-1;;;;;6538:47:152;;;;;;;6595:23;;;;;;;;:::i;:::-;6591:234;;;6628:25;;-1:-1:-1;;;;;6628:25:152;-1:-1:-1;;;6628:25:152;;;:18;6678:141;6689:16;;;;:6;:16;:::i;:::-;:23;;6685:1;:27;6678:141;;;6761:4;6726:11;;;:32;6738:16;;;;:6;:16;:::i;:::-;6755:1;6738:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6726:32:152;;;;;;;;;;;;-1:-1:-1;6726:32:152;:39;;-1:-1:-1;;6726:39:152;;;;;;;;;;-1:-1:-1;6797:3:152;6678:141;;;6620:205;6591:234;6364:465;6305:524;:::o;9773:486::-;9912:14;9928:31;9961:14;4772:8;:6;:8::i;:::-;-1:-1:-1;;;;;4772:15:152;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4768:88;;;4821:27;4806:43;;-1:-1:-1;;;4806:43:152;;;;;;;;:::i;4768:88::-;4866:13;:11;:13::i;:::-;:24;;;;;4862:97;;;4922:29;4907:45;;-1:-1:-1;;;4907:45:152;;;;;;;;:::i;4862:97::-;10018:21:::1;10086:62;10120:6;10134:8;10086:26;:62::i;:::-;10186:12:::0;;10045:103;;-1:-1:-1;10045:103:152;;-1:-1:-1;10045:103:152;;-1:-1:-1;10045:103:152;-1:-1:-1;10154:100:152::1;::::0;10045:103;;10186:16:::1;::::0;10201:1:::1;::::0;10186:16:::1;:::i;:::-;10180:23;;;;;;;;:::i;:::-;;;;;;;:29;;;:33;;;10221:6;10235:13;10154:18;:100::i;:::-;9979:280;9773:486:::0;;;;;:::o;2827:276::-;2868:16;2887:13;:11;:13::i;:::-;2868:32;;2924:7;:5;:7::i;:::-;-1:-1:-1;;;;;2910:21:152;:10;-1:-1:-1;;;;;2910:21:152;;;:49;;;;-1:-1:-1;2949:10:152;;-1:-1:-1;;;2949:10:152;;-1:-1:-1;;;;;2949:10:152;2935;:24;;2910:49;2906:126;;;2991:33;2976:49;;-1:-1:-1;;;2976:49:152;;;;;;;;:::i;2906:126::-;3037:17;;;:19;;;:17;:19;;;:::i;:::-;;;;;;3067:31;3080:1;:17;;;3067:31;;;;7146:25:200;;7134:2;7119:18;;7000:177;3067:31:152;;;;;;;;2862:241;2827:276::o;11971:204::-;12013:7;12053:45;12032:11;:9;:11::i;:::-;:67;;;12028:143;;-1:-1:-1;12124:4:152;;11971:204::o;12028:143::-;12157:7;:5;:7::i;1893:293:151:-;1980:7;1997:16;2016:13;:11;:13::i;:::-;2055:10;2043:23;;;;:11;;;:23;;;;;;1997:32;;-1:-1:-1;2043:23:151;;:46;;;;;2082:7;:5;:7::i;:::-;-1:-1:-1;;;;;2070:19:151;:8;-1:-1:-1;;;;;2070:19:151;;2043:46;2035:55;;;;;;2096:66;2128:10;2148:4;2155:6;2102:7;:5;:7::i;2096:66::-;-1:-1:-1;2175:6:151;;1893:293;-1:-1:-1;;1893:293:151:o;1774:96:143:-;1812:7;1834:18;1849:2;1834:14;:18::i;1542:210:151:-;1639:13;1708:7;:5;:7::i;:::-;1728;:5;:7::i;:::-;-1:-1:-1;;;;;1722:21:151;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1722:23:151;;;;;;;;;;;;:::i;:::-;1682:64;;;;;;;;;:::i;2119:104:143:-;2164:7;2186:18;2201:2;2186:14;:18::i;2032:83::-;2070:7;2092:18;2107:2;2092:14;:18::i;4974:94:152:-;5020:4;5039:13;:11;:13::i;:::-;:24;;;;;;4974:94;-1:-1:-1;4974:94:152:o;1674:96:143:-;1716:5;1736:16;1749:2;1736:12;:16::i;6833:261:152:-;6910:7;:5;:7::i;:::-;-1:-1:-1;;;;;6896:21:152;:10;-1:-1:-1;;;;;6896:21:152;;6888:30;;;;;;6948:16;6967:13;:11;:13::i;:::-;6986:22;;-1:-1:-1;;;;;;;;6986:22:152;-1:-1:-1;;;;;;;;6986:22:152;;;;;;;;;;;7019:26;;7862:51:200;;;6986:22:152;;-1:-1:-1;7019:26:152;;7850:2:200;7835:18;7019:26:152;;;;;;;7056:33;;;-1:-1:-1;;;;;31452:32:200;;31434:51;;7084:4:152;31516:2:200;31501:18;;31494:50;7056:33:152;;31407:18:200;7056:33:152;;;;;;;6882:212;6833:261;:::o;2227:88:143:-;2269:7;2291:19;2306:3;2291:14;:19::i;2319:112::-;2368:16;2399:8;:6;:8::i;:::-;-1:-1:-1;;;;;2399:25:143;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5233:237:152:-;5336:121;;;2299:95;5336:121;;;32068:25:200;2425:14:152;32109:18:200;;;32102:34;;;;5409:13:152;32152:18:200;;;32145:34;5442:4:152;32195:18:200;;;32188:60;5289:7:152;;32040:19:200;;5336:121:152;;;;;;;;;;;;5317:148;;;;;;5304:161;;5233:237;:::o;5072:157::-;5129:7;:5;:7::i;:::-;-1:-1:-1;;;;;5115:21:152;:10;-1:-1:-1;;;;;5115:21:152;;5107:30;;;;;;5194:4;5167:13;:11;:13::i;:::-;:24;;:31;;-1:-1:-1;;5167:31:152;;;;;;;;;;5209:15;;;;-1:-1:-1;;5209:15:152;5072:157::o;3379:140::-;3425:16;;2635:74;2708:1;2643:61;2635:74;:::i;7858:1110::-;7980:20;8003:46;8034:14;;;;;;8003:20;;8034:6;8003:20;:::i;:::-;-1:-1:-1;;;;;8003:30:152;1131:12:177;1170:16;1258:4;1251:21;1346:2;1342;1332:17;;1045:380;8003:46:152;7980:69;;8055:9;8082:18;:16;:18::i;:::-;8125:24;;-1:-1:-1;;;8125:24:152;;;;;7146:25:200;;;8055:47:152;;-1:-1:-1;8108:14:152;;-1:-1:-1;;;;;8125:10:152;;;;;7119:18:200;;8125:24:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8174:28;;-1:-1:-1;;;8174:28:152;;;;;7146:25:200;;;8108:41:152;;-1:-1:-1;8155:16:152;;-1:-1:-1;;;;;8174:14:152;;;;;7119:18:200;;8174:28:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8155:47;-1:-1:-1;8219:10:152;-1:-1:-1;;;;;8219:20:152;;;;;;:48;;;8261:6;-1:-1:-1;;;;;8249:18:152;:8;-1:-1:-1;;;;;8249:18:152;;;8219:48;:78;;;;;8289:8;-1:-1:-1;;;;;8277:20:152;:8;-1:-1:-1;;;;;8277:20:152;;;8219:78;:128;;;;-1:-1:-1;8308:39:152;;-1:-1:-1;;;8308:39:152;;-1:-1:-1;;;;;32745:15:200;;;8308:39:152;;;32727:34:200;8336:10:152;32777:18:200;;;32770:43;8308:19:152;;;;;32662:18:200;;8308:39:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8307:40;8219:128;8208:217;;;8384:33;8369:49;;-1:-1:-1;;;8369:49:152;;;;;;;;:::i;8208:217::-;8430:16;8449:13;:11;:13::i;:::-;8430:32;-1:-1:-1;8468:17:152;8488:257;8524:123;8430:32;8568:18;;;;:6;:18;:::i;:::-;8607;;;;:6;:18;:::i;:::-;:25;;;;;;;:::i;:::-;:30;8524:19;:123::i;:::-;8505:150;;;;;;;8663:18;;;;:6;:18;:::i;:::-;:20;;;;;;;;;:::i;:::-;8691:18;;;;:6;:18;:::i;:::-;:20;;;8719:18;;;;:6;:18;:::i;:::-;8488:257;;;;;;;;;;;;33970:25:200;;;;34043:4;34031:17;;;34011:18;;;34004:45;;;;34065:18;;;34058:34;8719:20:152;;;34108:18:200;;;34101:34;33942:19;;8488:257:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8468:277;;8776:7;:5;:7::i;:::-;-1:-1:-1;;;;;8763:20:152;:9;-1:-1:-1;;;;;8763:20:152;;;:47;;;;-1:-1:-1;8800:10:152;;-1:-1:-1;;;;;8787:23:152;;;-1:-1:-1;;;8800:10:152;;;;8787:23;;8763:47;8762:82;;;-1:-1:-1;;;;;;8821:23:152;;;8762:82;8751:213;;;8911:38;8866:91;;-1:-1:-1;;;8866:91:152;;;;;;;;:::i;8751:213::-;7974:994;;;;;;7858:1110;;:::o;4326:1454:141:-;4437:12;4564:4;4558:11;-1:-1:-1;;;4687:17:141;4680:93;4820:2;4816:1;4797:17;4793:25;4786:37;4900:6;4895:2;4876:17;4872:26;4865:42;5702:2;5699:1;5695:2;5676:17;5673:1;5666:5;5659;5654:51;5223:16;5216:24;5210:2;5192:16;5189:24;5185:1;5181;5175:8;5172:15;5168:46;5165:76;4965:754;4954:765;;;5747:7;5739:34;;;;-1:-1:-1;;;5739:34:141;;34348:2:200;5739:34:141;;;34330:21:200;34387:2;34367:18;;;34360:30;-1:-1:-1;;;34406:18:200;;;34399:44;34460:18;;5739:34:141;34146:338:200;5739:34:141;4427:1353;4326:1454;;;:::o;5922:379:152:-;6077:12;6097;2187:73;6159:1;:17;;;6178:8;:17;;;6197:4;6129:73;;;;;;;;;;34720:25:200;;;34776:2;34761:18;;34754:34;;;;34819:2;34804:18;;34797:34;34862:2;34847:18;;34840:34;34707:3;34692:19;;34489:391;6129:73:152;;;;-1:-1:-1;;6129:73:152;;;;;;;;;6112:96;;6129:73;6112:96;;;;;-1:-1:-1;;;;;;;6272:17:152;:15;:17::i;:::-;6227:69;;-1:-1:-1;;;;;;35138:15:200;;;6227:69:152;;;35126:28:200;35183:15;;;;35170:11;;;35163:36;35215:11;;;35208:27;35251:12;;;35244:28;;;35288:12;;6227:69:152;;;;;;;;;;;;6214:82;;;5922:379;;;;;;:::o;1285:1573:141:-;1423:12;1550:4;1544:11;-1:-1:-1;;;1673:17:141;1666:93;1806:4;1802:1;1783:17;1779:25;1772:39;1890:2;1885;1866:17;1862:26;1855:38;1970:6;1965:2;1946:17;1942:26;1935:42;2774:2;2771:1;2766:3;2747:17;2744:1;2737:5;2730;2725:52;2293:16;2286:24;2280:2;2262:16;2259:24;2255:1;2251;2245:8;2242:15;2238:46;2235:76;2035:756;2024:767;;;2819:7;2811:40;;;;-1:-1:-1;;;2811:40:141;;35513:2:200;2811:40:141;;;35495:21:200;35552:2;35532:18;;;35525:30;-1:-1:-1;;;35571:18:200;;;35564:50;35631:18;;2811:40:141;35311:344:200;2811:40:141;1413:1445;1285:1573;;;;:::o;354:318:0:-;444:11;471:14;488:25;-1:-1:-1;;3120:14:0;3116:22;;;3103:36;3098:3;3094:46;3037:121;;;;2864:310;488:25;632:22;;;;619:36;613:4;609:47;;354:318;-1:-1:-1;;354:318:0:o;1782:117:33:-;1838:8;-1:-1:-1;;;1862:1:33;:11;1854:20;;;;;;-1:-1:-1;1892:1:33;1782:117::o;12491:472:152:-;12628:17;12653:31;12692:13;12713:14;12742:32;12762:1;12765:8;12742:19;:32::i;:::-;12808:8;:6;:8::i;:::-;-1:-1:-1;;;;;12808:28:152;;12837:1;12840:11;:9;:11::i;:::-;12808:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12808:44:152;;;;;;;;;;;;:::i;:::-;12780:72;;-1:-1:-1;12780:72:152;-1:-1:-1;12780:72:152;-1:-1:-1;12867:40:152;12886:13;;;;:1;:13;:::i;:::-;:20;;;12867:18;:40::i;:::-;12858:49;;12913:45;12941:8;12951:6;12919:7;:5;:7::i;:::-;-1:-1:-1;;;;;12913:27:152;;:45;:27;:45::i;:::-;12491:472;;;;;;;:::o;835:307:0:-;925:11;952:14;969:25;-1:-1:-1;;3120:14:0;3116:22;;;3103:36;3098:3;3094:46;3037:121;;;;2864:310;969:25;1103:22;;;;1090:36;;835:307;-1:-1:-1;;835:307:0:o;2497:286::-;2561:9;2582:14;2599:25;-1:-1:-1;;3120:14:0;3116:22;;;3103:36;3098:3;3094:46;3037:121;;;;2864:310;2599:25;2743:22;;;;2730:36;2724:4;2720:47;;2497:286;-1:-1:-1;;2497:286:0:o;12967:344:152:-;13029:7;13044:13;13060:8;:6;:8::i;:::-;-1:-1:-1;;;;;13060:14:152;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13044:32;-1:-1:-1;;;;;;13095:19:152;;;;;;13120:168;;13139:11;13153:8;:6;:8::i;:::-;-1:-1:-1;;;;;13153:23:152;;13177:6;13153:31;;;;;;;;;;;;;7146:25:200;;7134:2;7119:18;;7000:177;13153:31:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13139:45;;13223:3;13213:13;;;;13242:39;13270:5;13277:3;13248:7;:5;:7::i;13242:39::-;13131:157;-1:-1:-1;13300:6:152;;12967:344;-1:-1:-1;;12967:344:152:o;2864:1456:141:-;2976:12;3103:4;3097:11;-1:-1:-1;;;3226:17:141;3219:93;3359:2;3355:1;3336:17;3332:25;3325:37;3439:6;3434:2;3415:17;3411:26;3404:42;4241:2;4238:1;4234:2;4215:17;4212:1;4205:5;4198;4193:51;3762:16;3755:24;3749:2;3731:16;3728:24;3724:1;3720;3714:8;3711:15;3707:46;3704:76;3504:754;3493:765;;;4286:7;4278:35;;;;-1:-1:-1;;;4278:35:141;;36763:2:200;4278:35:141;;;36745:21:200;36802:2;36782:18;;;36775:30;-1:-1:-1;;;36821:18:200;;;36814:45;36876:18;;4278:35:141;36561:339:200;-1:-1:-1;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:286:200;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:200;;209:43;;199:71;;266:1;263;256:12;497:250;582:1;592:113;606:6;603:1;600:13;592:113;;;682:11;;;676:18;663:11;;;656:39;628:2;621:10;592:113;;;-1:-1:-1;;739:1:200;721:16;;714:27;497:250::o;752:271::-;794:3;832:5;826:12;859:6;854:3;847:19;875:76;944:6;937:4;932:3;928:14;921:4;914:5;910:16;875:76;:::i;:::-;1005:2;984:15;-1:-1:-1;;980:29:200;971:39;;;;1012:4;967:50;;752:271;-1:-1:-1;;752:271:200:o;1028:220::-;1177:2;1166:9;1159:21;1140:4;1197:45;1238:2;1227:9;1223:18;1215:6;1197:45;:::i;1253:114::-;1337:4;1330:5;1326:16;1319:5;1316:27;1306:55;;1357:1;1354;1347:12;1372:130;1438:20;;1467:29;1438:20;1467:29;:::i;:::-;1372:130;;;:::o;1507:158::-;1570:5;1615:2;1606:6;1601:3;1597:16;1593:25;1590:45;;;1631:1;1628;1621:12;1590:45;-1:-1:-1;1653:6:200;1507:158;-1:-1:-1;1507:158:200:o;1670:963::-;1829:6;1837;1845;1853;1906:2;1894:9;1885:7;1881:23;1877:32;1874:52;;;1922:1;1919;1912:12;1874:52;1962:9;1949:23;-1:-1:-1;;;;;2032:2:200;2024:6;2021:14;2018:34;;;2048:1;2045;2038:12;2018:34;2086:6;2075:9;2071:22;2061:32;;2131:7;2124:4;2120:2;2116:13;2112:27;2102:55;;2153:1;2150;2143:12;2102:55;2193:2;2180:16;2219:2;2211:6;2208:14;2205:34;;;2235:1;2232;2225:12;2205:34;2295:7;2288:4;2278:6;2270;2266:19;2262:2;2258:28;2254:39;2251:52;2248:72;;;2316:1;2313;2306:12;2248:72;2347:4;2343:2;2339:13;2329:23;;2371:6;2361:16;;;2396:38;2428:4;2417:9;2413:20;2396:38;:::i;:::-;2386:48;;2487:2;2476:9;2472:18;2459:32;2443:48;;2516:2;2506:8;2503:16;2500:36;;;2532:1;2529;2522:12;2500:36;;2555:72;2619:7;2608:8;2597:9;2593:24;2555:72;:::i;:::-;2545:82;;;1670:963;;;;;;;:::o;2718:785::-;2792:12;;2806:4;2788:23;2776:36;;2858:4;2847:16;;;2841:23;-1:-1:-1;;;;;2934:21:200;;;2918:14;;;2911:45;3009:4;2998:16;;;2992:23;2988:32;;;2972:14;;;2965:56;3070:4;3059:16;;;3053:23;3037:14;;;3030:47;3126:4;3115:16;;;3109:23;3093:14;;;3086:47;2891:3;3170:16;;;3164:23;3219:21;;3203:14;;;3196:45;;;;3278:25;;;3272:32;3266:3;3257:13;;3250:55;3342:25;;;3336:32;3330:3;3321:13;;3314:55;3406:25;;3400:32;3394:3;3385:13;;3378:55;3470:25;3464:32;3458:3;3449:13;;;3442:55;2718:785::o;3508:523::-;3567:41;3604:3;3596:5;3590:12;3567:41;:::i;:::-;3654:4;3643:16;;;3637:23;3698:19;;-1:-1:-1;;;;;3694:50:200;3685:6;3676:16;;3669:76;3782:23;;;3776:30;3825:12;3868:23;;;3862:3;3853:13;;3846:46;3951:4;3933:23;;3927:30;3923:39;3917:3;3908:13;;3901:62;4018:4;4000:23;3994:30;3988:3;3979:13;;;3972:53;3508:523::o;4036:461::-;4094:3;4132:5;4126:12;4159:6;4154:3;4147:19;4185:4;4214:2;4209:3;4205:12;4198:19;;4251:2;4244:5;4240:14;4272:1;4282:190;4296:6;4293:1;4290:13;4282:190;;;4345:43;4384:3;4375:6;4369:13;4345:43;:::i;:::-;4417:6;4408:16;;;;;4447:15;;;;4318:1;4311:9;4282:190;;;-1:-1:-1;4488:3:200;;4036:461;-1:-1:-1;;;;;4036:461:200:o;4502:472::-;4768:4;4797:3;4827:2;4816:9;4809:21;4847:61;4904:2;4893:9;4889:18;4881:6;4847:61;:::i;:::-;4839:69;;;4917:51;4964:2;4953:9;4949:18;4941:6;4917:51;:::i;4979:131::-;-1:-1:-1;;;;;5054:31:200;;5044:42;;5034:70;;5100:1;5097;5090:12;5115:936;5212:6;5220;5228;5236;5244;5297:3;5285:9;5276:7;5272:23;5268:33;5265:53;;;5314:1;5311;5304:12;5265:53;5353:9;5340:23;5372:31;5397:5;5372:31;:::i;:::-;5422:5;-1:-1:-1;5479:2:200;5464:18;;5451:32;5492:33;5451:32;5492:33;:::i;:::-;5544:7;-1:-1:-1;5598:2:200;5583:18;;5570:32;;-1:-1:-1;5653:2:200;5638:18;;5625:32;-1:-1:-1;;;;;5706:14:200;;;5703:34;;;5733:1;5730;5723:12;5703:34;5771:6;5760:9;5756:22;5746:32;;5816:7;5809:4;5805:2;5801:13;5797:27;5787:55;;5838:1;5835;5828:12;5787:55;5878:2;5865:16;5904:2;5896:6;5893:14;5890:34;;;5920:1;5917;5910:12;5890:34;5965:7;5960:2;5951:6;5947:2;5943:15;5939:24;5936:37;5933:57;;;5986:1;5983;5976:12;5933:57;5115:936;;;;-1:-1:-1;5115:936:200;;-1:-1:-1;6017:2:200;6009:11;;6039:6;5115:936;-1:-1:-1;;;5115:936:200:o;6263:324::-;6372:6;6380;6433:3;6421:9;6412:7;6408:23;6404:33;6401:53;;;6450:1;6447;6440:12;6401:53;6473:57;6522:7;6511:9;6473:57;:::i;:::-;6463:67;6577:2;6562:18;;;;6549:32;;-1:-1:-1;;;6263:324:200:o;6815:180::-;6874:6;6927:2;6915:9;6906:7;6902:23;6898:32;6895:52;;;6943:1;6940;6933:12;6895:52;-1:-1:-1;6966:23:200;;6815:180;-1:-1:-1;6815:180:200:o;7182:118::-;7268:5;7261:13;7254:21;7247:5;7244:32;7234:60;;7290:1;7287;7280:12;7305:382;7370:6;7378;7431:2;7419:9;7410:7;7406:23;7402:32;7399:52;;;7447:1;7444;7437:12;7399:52;7486:9;7473:23;7505:31;7530:5;7505:31;:::i;:::-;7555:5;-1:-1:-1;7612:2:200;7597:18;;7584:32;7625:30;7584:32;7625:30;:::i;:::-;7674:7;7664:17;;;7305:382;;;;;:::o;8132:391::-;8222:6;8275:2;8263:9;8254:7;8250:23;8246:32;8243:52;;;8291:1;8288;8281:12;8243:52;8331:9;8318:23;-1:-1:-1;;;;;8356:6:200;8353:30;8350:50;;;8396:1;8393;8386:12;8350:50;8419:22;;8475:3;8457:16;;;8453:26;8450:46;;;8492:1;8489;8482:12;8528:498;8627:6;8635;8688:2;8676:9;8667:7;8663:23;8659:32;8656:52;;;8704:1;8701;8694:12;8656:52;8744:9;8731:23;-1:-1:-1;;;;;8769:6:200;8766:30;8763:50;;;8809:1;8806;8799:12;8763:50;8832:70;8894:7;8885:6;8874:9;8870:22;8832:70;:::i;:::-;8822:80;;;8952:2;8941:9;8937:18;8924:32;8965:31;8990:5;8965:31;:::i;9031:456::-;9314:6;9303:9;9296:25;9357:2;9352;9341:9;9337:18;9330:30;9277:4;9377:61;9434:2;9423:9;9419:18;9411:6;9377:61;:::i;:::-;9369:69;;9474:6;9469:2;9458:9;9454:18;9447:34;9031:456;;;;;;:::o;9674:315::-;9742:6;9750;9803:2;9791:9;9782:7;9778:23;9774:32;9771:52;;;9819:1;9816;9809:12;9771:52;9855:9;9842:23;9832:33;;9915:2;9904:9;9900:18;9887:32;9928:31;9953:5;9928:31;:::i;10183:247::-;10242:6;10295:2;10283:9;10274:7;10270:23;10266:32;10263:52;;;10311:1;10308;10301:12;10263:52;10350:9;10337:23;10369:31;10394:5;10369:31;:::i;10669:127::-;10730:10;10725:3;10721:20;10718:1;10711:31;10761:4;10758:1;10751:15;10785:4;10782:1;10775:15;10801:253;10873:2;10867:9;10915:4;10903:17;;-1:-1:-1;;;;;10935:34:200;;10971:22;;;10932:62;10929:88;;;10997:18;;:::i;:::-;11033:2;11026:22;10801:253;:::o;11059:::-;11131:2;11125:9;11173:4;11161:17;;-1:-1:-1;;;;;11193:34:200;;11229:22;;;11190:62;11187:88;;;11255:18;;:::i;11317:257::-;11389:4;11383:11;;;11421:17;;-1:-1:-1;;;;;11453:34:200;;11489:22;;;11450:62;11447:88;;;11515:18;;:::i;11579:252::-;11651:2;11645:9;11693:3;11681:16;;-1:-1:-1;;;;;11712:34:200;;11748:22;;;11709:62;11706:88;;;11774:18;;:::i;11836:275::-;11907:2;11901:9;11972:2;11953:13;;-1:-1:-1;;11949:27:200;11937:40;;-1:-1:-1;;;;;11992:34:200;;12028:22;;;11989:62;11986:88;;;12054:18;;:::i;:::-;12090:2;12083:22;11836:275;;-1:-1:-1;11836:275:200:o;12116:719::-;12196:6;12249:2;12237:9;12228:7;12224:23;12220:32;12217:52;;;12265:1;12262;12255:12;12217:52;12298:9;12292:16;-1:-1:-1;;;;;12368:2:200;12360:6;12357:14;12354:34;;;12384:1;12381;12374:12;12354:34;12422:6;12411:9;12407:22;12397:32;;12467:7;12460:4;12456:2;12452:13;12448:27;12438:55;;12489:1;12486;12479:12;12438:55;12518:2;12512:9;12540:2;12536;12533:10;12530:36;;;12546:18;;:::i;:::-;12588:53;12631:2;12612:13;;-1:-1:-1;;12608:27:200;12637:2;12604:36;12588:53;:::i;:::-;12575:66;;12664:2;12657:5;12650:17;12704:7;12699:2;12694;12690;12686:11;12682:20;12679:33;12676:53;;;12725:1;12722;12715:12;12676:53;12738:67;12802:2;12797;12790:5;12786:14;12781:2;12777;12773:11;12738:67;:::i;:::-;-1:-1:-1;12824:5:200;12116:719;-1:-1:-1;;;;12116:719:200:o;12840:442::-;-1:-1:-1;;;13097:3:200;13090:25;13072:3;13144:6;13138:13;13160:75;13228:6;13223:2;13218:3;13214:12;13207:4;13199:6;13195:17;13160:75;:::i;:::-;13255:16;;;;13273:2;13251:25;;12840:442;-1:-1:-1;;12840:442:200:o;13287:245::-;13354:6;13407:2;13395:9;13386:7;13382:23;13378:32;13375:52;;;13423:1;13420;13413:12;13375:52;13455:9;13449:16;13474:28;13496:5;13474:28;:::i;13669:354::-;13827:2;13812:18;;13860:1;13849:13;;13839:144;;13905:10;13900:3;13896:20;13893:1;13886:31;13940:4;13937:1;13930:15;13968:4;13965:1;13958:15;13839:144;13992:25;;;13669:354;:::o;14028:271::-;14118:6;14171:2;14159:9;14150:7;14146:23;14142:32;14139:52;;;14187:1;14184;14177:12;14139:52;14219:9;14213:16;14238:31;14263:5;14238:31;:::i;14304:127::-;14365:10;14360:3;14356:20;14353:1;14346:31;14396:4;14393:1;14386:15;14420:4;14417:1;14410:15;14436:135;-1:-1:-1;;;;;14514:5:200;14510:36;14503:5;14500:47;14490:75;;14561:1;14558;14551:12;14576:123;14661:12;14654:5;14650:24;14643:5;14640:35;14630:63;;14689:1;14686;14679:12;14704:591;14800:5;14787:19;14815:32;14839:7;14815:32;:::i;:::-;-1:-1:-1;;;;;14868:38:200;14856:51;;14955:4;14944:16;;14931:30;14970:32;14931:30;14970:32;:::i;:::-;15021:12;15065:16;;;15058:4;15049:14;;15042:40;15130:4;15119:16;;15106:30;;15145:32;15106:30;15145:32;:::i;:::-;15209:16;15202:4;15193:14;;15186:40;15282:4;15271:16;;;15258:30;15242:14;;15235:54;14704:591::o;15300:1085::-;15396:5;15383:19;15411:31;15434:7;15411:31;:::i;:::-;15476:4;15463:18;15451:31;;15530:4;15519:16;;15506:30;15545:33;15506:30;15545:33;:::i;:::-;-1:-1:-1;;;;;15648:16:200;;;15641:4;15632:14;;15625:40;15713:4;15702:16;;15689:30;;15728:33;15689:30;15728:33;:::i;:::-;15793:16;15786:4;15777:14;;15770:40;15866:4;15855:16;;;15842:30;15826:14;;;15819:54;15929:4;15918:16;;;15905:30;15889:14;;;15882:54;15992:4;15981:16;;;15968:30;15952:14;;;15945:54;16054:3;16043:15;;;16030:29;16015:13;;;16008:52;16115:3;16104:15;;;16091:29;16076:13;;;16069:52;16140:3;16186:14;;;16173:28;16159:12;;;16152:50;16221:3;16267:14;;;16254:28;16240:12;;;16233:50;16302:6;16317:62;16366:12;;;16350:14;;;16317:62;:::i;16390:254::-;16574:3;16559:19;;16587:51;16563:9;16620:6;16587:51;:::i;16649:245::-;16728:6;16736;16789:2;16777:9;16768:7;16764:23;16760:32;16757:52;;;16805:1;16802;16795:12;16757:52;-1:-1:-1;;16828:16:200;;16884:2;16869:18;;;16863:25;16828:16;;16863:25;;-1:-1:-1;16649:245:200:o;16899:184::-;16969:6;17022:2;17010:9;17001:7;16997:23;16993:32;16990:52;;;17038:1;17035;17028:12;16990:52;-1:-1:-1;17061:16:200;;16899:184;-1:-1:-1;16899:184:200:o;17368:539::-;17452:5;17459:6;17519:3;17506:17;17605:2;17601:7;17590:8;17574:14;17570:29;17566:43;17546:18;17542:68;17532:96;;17624:1;17621;17614:12;17532:96;17652:33;;17756:4;17743:18;;;-1:-1:-1;17704:21:200;;-1:-1:-1;;;;;;17773:30:200;;17770:50;;;17816:1;17813;17806:12;17770:50;17875:6;17867;17863:19;17847:14;17843:40;17836:5;17832:52;17829:72;;;17897:1;17894;17887:12;17829:72;17368:539;;;;;:::o;17912:449::-;18026:6;18021:3;18014:19;18058:4;18053:3;18049:14;18042:21;;17996:3;18086:5;18109:1;18119:217;18133:6;18130:1;18127:13;18119:217;;;18182:45;18223:3;18215:6;18182:45;:::i;:::-;18250:6;18276:12;;;;18311:15;;;;;18155:1;18148:9;18119:217;;;-1:-1:-1;18352:3:200;;17912:449;-1:-1:-1;;;;17912:449:200:o;18366:500::-;18424:5;18431:6;18491:3;18478:17;18577:2;18573:7;18562:8;18546:14;18542:29;18538:43;18518:18;18514:68;18504:96;;18596:1;18593;18586:12;18504:96;18624:33;;18728:4;18715:18;;;-1:-1:-1;18676:21:200;;-1:-1:-1;;;;;;18745:30:200;;18742:50;;;18788:1;18785;18778:12;18742:50;18835:6;18819:14;18815:27;18808:5;18804:39;18801:59;;;18856:1;18853;18846:12;18871:266;18959:6;18954:3;18947:19;19011:6;19004:5;18997:4;18992:3;18988:14;18975:43;-1:-1:-1;19063:1:200;19038:16;;;19056:4;19034:27;;;19027:38;;;;19119:2;19098:15;;;-1:-1:-1;;19094:29:200;19085:39;;;19081:50;;18871:266::o;19142:295::-;19212:5;19271:3;19258:17;19357:2;19353:7;19342:8;19326:14;19322:29;19318:43;19298:18;19294:68;19284:96;;19376:1;19373;19366:12;19284:96;19398:33;;;;19142:295;-1:-1:-1;;19142:295:200:o;19442:804::-;19547:5;19534:19;19529:3;19522:32;19504:3;19613:4;19606:5;19602:16;19589:30;19698:2;19694:7;19686:5;19670:14;19666:26;19662:40;19642:18;19638:65;19628:93;;19717:1;19714;19707:12;19628:93;19745:30;;19856:4;19843:18;;;19798:21;-1:-1:-1;;;;;19873:30:200;;19870:50;;;19916:1;19913;19906:12;19870:50;19946:6;19943:1;19939:14;19998:2;19982:14;19978:23;19969:7;19965:37;19962:57;;;20015:1;20012;20005:12;19962:57;20051:4;20044;20035:14;;20028:28;;;20072:14;;20065:30;;;-1:-1:-1;;;;;20107:31:200;;20104:51;;;20151:1;20148;20141:12;20104:51;20200:2;20191:7;20186:2;20181:3;20177:12;20164:39;20223:12;;;;20237:2;20219:21;;19442:804;-1:-1:-1;;;;19442:804:200:o;20251:2094::-;20313:3;20359:5;20346:19;20374:33;20399:7;20374:33;:::i;:::-;-1:-1:-1;;;;;20466:16:200;;;20454:29;;20539:4;20528:16;;;20515:30;20499:14;;;20492:54;20605:4;20594:16;;20581:30;;20662:14;20658:26;;;-1:-1:-1;;20654:41:200;20630:66;;20620:94;;20710:1;20707;20700:12;20620:94;20800:4;20793;20784:14;;20777:28;20738:30;;;;20829:21;;20859:31;20829:21;20859:31;:::i;:::-;20935:4;20922:18;20915:4;20906:14;;20899:42;20998:4;20985:18;;20972:32;20966:3;20957:13;;20950:55;21055:4;21042:18;;21029:32;21070:33;21029:32;21070:33;:::i;:::-;21134:16;21128:3;21119:13;;21112:39;21194:85;21273:4;21260:18;;21264:7;21194:85;:::i;:::-;21298:6;21335:2;21329:3;21324;21320:13;21313:25;21359:94;21448:3;21443;21439:13;21425:12;21411;21359:94;:::i;:::-;21347:106;;21500:58;21553:3;21544:7;21540:17;21531:7;21500:58;:::i;:::-;21462:96;;21581:2;21577:7;21635:2;21629:3;21623:4;21619:14;21615:23;21609:3;21604;21600:13;21593:46;21662:63;21720:4;21704:14;21688;21662:63;:::i;:::-;21648:77;;21756:70;21821:3;21812:7;21808:17;21799:7;21756:70;:::i;:::-;21734:92;;21845:3;21835:13;;21900:2;21894:3;21886:6;21882:16;21878:25;21873:2;21868:3;21864:12;21857:47;;21927:61;21981:6;21965:14;21927:61;:::i;:::-;21913:75;;22007:3;21997:13;;22066:3;22057:7;22053:17;22040:31;22035:2;22030:3;22026:12;22019:53;22103:35;22133:3;22124:7;22120:17;22103:35;:::i;:::-;2705:4;2694:16;;22180:12;;;2682:29;-1:-1:-1;22237:16:200;;22224:30;22218:3;22209:13;;22202:53;-1:-1:-1;22299:16:200;;;22286:30;22280:3;22271:13;;;22264:53;;;;-1:-1:-1;22333:6:200;;20251:2094;-1:-1:-1;20251:2094:200:o;22350:351::-;22567:2;22556:9;22549:21;22530:4;22587:65;22648:2;22637:9;22633:18;22625:6;22587:65;:::i;:::-;22579:73;;22688:6;22683:2;22672:9;22668:18;22661:34;22350:351;;;;;:::o;22706:1283::-;22768:5;22807:9;22802:3;22798:19;22837:6;22833:2;22829:15;22826:35;;;22857:1;22854;22847:12;22826:35;22879:22;;:::i;:::-;22870:31;;22931:9;22925:16;22950:31;22973:7;22950:31;:::i;:::-;22990:22;;23057:2;23042:18;;23036:25;23070:33;23036:25;23070:33;:::i;:::-;23130:2;23119:14;;23112:31;23188:2;23173:18;;23167:25;23201:33;23167:25;23201:33;:::i;:::-;23261:2;23250:14;;23243:31;23327:2;23312:18;;;23306:25;23290:14;;;23283:49;23386:3;23371:19;;;23365:26;23348:15;;;23341:51;23427:3;-1:-1:-1;;23408:17:200;;23404:27;23401:47;;;23444:1;23441;23434:12;23401:47;;23477:2;23471:9;23519:3;23511:6;23507:16;23589:6;23577:10;23574:22;-1:-1:-1;;;;;23541:10:200;23538:34;23535:62;23532:88;;;23600:18;;:::i;:::-;23640:10;23636:2;23629:22;;23696:3;23685:9;23681:19;23675:26;23667:6;23660:42;23756:3;23745:9;23741:19;23735:26;23730:2;23722:6;23718:15;23711:51;23816:3;23805:9;23801:19;23795:26;23790:2;23782:6;23778:15;23771:51;23876:3;23865:9;23861:19;23855:26;23850:2;23842:6;23838:15;23831:51;23937:3;23926:9;23922:19;23916:26;23910:3;23902:6;23898:16;23891:52;23976:6;23970:3;23963:5;23959:15;23952:31;;22706:1283;;;;:::o;23994:245::-;24087:6;24140:3;24128:9;24119:7;24115:23;24111:33;24108:53;;;24157:1;24154;24147:12;24108:53;24180;24225:7;24214:9;24180:53;:::i;24244:626::-;24296:5;24344:4;24332:9;24327:3;24323:19;24319:30;24316:50;;;24362:1;24359;24352:12;24316:50;24384:22;;:::i;:::-;24375:31;;24443:9;24430:23;24462:32;24486:7;24462:32;:::i;:::-;24503:22;;24577:2;24562:18;;24549:32;24590;24549;24590;:::i;:::-;24649:2;24638:14;;24631:31;24714:2;24699:18;;24686:32;24727;24686;24727;:::i;:::-;24791:7;24786:2;24779:5;24775:14;24768:31;;24859:2;24848:9;24844:18;24831:32;24826:2;24819:5;24815:14;24808:56;24244:626;;;;:::o;24875:1499::-;24958:6;25002:9;24993:7;24989:23;25032:3;25028:2;25024:12;25021:32;;;25049:1;25046;25039:12;25021:32;25075:22;;:::i;:::-;25116:6;25142:2;25138;25134:11;25131:31;;;25158:1;25155;25148:12;25131:31;25186:22;;:::i;:::-;25245:9;25232:23;25264:31;25287:7;25264:31;:::i;:::-;25304:24;;25380:2;25365:18;;25352:32;25393:33;25352:32;25393:33;:::i;:::-;25455:2;25442:16;;25435:33;25520:4;25505:20;;25492:34;25535:33;25492:34;25535:33;:::i;:::-;25597:4;25584:18;;25577:35;25674:2;25659:18;;;25646:32;25628:16;;;25621:58;25742:3;25727:19;;;25714:33;25695:17;;;25688:60;25783:3;-1:-1:-1;;25764:17:200;;25760:27;25757:47;;;25800:1;25797;25790:12;25757:47;25828:22;;:::i;:::-;25813:37;;25903:3;25892:9;25888:19;25875:33;25866:7;25859:50;25971:4;25960:9;25956:20;25943:34;25938:2;25929:7;25925:16;25918:60;26042:3;26031:9;26027:19;26014:33;26007:4;25998:7;25994:18;25987:61;26110:3;26099:9;26095:19;26082:33;26077:2;26068:7;26064:16;26057:59;26179:3;26168:9;26164:19;26151:33;26145:3;26136:7;26132:17;26125:60;26220:7;26214:3;26205:7;26201:17;26194:34;26251:7;26244:5;26237:22;;26291:52;26335:7;26330:2;26319:9;26315:18;26291:52;:::i;:::-;26286:2;26275:14;;26268:76;-1:-1:-1;26279:5:200;24875:1499;-1:-1:-1;;;;24875:1499:200:o;26379:830::-;26578:2;26567:9;26560:21;26636:4;26627:6;26621:13;26617:24;26612:2;26601:9;26597:18;26590:52;26541:4;26689:2;26681:6;26677:15;26671:22;26731:4;26724;26713:9;26709:20;26702:34;26778:12;26772:19;26767:2;26756:9;26752:18;26745:47;26880:1;26876;26871:3;26867:11;26863:19;26857:2;26843:12;26839:21;26833:28;26829:54;26823:3;26812:9;26808:19;26801:83;26939:4;26925:12;26921:23;26915:30;26954:59;27008:3;26997:9;26993:19;26977:14;26954:59;:::i;:::-;-1:-1:-1;27068:2:200;27050:21;27044:28;27109:6;27103:3;27088:19;;27081:35;27133:70;27198:3;27183:19;;27044:28;27133:70;:::i;27214:871::-;27277:5;27316:9;27311:3;27307:19;27346:6;27342:2;27338:15;27335:35;;;27366:1;27363;27356:12;27335:35;27388:22;;:::i;:::-;27379:31;;27433:49;27478:3;27467:9;27433:49;:::i;:::-;27419:64;;27518:4;-1:-1:-1;;27499:17:200;;27495:28;27492:48;;;27536:1;27533;27526:12;27492:48;;27564:22;;:::i;:::-;27631:3;27620:9;27616:19;27610:26;27645:32;27669:7;27645:32;:::i;:::-;27686:24;;27755:3;27740:19;;27734:26;27769:32;27734:26;27769:32;:::i;:::-;27830:2;27817:16;;27810:33;27888:3;27873:19;;27867:26;27902:32;27867:26;27902:32;:::i;:::-;27970:7;27963:4;27954:7;27950:18;27943:35;;28033:3;28022:9;28018:19;28012:26;28007:2;27998:7;27994:16;27987:52;28071:7;28066:2;28059:5;28055:14;28048:31;;27214:871;;;;:::o;28090:761::-;28160:5;28213:3;28206:4;28198:6;28194:17;28190:27;28180:55;;28231:1;28228;28221:12;28180:55;28260:6;28254:13;28286:4;-1:-1:-1;;;;;28305:2:200;28302:26;28299:52;;;28331:18;;:::i;:::-;28371:36;28403:2;28398;28395:1;28391:10;28387:19;28371:36;:::i;:::-;28441:15;;;28503:6;28548:11;;;28536:24;;28532:33;;;28472:12;;;;28429:3;28577:15;;;28574:35;;;28605:1;28602;28595:12;28574:35;28641:2;28633:6;28629:15;28653:169;28669:6;28664:3;28661:15;28653:169;;;28735:44;28775:3;28770;28735:44;:::i;:::-;28723:57;;28800:12;;;;28686;;28653:169;;;-1:-1:-1;28840:5:200;;28090:761;-1:-1:-1;;;;;;;28090:761:200:o;28856:516::-;29008:6;29016;29069:3;29057:9;29048:7;29044:23;29040:33;29037:53;;;29086:1;29083;29076:12;29037:53;29119:9;29113:16;-1:-1:-1;;;;;29144:6:200;29141:30;29138:50;;;29184:1;29181;29174:12;29138:50;29207:77;29276:7;29267:6;29256:9;29252:22;29207:77;:::i;:::-;29197:87;;;29303:63;29358:7;29353:2;29342:9;29338:18;29303:63;:::i;:::-;29293:73;;28856:516;;;;;:::o;29377:241::-;29433:6;29486:2;29474:9;29465:7;29461:23;29457:32;29454:52;;;29502:1;29499;29492:12;29454:52;29541:9;29528:23;29560:28;29582:5;29560:28;:::i;29623:545::-;29716:4;29722:6;29782:11;29769:25;29876:2;29872:7;29861:8;29845:14;29841:29;29837:43;29817:18;29813:68;29803:96;;29895:1;29892;29885:12;29803:96;29922:33;;29974:20;;;-1:-1:-1;;;;;;30006:30:200;;30003:50;;;30049:1;30046;30039:12;30003:50;30082:4;30070:17;;-1:-1:-1;30133:1:200;30129:14;;;30113;30109:35;30099:46;;30096:66;;;30158:1;30155;30148:12;30173:127;30234:10;30229:3;30225:20;30222:1;30215:31;30265:4;30262:1;30255:15;30289:4;30286:1;30279:15;30305:128;30372:9;;;30393:11;;;30390:37;;;30407:18;;:::i;30438:135::-;30477:3;30498:17;;;30495:43;;30518:18;;:::i;:::-;-1:-1:-1;30565:1:200;30554:13;;30438:135::o;30578:683::-;-1:-1:-1;;;30964:3:200;30957:20;31031:26;31027:31;31018:6;31014:2;31010:15;31006:53;31002:1;30997:3;30993:11;30986:74;-1:-1:-1;;;31085:2:200;31080:3;31076:12;31069:25;30939:3;31123:6;31117:13;31139:75;31207:6;31202:2;31197:3;31193:12;31186:4;31178:6;31174:17;31139:75;:::i;:::-;31234:16;;;;31252:2;31230:25;;30578:683;-1:-1:-1;;;30578:683:200:o;32824:333::-;32925:4;32983:11;32970:25;33077:3;33073:8;33062;33046:14;33042:29;33038:44;33018:18;33014:69;33004:97;;33097:1;33094;33087:12;33004:97;33118:33;;;;;32824:333;-1:-1:-1;;32824:333:200:o;33162:328::-;33259:4;33317:11;33304:25;33411:2;33407:7;33396:8;33380:14;33376:29;33372:43;33352:18;33348:68;33338:96;;33430:1;33427;33420:12;33495:243;33552:6;33605:2;33593:9;33584:7;33580:23;33576:32;33573:52;;;33621:1;33618;33611:12;33573:52;33660:9;33647:23;33679:29;33702:5;33679:29;:::i;35660:377::-;35877:2;35866:9;35859:21;35840:4;35897:65;35958:2;35947:9;35943:18;35935:6;35897:65;:::i;:::-;35889:73;;36027:1;36023;36018:3;36014:11;36010:19;36002:6;35998:32;35993:2;35982:9;35978:18;35971:60;35660:377;;;;;:::o;36042:514::-;36179:6;36187;36195;36248:2;36236:9;36227:7;36223:23;36219:32;36216:52;;;36264:1;36261;36254:12;36216:52;36293:9;36287:16;36277:26;;36347:2;36336:9;36332:18;36326:25;-1:-1:-1;;;;;36366:6:200;36363:30;36360:50;;;36406:1;36403;36396:12;36360:50;36429:77;36498:7;36489:6;36478:9;36474:22;36429:77;:::i;:::-;36419:87;;;36546:2;36535:9;36531:18;36525:25;36515:35;;36042:514;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "COLLATERAL_TOKEN()": "f5f1f1a7",
    "EPOCH_LENGTH()": "ac4746ab",
    "IMPL_TYPE()": "c237c703",
    "ROUTER()": "32fe7b26",
    "START()": "ba9a061a",
    "STRATEGY_TYPEHASH()": "51ab5c49",
    "VAULT_FEE()": "cb58189d",
    "asset()": "38d52e0f",
    "buyoutLien(((uint8,address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint88,uint40,uint40,uint256))[],uint8,(address,uint256,((uint8,uint256,address),((uint8,address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint88,uint40,uint40,uint256))[],bytes,(bytes32,bytes32[]),uint256,uint8,bytes32,bytes32)))": "133321d2",
    "commitToLien((address,uint256,((uint8,uint256,address),((uint8,address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint88,uint40,uint40,uint256))[],bytes,(bytes32,bytes32[]),uint256,uint8,bytes32,bytes32)),address)": "4880d198",
    "deposit(uint256,address)": "6e553f65",
    "disableAllowList()": "834029ba",
    "domainSeparator()": "f698da25",
    "enableAllowList()": "dc2fbaee",
    "encodeStrategyData((uint8,uint256,address),bytes32)": "2917e097",
    "getShutdown()": "c0e9b053",
    "getStrategistNonce()": "30040e77",
    "incrementNonce()": "627cdcb9",
    "init((address,bool,address[],uint256))": "474a1e54",
    "modifyAllowList(address,bool)": "3177e0fe",
    "modifyDepositCap(uint256)": "3c96ce12",
    "name()": "06fdde03",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "owner()": "8da5cb5b",
    "recipient()": "66d003ac",
    "setDelegate(address)": "ca5eb5e1",
    "shutdown()": "fc0e74d1",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "withdraw(uint256)": "2e1a7d4d"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"enum IVaultImplementation.InvalidRequestReason\",\"name\":\"reason\",\"type\":\"uint8\"}],\"name\":\"InvalidRequest\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"AllowListEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"AllowListUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"DelegateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"IncrementNonce\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"NonceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"VaultShutdown\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COLLATERAL_TOKEN\",\"outputs\":[{\"internalType\":\"contract ICollateralToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EPOCH_LENGTH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IMPL_TYPE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROUTER\",\"outputs\":[{\"internalType\":\"contract IAstariaRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"START\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STRATEGY_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VAULT_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"collateralType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"strategyRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPotentialDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationInitialAsk\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Details\",\"name\":\"details\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Lien\",\"name\":\"lien\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint88\",\"name\":\"amount\",\"type\":\"uint88\"},{\"internalType\":\"uint40\",\"name\":\"last\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"},{\"internalType\":\"uint256\",\"name\":\"lienId\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Point\",\"name\":\"point\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Stack[]\",\"name\":\"stack\",\"type\":\"tuple[]\"},{\"internalType\":\"uint8\",\"name\":\"position\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"internalType\":\"struct IAstariaRouter.StrategyDetailsParam\",\"name\":\"strategy\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"collateralType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"strategyRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPotentialDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationInitialAsk\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Details\",\"name\":\"details\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Lien\",\"name\":\"lien\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint88\",\"name\":\"amount\",\"type\":\"uint88\"},{\"internalType\":\"uint40\",\"name\":\"last\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"},{\"internalType\":\"uint256\",\"name\":\"lienId\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Point\",\"name\":\"point\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Stack[]\",\"name\":\"stack\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"nlrDetails\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IAstariaRouter.MerkleData\",\"name\":\"merkle\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IAstariaRouter.NewLienRequest\",\"name\":\"lienRequest\",\"type\":\"tuple\"}],\"internalType\":\"struct IAstariaRouter.Commitment\",\"name\":\"incomingTerms\",\"type\":\"tuple\"}],\"name\":\"buyoutLien\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"collateralType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"strategyRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPotentialDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationInitialAsk\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Details\",\"name\":\"details\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Lien\",\"name\":\"lien\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint88\",\"name\":\"amount\",\"type\":\"uint88\"},{\"internalType\":\"uint40\",\"name\":\"last\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"},{\"internalType\":\"uint256\",\"name\":\"lienId\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Point\",\"name\":\"point\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Stack[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"collateralType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"strategyRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPotentialDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationInitialAsk\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Details\",\"name\":\"details\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Lien\",\"name\":\"lien\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint88\",\"name\":\"amount\",\"type\":\"uint88\"},{\"internalType\":\"uint40\",\"name\":\"last\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"},{\"internalType\":\"uint256\",\"name\":\"lienId\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Point\",\"name\":\"point\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Stack\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"internalType\":\"struct IAstariaRouter.StrategyDetailsParam\",\"name\":\"strategy\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"collateralType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"strategyRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPotentialDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationInitialAsk\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Details\",\"name\":\"details\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Lien\",\"name\":\"lien\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint88\",\"name\":\"amount\",\"type\":\"uint88\"},{\"internalType\":\"uint40\",\"name\":\"last\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"},{\"internalType\":\"uint256\",\"name\":\"lienId\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Point\",\"name\":\"point\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Stack[]\",\"name\":\"stack\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"nlrDetails\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IAstariaRouter.MerkleData\",\"name\":\"merkle\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IAstariaRouter.NewLienRequest\",\"name\":\"lienRequest\",\"type\":\"tuple\"}],\"internalType\":\"struct IAstariaRouter.Commitment\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"commitToLien\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lienId\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"collateralType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"strategyRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPotentialDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationInitialAsk\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Details\",\"name\":\"details\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Lien\",\"name\":\"lien\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint88\",\"name\":\"amount\",\"type\":\"uint88\"},{\"internalType\":\"uint40\",\"name\":\"last\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"},{\"internalType\":\"uint256\",\"name\":\"lienId\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Point\",\"name\":\"point\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Stack[]\",\"name\":\"stack\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableAllowList\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableAllowList\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"internalType\":\"struct IAstariaRouter.StrategyDetailsParam\",\"name\":\"strategy\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"encodeStrategyData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getShutdown\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategistNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowListEnabled\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"allowList\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"depositCap\",\"type\":\"uint256\"}],\"internalType\":\"struct IVaultImplementation.InitParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"modifyAllowList\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newCap\",\"type\":\"uint256\"}],\"name\":\"modifyDepositCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate_\",\"type\":\"address\"}],\"name\":\"setDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shutdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"buyoutLien(((uint8,address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint88,uint40,uint40,uint256))[],uint8,(address,uint256,((uint8,uint256,address),((uint8,address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint88,uint40,uint40,uint256))[],bytes,(bytes32,bytes32[]),uint256,uint8,bytes32,bytes32)))\":{\"params\":{\"incomingTerms\":\"The loan terms of the new lien.\",\"position\":\"The position of the specified lien.\"}},\"commitToLien((address,uint256,((uint8,uint256,address),((uint8,address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint88,uint40,uint40,uint256))[],bytes,(bytes32,bytes32[]),uint256,uint8,bytes32,bytes32)),address)\":{\"params\":{\"params\":\"Commitment data for the incoming lien request\",\"receiver\":\"The borrower receiving the loan.\"},\"returns\":{\"lienId\":\"The id of the newly minted lien token.\"}},\"modifyDepositCap(uint256)\":{\"params\":{\"newCap\":\"The deposit cap.\"}},\"recipient()\":{\"returns\":{\"_0\":\"The address of the recipient.\"}}},\"title\":\"Vault\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buyoutLien(((uint8,address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint88,uint40,uint40,uint256))[],uint8,(address,uint256,((uint8,uint256,address),((uint8,address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint88,uint40,uint40,uint256))[],bytes,(bytes32,bytes32[]),uint256,uint8,bytes32,bytes32)))\":{\"notice\":\"Buy optimized-out a lien to replace it with new terms.\"},\"commitToLien((address,uint256,((uint8,uint256,address),((uint8,address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint88,uint40,uint40,uint256))[],bytes,(bytes32,bytes32[]),uint256,uint8,bytes32,bytes32)),address)\":{\"notice\":\"Pipeline for lifecycle of new loan origination. Origination consists of a few phases: pre-commitment validation, lien token issuance, strategist reward, and after commitment actions Starts by depositing collateral and take optimized-out a lien against it. Next, verifies the merkle proof for a loan commitment. Vault owners are then rewarded fees for successful loan origination.\"},\"disableAllowList()\":{\"notice\":\"disable the allowList for the vault\"},\"enableAllowList()\":{\"notice\":\"enable the allowList for the vault\"},\"modifyDepositCap(uint256)\":{\"notice\":\"modify the deposit cap for the vault\"},\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"receive hook for ERC721 tokens, nothing special done\"},\"recipient()\":{\"notice\":\"Retrieves the recipient of loan repayments. For PublicVaults (VAULT_TYPE 2), this is always the vault address. For PrivateVaults, retrieves the owner() of the vault.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Vault.sol\":\"Vault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@rari-capital/solmate/=lib/seaport/lib/solmate/\",\":auction/=lib/gpl/lib/auction-house/src/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":contracts/=lib/seaport/contracts/\",\":core/=src/\",\":ds-test/=lib/ds-test/src/\",\":eip4626/=lib/foundry_eip-4626/src/\",\":forge-std/=lib/forge-std/src/\",\":gpl/=lib/gpl/src/\",\":murky/=lib/seaport/lib/murky/src/\",\":openzeppelin-contracts/=lib/seaport/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/gpl/lib/openzeppelin-contracts/contracts/\",\":seaport/=lib/seaport/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/clones-with-immutable-args/src/Clone.sol\":{\"keccak256\":\"0x958f183649832a994119e7484fea15a6b7b91c7e7b1ae4f3736104cd89ae7545\",\"license\":\"BSD\",\"urls\":[\"bzz-raw://2b4bbb61023cf315287406fee6086d2c6c5b85d6b1a141a8ee10295b663712bb\",\"dweb:/ipfs/QmaJP5pKF2WoBWsMCrAZssHhDZXvpufaWmg8oYfVgWMAHq\"]},\"lib/gpl/src/ERC721.sol\":{\"keccak256\":\"0x488eb49565d468741a657dcbabc842440e355e33ec34f11919fdab4ebd7a7544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5954c60ca668dd1e99eef4fdb9583dc9bd060ccdec05278d39de0ddf9582b5dd\",\"dweb:/ipfs/QmQNpoLffzMQRuWXFZZtd3t3EJS5aNiGnn1oXjxo7YjARM\"]},\"lib/gpl/src/interfaces/IERC4626RouterBase.sol\":{\"keccak256\":\"0xf73159f090c84e03a0a68c5cc78a0a65d71c4a27bcd5881b37a0036bb75355df\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2cea2a0802b9427bd14979aec2f869263480c138c0021c962c24eb8e650b63f4\",\"dweb:/ipfs/QmS3DbnkHmttGkcNKPvxrodHPYayUnK9Eug6yHU754gmWH\"]},\"lib/gpl/src/utils/SafeCastLib.sol\":{\"keccak256\":\"0xc2634e793ee22b9c9c2736dfe9b735b0c13cb6852629969d61d604e09b6d3dde\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://4896559c7c10652c6cd8977b33a8876f00ee3e34d0e137fd2676220659088e7b\",\"dweb:/ipfs/QmcyK4JEj2mSgwikitnntSYYC84sWmpP1FFFxnMLkbgkMr\"]},\"lib/seaport/contracts/interfaces/AmountDerivationErrors.sol\":{\"keccak256\":\"0xd7296f4958294009bd696a8034ed5b1c6562f753f3767869e83c20a9203e21e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34adcf58fdcd88234ab19f671b34007cc8badac09e08d20874bfa9a0cf2334c\",\"dweb:/ipfs/QmZDkz5Enfzxr8oM31wYWYRaYtfJXRhCjMT6AHqfoyAz8C\"]},\"lib/seaport/contracts/interfaces/ConduitControllerInterface.sol\":{\"keccak256\":\"0xb124e40645efdf5d92b48fd54eaeb0ba1d05fde62bf51e7684c1bc3bf5343388\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://757b4b1edb39b78b94debeb877e68036c1181a5d20d0f299c497cecc903f147d\",\"dweb:/ipfs/QmeXsKmxsMXCxGTtcRAnyuRhtkQF4V4cfXukRYSpFwFoaF\"]},\"lib/seaport/contracts/interfaces/ConsiderationInterface.sol\":{\"keccak256\":\"0xe32b9e62b72fc6f5fa63615ebb55315d3380438955a68b41e5ef600192f72318\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d50227c809d935f07f688a080d176d7d27ee889babf72c8d04651a6001ab8be\",\"dweb:/ipfs/QmQXbe4sMgT4jxHuVcXHqTbmCDTSVSWFnvF96dUb4GcqCK\"]},\"lib/seaport/contracts/lib/AmountDeriver.sol\":{\"keccak256\":\"0x09ffa18201a01c0462c80073bfc7be84819c510560e8b60e26e254043c37c23a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4166f42b5c9135304b06c906b8ccca51a34ac2bbfbbc8b3905f2ccaf1f620699\",\"dweb:/ipfs/QmXUaraYSzBjJggsDbfM5DpGVTSyhovS7Cd1MvuYXRGuux\"]},\"lib/seaport/contracts/lib/ConsiderationConstants.sol\":{\"keccak256\":\"0x848fdf7cbbc4b4aa6fffdb45edd07ca91fe1ddd6592a90482a26cd49daa6ff74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a407e28fcb18999a57032fb719c4e649cda74a34c9a7a5600ce738316ac56b7\",\"dweb:/ipfs/QmZ26ahXcFn8J2ws6WLbzcMQYP8SHDzLiqFQ5uXMvHmKek\"]},\"lib/seaport/contracts/lib/ConsiderationEnums.sol\":{\"keccak256\":\"0x6b56e9359b63d216790ef3141a462c2a3f2e6948f6b73dee1f493953ffe5478e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58e4ab31ad102f497270d9cf3bf22b0c058846968233528ede623a97d2b0ce21\",\"dweb:/ipfs/QmUvmZDtspEtiPjqdiMx9jDXWcaY8hLttZnga4YMZ5ve4J\"]},\"lib/seaport/contracts/lib/ConsiderationStructs.sol\":{\"keccak256\":\"0x1cf7b9e7d034197a5af36536ff8b8fea6041e8c66c1928e6d6d5e411c465b234\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://369e5901a714935a54f68c1abd1f96e901d95b51a05897cfcf2eb9e28ef57896\",\"dweb:/ipfs/QmNM5XGK419cC2xn23qgB68gbR7qqbif44QBFwKax2SBpM\"]},\"lib/solmate/src/auth/Auth.sol\":{\"keccak256\":\"0x6e05238d59cd40172c04c1974eb8f1f6cef4fdc4b6553ef7844a7302b885f76c\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a9743c21ca0470d9082e4cf00aea53786868c977d40775e6954463658ebb50ac\",\"dweb:/ipfs/QmPFdyrLHUX1zSipTC2tcJ58EzxxPp2TTvCZx9KCgqZn2W\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/tokens/ERC721.sol\":{\"keccak256\":\"0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403\",\"dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK\"]},\"lib/solmate/src/tokens/WETH.sol\":{\"keccak256\":\"0x343cf5f6b643864c5728fa9bf057c5708052402b22c5662decce94f5febff514\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://dc3722cf992cc13ff0728660432092d8ae6851f500b24c0aa474c45f2e8c3f2d\",\"dweb:/ipfs/QmVq7veVaBKKdm4AKQiuCXMPGHPuCcPksm7LNuA2ihpN9U\"]},\"lib/solmate/src/utils/Bytes32AddressLib.sol\":{\"keccak256\":\"0xe709c9f2c6fb8bfe1158fa31967c0a2109844c52079fe4e327baec82fb87acb6\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9633ab7c471e653dfb37c78b6475db47924c9ee731118545b5bc28aad97f2434\",\"dweb:/ipfs/Qmbt9gLb3hrs21nQxwSiG1ciE56Y73LLt1iPDfnmkcz27E\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x5419f4dacaaf6e608653d71173558a14bf57e04d31f2abd54f974f7f4ea56b2d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://fea3de3bd66a3288487b0a1c81c04abb6e0936fdbbde9559be0fead95387c1c5\",\"dweb:/ipfs/QmVNj6szG6r8Ze2MQ3sAJGJaETwb4GkTYknohfSSP4Pp1S\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41\",\"dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L\"]},\"src/AstariaVaultBase.sol\":{\"keccak256\":\"0x757d85f9e3f8a456979c6b6ef7f2ef7bc74a86dc7b7bfdabfd5e106546bcd972\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1aa6d4a51e02d812877efc34845be6c8324691304f1e3a428a0183d09ab0b2dc\",\"dweb:/ipfs/QmWhuDuvy4gmSkVzRrJiAV6P2qo6bXJ3HTLzriRDipzFXC\"]},\"src/AuthInitializable.sol\":{\"keccak256\":\"0xb618cd12bd1580651bf31f22f961e0bfe114266eed818a38da10c2241c772ce0\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://388ee22c48a8ddfdfe07de692d22aea63f8bd707405bb15fd18bca6cf417489f\",\"dweb:/ipfs/QmTb6AeQmQ1v9DZtgPb7fmihvg5G2W7LgQimDEU4rufHuC\"]},\"src/ClearingHouse.sol\":{\"keccak256\":\"0x1bfb46936420f613c5583c02511038836b556088068df7007aac5175a9b91a73\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c1f9d893886629791bcf5160b3fc53d3885bac8978348caff553852870c9ad71\",\"dweb:/ipfs/QmUsqp61e9ptT7KDvZPndV7gGPFR8bf4mH5H12cUGntMNL\"]},\"src/LienToken.sol\":{\"keccak256\":\"0x26a88655c0c5c195252d8334a41322d00aeef9ae90a2015631a89f65146a91d9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://717c47d731edebb31a2c5ff96168543e502c900cb3f8ed8157dbb3003d82be62\",\"dweb:/ipfs/QmQtPVyPGP2iToVCWsf8peThr48KAYDaWBswoCKe9mebde\"]},\"src/Vault.sol\":{\"keccak256\":\"0x5cfb047e7be73c90b09698617e69788a330cba27251959b9bb48f1f60b7ca563\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://87673b6a1141fcfa38b6f32fe9432c781511e62432e868916848e156e3350e76\",\"dweb:/ipfs/QmYrRHsuLCYM8b8jMgM8YC6LdxEnSd9mAzx5WVQqhSYAef\"]},\"src/VaultImplementation.sol\":{\"keccak256\":\"0x5891c12e1194f1a8660ee833e13db870a0de4b3a3b758438de0a869a6e48d505\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1b38f0e59c01119072bde256d77bdbc55e08f4ee429bca22fab43a21d5afefd0\",\"dweb:/ipfs/QmZ39NDfHsbHuo61cZ7ZDCYJRKoVmRcJrwz8Ke13qQFa7X\"]},\"src/interfaces/IAstariaRouter.sol\":{\"keccak256\":\"0x4da64031c3b687916f1b488960e2cfb586e9fcdd7e3447b77e35d416d63d2b47\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://983e9fac5607387504e40319c5b9d6cf9fb3b20b89af1b4ff940b9760bdd4be3\",\"dweb:/ipfs/QmYZGEEAwRw9Jc4U7hpTWajRAAcnc5hYFnjvnApcsC3Kiy\"]},\"src/interfaces/IAstariaVaultBase.sol\":{\"keccak256\":\"0x91c5eba850a50a0f845cd1819d6a6ec1100cfc032dcdc86167cc2fc3c97d2c56\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6bb554137ef7f5a24a1d2a7e1e466daaccbb786eb72ac18be92e0f23783e174e\",\"dweb:/ipfs/QmRHbGRpUZJZVpVsP2pW8yJvXqgHtKUqpfcLDFU6EfGNLu\"]},\"src/interfaces/IBeacon.sol\":{\"keccak256\":\"0x60542a4b2250ecf9e980f8a8a87903cb66f4a93185426ca445545af977a5bef6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://924d9a07203f64c67b418e5f81deab3fa647113b25b685bf6ef3d361eaf70722\",\"dweb:/ipfs/QmanmpmD9MsczFJdB24jkYFCycrZKZtdFBKXPEssRYQARA\"]},\"src/interfaces/ICollateralToken.sol\":{\"keccak256\":\"0x66b5389be5fabcad2155208eff28578f12edd21d0c5c105b06e0ff77191f3f68\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1b5a73440fa94aee669a279368c8da86989e0060afdf0972f3fc7ca02a6d950d\",\"dweb:/ipfs/QmY5GAho5ZkX1EpiCmz7urxNNCMgPZ6axG6aMC5az47B9c\"]},\"src/interfaces/IERC1155.sol\":{\"keccak256\":\"0x89e4758c3753584b1c79105475e438d304339d78155cb6a19c83337710816e75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61e1f1c992ebeb519d0d8bc222fb56a289ae86cf5cfeb1c0c2176a4b86334821\",\"dweb:/ipfs/QmRXdTgVGob85CaUpQvAQMefLkSpL13Z3xroS1dVTnwTrH\"]},\"src/interfaces/IERC165.sol\":{\"keccak256\":\"0x651fde20fe0c48a0d6f66e6a1dbf9796a431bb41691874ac526e46498243694b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://252b4f3c1150c8338cc9c0e76a54aed0901dff6f795a5e90ce3d05bde30eca44\",\"dweb:/ipfs/QmZgHPxjgSgFfCoX7uLP2yHzwh6nR5ieWfmAJPQaB8j2EW\"]},\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0x1c9080caa0261f88d06071b0e71d35b82599697d36635e40957696b5e4e9f9a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://324101da8a5f46a121ccd78b328deea5669b9f46928659295a1ce1f384795607\",\"dweb:/ipfs/QmaX3c9PrMK99rsV9W74ERABgU3GpRYSFq1fYed1pU2U76\"]},\"src/interfaces/IERC20Metadata.sol\":{\"keccak256\":\"0xf85faa19ef3e47c41d37b8d05d16e3d505cf48c463bcfbd2deddb8e270a53f13\",\"urls\":[\"bzz-raw://f8ea588e4f44d6a05745992905ede61f12a830d7044a73d5fa9f9915d4116961\",\"dweb:/ipfs/QmWHVqEStcMGiCDjgwYRfrHQnfqLwBxCSgMPnE8GeYGEPq\"]},\"src/interfaces/IERC4626.sol\":{\"keccak256\":\"0xec9f0eb1356b603d2563b64f90082118fdb0a9ae960e41fe6127cc8ca9d5021c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfb98dad6b7f98b23315a0322d34a9cbb6966133cfcbe937fce4f5c659a7e48d\",\"dweb:/ipfs/QmXrt8E11QnR1Ygrg7znL64gB2btcAbrafbyPHLGn7k9yC\"]},\"src/interfaces/IERC721.sol\":{\"keccak256\":\"0x587f5c9003c06c069931f6f535e3fb421898cd83083c92af7e81414f29041627\",\"urls\":[\"bzz-raw://30b18d4ec5d36004ea05164666fb1902c59c0574962a3e846ebfec0c98772a96\",\"dweb:/ipfs/QmZS3o4GGvmJjnervZMPq7VRXEjtrMo4KTk2Hfku8TjrFX\"]},\"src/interfaces/IERC721Receiver.sol\":{\"keccak256\":\"0xa62494f6023849683f26fc0a19c703719cbfb31778984d90bcdcc35e34d135a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2d8bd4190bab30ec06a27c8e7b60e87047ec4160cb644ba6439128317bdb56e\",\"dweb:/ipfs/QmS1evua87uLAzDpaZcoKEnAQcAm22gRmYfQEavAfgTWbh\"]},\"src/interfaces/IFlashAction.sol\":{\"keccak256\":\"0xeacfd67f36fc859683297a9ad81b6201ecdcd5820d13b3f6f8f765b0f7f089fd\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f479a0cf791c99a46e036b47ac186d66c82ae779ec87a15c48fe2e6463855539\",\"dweb:/ipfs/QmctNHmesNAArGgqy9XbJAvQ5b1Sxuc6xu2DJJBPRkf2Bp\"]},\"src/interfaces/ILienToken.sol\":{\"keccak256\":\"0x901ce3558a4b9d8aa5371277e0a10f460ee8825c4615bc4646b89037fee4641b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ed52de1d44666b6da962b51c7c7fc7bec09b8ed514b15ad7b4a57cbabaa07c0d\",\"dweb:/ipfs/QmT4tnuqeAEcpapM7LN4GgDAGeX8TuWn5FfZC7gLZu4dwC\"]},\"src/interfaces/IPublicVault.sol\":{\"keccak256\":\"0xb165a837a7bd77126b9ef65df4e8975c1515e26facc3fe95c2262ee12dd3d557\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://32478dcf446ec063e85d75e3a45f0a660d521ad85f81c924931a7f395d457b42\",\"dweb:/ipfs/QmWN32NXnKBUz87rhBJjjW3dSAGyK6yP7wccT8QWA9ewzv\"]},\"src/interfaces/IRouterBase.sol\":{\"keccak256\":\"0x0e3780a4050a37ecccf2f1abae1df974d7b926fc87e49e0f92e22de580dacd4a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6ce30d6df00fd98adea42fd734d4f886163f3dfdeea2168cb08b6f051320b796\",\"dweb:/ipfs/QmYdTFhuhjY6VedwCrvQKmpivAmSrVXkJsJd3ZiwmQaE2Y\"]},\"src/interfaces/ITransferProxy.sol\":{\"keccak256\":\"0xf9ed41cdf923fad284f27675ade24260124598394732ed2cbc35d41673dfa41b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://88e0e387a685254c09605859f4127639cd5cc6f253270cea538241cb830cf003\",\"dweb:/ipfs/QmdvhzgxwbHWA5ozAU37QfXPHZxuv6yvtf9B1CqdLcS6o9\"]},\"src/interfaces/IVaultImplementation.sol\":{\"keccak256\":\"0x3f789587c98dc7577f23fa0a4a60d8b7addfbb123adb4451811319a77df453b2\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://927c99f5400983ef7a61b6130fe2a0bb415a59262885577f11c110e28b80ebe5\",\"dweb:/ipfs/QmNkwaENd4Eo2eWxJ8R2jQM9jVEJjazzGeJGdqnjQmxJJn\"]},\"src/libraries/CollateralLookup.sol\":{\"keccak256\":\"0x2a873b4fafb630769da112e929dce146a364165b036f1997314cb534ed6c854f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bd327ca78949cfced29d912114755beb0ff0fe0d14365730dd25ed6ca151375f\",\"dweb:/ipfs/QmezKmjFnNMnf83foaprZQBDqMhRZFaxGyVvpDk73DpjWv\"]},\"src/utils/Initializable.sol\":{\"keccak256\":\"0xf58d209ca926c727cc60ba54279ede429681840e5d0dbbb2801315c72712cbe9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f53c0e77967494f470b3c9466c535d57b047eddf1bb120a81260c10a505985d\",\"dweb:/ipfs/QmfHeBMHfcmKPHTPtVT5vDw1ipCpMLLChgBEU3bDHRF5QF\"]},\"src/utils/Pausable.sol\":{\"keccak256\":\"0x1eac95a60676b3c8bc3f1a03b5e9fd3e64e1bdfe32776971453d64998b05a983\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4f6f4a0b1d2bce898bf40195514a581b47b5f16a96025ec8eac75850563f726\",\"dweb:/ipfs/QmZoL2mSw2uoRic2AfXZ8utFxUHkmyChdrJnJj3RrjYNfT\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "enum IVaultImplementation.InvalidRequestReason",
              "name": "reason",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "InvalidRequest"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AllowListEnabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AllowListUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DelegateUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "IncrementNonce",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NonceUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "VaultShutdown",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "COLLATERAL_TOKEN",
          "outputs": [
            {
              "internalType": "contract ICollateralToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "EPOCH_LENGTH",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "IMPL_TYPE",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "ROUTER",
          "outputs": [
            {
              "internalType": "contract IAstariaRouter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "START",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "STRATEGY_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "VAULT_FEE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "asset",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ILienToken.Stack[]",
              "name": "stack",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct ILienToken.Lien",
                  "name": "lien",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "collateralType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "strategyRoot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "collateralId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct ILienToken.Details",
                      "name": "details",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "maxAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "rate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "duration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxPotentialDebt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "liquidationInitialAsk",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "struct ILienToken.Point",
                  "name": "point",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint88",
                      "name": "amount",
                      "type": "uint88"
                    },
                    {
                      "internalType": "uint40",
                      "name": "last",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint40",
                      "name": "end",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lienId",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint8",
              "name": "position",
              "type": "uint8"
            },
            {
              "internalType": "struct IAstariaRouter.Commitment",
              "name": "incomingTerms",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenContract",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct IAstariaRouter.NewLienRequest",
                  "name": "lienRequest",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct IAstariaRouter.StrategyDetailsParam",
                      "name": "strategy",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint8",
                          "name": "version",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "deadline",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address",
                          "name": "vault",
                          "type": "address"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ILienToken.Stack[]",
                      "name": "stack",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "struct ILienToken.Lien",
                          "name": "lien",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint8",
                              "name": "collateralType",
                              "type": "uint8"
                            },
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "address",
                              "name": "vault",
                              "type": "address"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "strategyRoot",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "uint256",
                              "name": "collateralId",
                              "type": "uint256"
                            },
                            {
                              "internalType": "struct ILienToken.Details",
                              "name": "details",
                              "type": "tuple",
                              "components": [
                                {
                                  "internalType": "uint256",
                                  "name": "maxAmount",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rate",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "duration",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "maxPotentialDebt",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "liquidationInitialAsk",
                                  "type": "uint256"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "internalType": "struct ILienToken.Point",
                          "name": "point",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint88",
                              "name": "amount",
                              "type": "uint88"
                            },
                            {
                              "internalType": "uint40",
                              "name": "last",
                              "type": "uint40"
                            },
                            {
                              "internalType": "uint40",
                              "name": "end",
                              "type": "uint40"
                            },
                            {
                              "internalType": "uint256",
                              "name": "lienId",
                              "type": "uint256"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "bytes",
                      "name": "nlrDetails",
                      "type": "bytes"
                    },
                    {
                      "internalType": "struct IAstariaRouter.MerkleData",
                      "name": "merkle",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "root",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32[]",
                          "name": "proof",
                          "type": "bytes32[]"
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint8",
                      "name": "v",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "r",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "s",
                      "type": "bytes32"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "buyoutLien",
          "outputs": [
            {
              "internalType": "struct ILienToken.Stack[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct ILienToken.Lien",
                  "name": "lien",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "collateralType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "strategyRoot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "collateralId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct ILienToken.Details",
                      "name": "details",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "maxAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "rate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "duration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxPotentialDebt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "liquidationInitialAsk",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "struct ILienToken.Point",
                  "name": "point",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint88",
                      "name": "amount",
                      "type": "uint88"
                    },
                    {
                      "internalType": "uint40",
                      "name": "last",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint40",
                      "name": "end",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lienId",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct ILienToken.Stack",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct ILienToken.Lien",
                  "name": "lien",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "collateralType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "strategyRoot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "collateralId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct ILienToken.Details",
                      "name": "details",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "maxAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "rate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "duration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxPotentialDebt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "liquidationInitialAsk",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "struct ILienToken.Point",
                  "name": "point",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint88",
                      "name": "amount",
                      "type": "uint88"
                    },
                    {
                      "internalType": "uint40",
                      "name": "last",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint40",
                      "name": "end",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lienId",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IAstariaRouter.Commitment",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenContract",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct IAstariaRouter.NewLienRequest",
                  "name": "lienRequest",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct IAstariaRouter.StrategyDetailsParam",
                      "name": "strategy",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint8",
                          "name": "version",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "deadline",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address",
                          "name": "vault",
                          "type": "address"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ILienToken.Stack[]",
                      "name": "stack",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "struct ILienToken.Lien",
                          "name": "lien",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint8",
                              "name": "collateralType",
                              "type": "uint8"
                            },
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "address",
                              "name": "vault",
                              "type": "address"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "strategyRoot",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "uint256",
                              "name": "collateralId",
                              "type": "uint256"
                            },
                            {
                              "internalType": "struct ILienToken.Details",
                              "name": "details",
                              "type": "tuple",
                              "components": [
                                {
                                  "internalType": "uint256",
                                  "name": "maxAmount",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rate",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "duration",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "maxPotentialDebt",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "liquidationInitialAsk",
                                  "type": "uint256"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "internalType": "struct ILienToken.Point",
                          "name": "point",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint88",
                              "name": "amount",
                              "type": "uint88"
                            },
                            {
                              "internalType": "uint40",
                              "name": "last",
                              "type": "uint40"
                            },
                            {
                              "internalType": "uint40",
                              "name": "end",
                              "type": "uint40"
                            },
                            {
                              "internalType": "uint256",
                              "name": "lienId",
                              "type": "uint256"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "bytes",
                      "name": "nlrDetails",
                      "type": "bytes"
                    },
                    {
                      "internalType": "struct IAstariaRouter.MerkleData",
                      "name": "merkle",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "root",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32[]",
                          "name": "proof",
                          "type": "bytes32[]"
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint8",
                      "name": "v",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "r",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "s",
                      "type": "bytes32"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "commitToLien",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "lienId",
              "type": "uint256"
            },
            {
              "internalType": "struct ILienToken.Stack[]",
              "name": "stack",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct ILienToken.Lien",
                  "name": "lien",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "collateralType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "strategyRoot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "collateralId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct ILienToken.Details",
                      "name": "details",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "maxAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "rate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "duration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxPotentialDebt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "liquidationInitialAsk",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "struct ILienToken.Point",
                  "name": "point",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint88",
                      "name": "amount",
                      "type": "uint88"
                    },
                    {
                      "internalType": "uint40",
                      "name": "last",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint40",
                      "name": "end",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lienId",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "payout",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "disableAllowList"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "domainSeparator",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "enableAllowList"
        },
        {
          "inputs": [
            {
              "internalType": "struct IAstariaRouter.StrategyDetailsParam",
              "name": "strategy",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint8",
                  "name": "version",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "encodeStrategyData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getShutdown",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getStrategistNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "incrementNonce"
        },
        {
          "inputs": [
            {
              "internalType": "struct IVaultImplementation.InitParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "delegate",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "allowListEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "address[]",
                  "name": "allowList",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "depositCap",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "init"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "modifyAllowList"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newCap",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyDepositCap"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "recipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegate_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDelegate"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "shutdown"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "buyoutLien(((uint8,address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint88,uint40,uint40,uint256))[],uint8,(address,uint256,((uint8,uint256,address),((uint8,address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint88,uint40,uint40,uint256))[],bytes,(bytes32,bytes32[]),uint256,uint8,bytes32,bytes32)))": {
            "params": {
              "incomingTerms": "The loan terms of the new lien.",
              "position": "The position of the specified lien."
            }
          },
          "commitToLien((address,uint256,((uint8,uint256,address),((uint8,address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint88,uint40,uint40,uint256))[],bytes,(bytes32,bytes32[]),uint256,uint8,bytes32,bytes32)),address)": {
            "params": {
              "params": "Commitment data for the incoming lien request",
              "receiver": "The borrower receiving the loan."
            },
            "returns": {
              "lienId": "The id of the newly minted lien token."
            }
          },
          "modifyDepositCap(uint256)": {
            "params": {
              "newCap": "The deposit cap."
            }
          },
          "recipient()": {
            "returns": {
              "_0": "The address of the recipient."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "buyoutLien(((uint8,address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint88,uint40,uint40,uint256))[],uint8,(address,uint256,((uint8,uint256,address),((uint8,address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint88,uint40,uint40,uint256))[],bytes,(bytes32,bytes32[]),uint256,uint8,bytes32,bytes32)))": {
            "notice": "Buy optimized-out a lien to replace it with new terms."
          },
          "commitToLien((address,uint256,((uint8,uint256,address),((uint8,address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint88,uint40,uint40,uint256))[],bytes,(bytes32,bytes32[]),uint256,uint8,bytes32,bytes32)),address)": {
            "notice": "Pipeline for lifecycle of new loan origination. Origination consists of a few phases: pre-commitment validation, lien token issuance, strategist reward, and after commitment actions Starts by depositing collateral and take optimized-out a lien against it. Next, verifies the merkle proof for a loan commitment. Vault owners are then rewarded fees for successful loan origination."
          },
          "disableAllowList()": {
            "notice": "disable the allowList for the vault"
          },
          "enableAllowList()": {
            "notice": "enable the allowList for the vault"
          },
          "modifyDepositCap(uint256)": {
            "notice": "modify the deposit cap for the vault"
          },
          "onERC721Received(address,address,uint256,bytes)": {
            "notice": "receive hook for ERC721 tokens, nothing special done"
          },
          "recipient()": {
            "notice": "Retrieves the recipient of loan repayments. For PublicVaults (VAULT_TYPE 2), this is always the vault address. For PrivateVaults, retrieves the owner() of the vault."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@rari-capital/solmate/=lib/seaport/lib/solmate/",
        ":auction/=lib/gpl/lib/auction-house/src/",
        ":clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        ":contracts/=lib/seaport/contracts/",
        ":core/=src/",
        ":ds-test/=lib/ds-test/src/",
        ":eip4626/=lib/foundry_eip-4626/src/",
        ":forge-std/=lib/forge-std/src/",
        ":gpl/=lib/gpl/src/",
        ":murky/=lib/seaport/lib/murky/src/",
        ":openzeppelin-contracts/=lib/seaport/lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/gpl/lib/openzeppelin-contracts/contracts/",
        ":seaport/=lib/seaport/contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Vault.sol": "Vault"
      },
      "libraries": {}
    },
    "sources": {
      "lib/clones-with-immutable-args/src/Clone.sol": {
        "keccak256": "0x958f183649832a994119e7484fea15a6b7b91c7e7b1ae4f3736104cd89ae7545",
        "urls": [
          "bzz-raw://2b4bbb61023cf315287406fee6086d2c6c5b85d6b1a141a8ee10295b663712bb",
          "dweb:/ipfs/QmaJP5pKF2WoBWsMCrAZssHhDZXvpufaWmg8oYfVgWMAHq"
        ],
        "license": "BSD"
      },
      "lib/gpl/src/ERC721.sol": {
        "keccak256": "0x488eb49565d468741a657dcbabc842440e355e33ec34f11919fdab4ebd7a7544",
        "urls": [
          "bzz-raw://5954c60ca668dd1e99eef4fdb9583dc9bd060ccdec05278d39de0ddf9582b5dd",
          "dweb:/ipfs/QmQNpoLffzMQRuWXFZZtd3t3EJS5aNiGnn1oXjxo7YjARM"
        ],
        "license": "MIT"
      },
      "lib/gpl/src/interfaces/IERC4626RouterBase.sol": {
        "keccak256": "0xf73159f090c84e03a0a68c5cc78a0a65d71c4a27bcd5881b37a0036bb75355df",
        "urls": [
          "bzz-raw://2cea2a0802b9427bd14979aec2f869263480c138c0021c962c24eb8e650b63f4",
          "dweb:/ipfs/QmS3DbnkHmttGkcNKPvxrodHPYayUnK9Eug6yHU754gmWH"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/gpl/src/utils/SafeCastLib.sol": {
        "keccak256": "0xc2634e793ee22b9c9c2736dfe9b735b0c13cb6852629969d61d604e09b6d3dde",
        "urls": [
          "bzz-raw://4896559c7c10652c6cd8977b33a8876f00ee3e34d0e137fd2676220659088e7b",
          "dweb:/ipfs/QmcyK4JEj2mSgwikitnntSYYC84sWmpP1FFFxnMLkbgkMr"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/seaport/contracts/interfaces/AmountDerivationErrors.sol": {
        "keccak256": "0xd7296f4958294009bd696a8034ed5b1c6562f753f3767869e83c20a9203e21e0",
        "urls": [
          "bzz-raw://b34adcf58fdcd88234ab19f671b34007cc8badac09e08d20874bfa9a0cf2334c",
          "dweb:/ipfs/QmZDkz5Enfzxr8oM31wYWYRaYtfJXRhCjMT6AHqfoyAz8C"
        ],
        "license": "MIT"
      },
      "lib/seaport/contracts/interfaces/ConduitControllerInterface.sol": {
        "keccak256": "0xb124e40645efdf5d92b48fd54eaeb0ba1d05fde62bf51e7684c1bc3bf5343388",
        "urls": [
          "bzz-raw://757b4b1edb39b78b94debeb877e68036c1181a5d20d0f299c497cecc903f147d",
          "dweb:/ipfs/QmeXsKmxsMXCxGTtcRAnyuRhtkQF4V4cfXukRYSpFwFoaF"
        ],
        "license": "MIT"
      },
      "lib/seaport/contracts/interfaces/ConsiderationInterface.sol": {
        "keccak256": "0xe32b9e62b72fc6f5fa63615ebb55315d3380438955a68b41e5ef600192f72318",
        "urls": [
          "bzz-raw://1d50227c809d935f07f688a080d176d7d27ee889babf72c8d04651a6001ab8be",
          "dweb:/ipfs/QmQXbe4sMgT4jxHuVcXHqTbmCDTSVSWFnvF96dUb4GcqCK"
        ],
        "license": "MIT"
      },
      "lib/seaport/contracts/lib/AmountDeriver.sol": {
        "keccak256": "0x09ffa18201a01c0462c80073bfc7be84819c510560e8b60e26e254043c37c23a",
        "urls": [
          "bzz-raw://4166f42b5c9135304b06c906b8ccca51a34ac2bbfbbc8b3905f2ccaf1f620699",
          "dweb:/ipfs/QmXUaraYSzBjJggsDbfM5DpGVTSyhovS7Cd1MvuYXRGuux"
        ],
        "license": "MIT"
      },
      "lib/seaport/contracts/lib/ConsiderationConstants.sol": {
        "keccak256": "0x848fdf7cbbc4b4aa6fffdb45edd07ca91fe1ddd6592a90482a26cd49daa6ff74",
        "urls": [
          "bzz-raw://3a407e28fcb18999a57032fb719c4e649cda74a34c9a7a5600ce738316ac56b7",
          "dweb:/ipfs/QmZ26ahXcFn8J2ws6WLbzcMQYP8SHDzLiqFQ5uXMvHmKek"
        ],
        "license": "MIT"
      },
      "lib/seaport/contracts/lib/ConsiderationEnums.sol": {
        "keccak256": "0x6b56e9359b63d216790ef3141a462c2a3f2e6948f6b73dee1f493953ffe5478e",
        "urls": [
          "bzz-raw://58e4ab31ad102f497270d9cf3bf22b0c058846968233528ede623a97d2b0ce21",
          "dweb:/ipfs/QmUvmZDtspEtiPjqdiMx9jDXWcaY8hLttZnga4YMZ5ve4J"
        ],
        "license": "MIT"
      },
      "lib/seaport/contracts/lib/ConsiderationStructs.sol": {
        "keccak256": "0x1cf7b9e7d034197a5af36536ff8b8fea6041e8c66c1928e6d6d5e411c465b234",
        "urls": [
          "bzz-raw://369e5901a714935a54f68c1abd1f96e901d95b51a05897cfcf2eb9e28ef57896",
          "dweb:/ipfs/QmNM5XGK419cC2xn23qgB68gbR7qqbif44QBFwKax2SBpM"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/auth/Auth.sol": {
        "keccak256": "0x6e05238d59cd40172c04c1974eb8f1f6cef4fdc4b6553ef7844a7302b885f76c",
        "urls": [
          "bzz-raw://a9743c21ca0470d9082e4cf00aea53786868c977d40775e6954463658ebb50ac",
          "dweb:/ipfs/QmPFdyrLHUX1zSipTC2tcJ58EzxxPp2TTvCZx9KCgqZn2W"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC721.sol": {
        "keccak256": "0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d",
        "urls": [
          "bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403",
          "dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/WETH.sol": {
        "keccak256": "0x343cf5f6b643864c5728fa9bf057c5708052402b22c5662decce94f5febff514",
        "urls": [
          "bzz-raw://dc3722cf992cc13ff0728660432092d8ae6851f500b24c0aa474c45f2e8c3f2d",
          "dweb:/ipfs/QmVq7veVaBKKdm4AKQiuCXMPGHPuCcPksm7LNuA2ihpN9U"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/Bytes32AddressLib.sol": {
        "keccak256": "0xe709c9f2c6fb8bfe1158fa31967c0a2109844c52079fe4e327baec82fb87acb6",
        "urls": [
          "bzz-raw://9633ab7c471e653dfb37c78b6475db47924c9ee731118545b5bc28aad97f2434",
          "dweb:/ipfs/Qmbt9gLb3hrs21nQxwSiG1ciE56Y73LLt1iPDfnmkcz27E"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x5419f4dacaaf6e608653d71173558a14bf57e04d31f2abd54f974f7f4ea56b2d",
        "urls": [
          "bzz-raw://fea3de3bd66a3288487b0a1c81c04abb6e0936fdbbde9559be0fead95387c1c5",
          "dweb:/ipfs/QmVNj6szG6r8Ze2MQ3sAJGJaETwb4GkTYknohfSSP4Pp1S"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300",
        "urls": [
          "bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41",
          "dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/AstariaVaultBase.sol": {
        "keccak256": "0x757d85f9e3f8a456979c6b6ef7f2ef7bc74a86dc7b7bfdabfd5e106546bcd972",
        "urls": [
          "bzz-raw://1aa6d4a51e02d812877efc34845be6c8324691304f1e3a428a0183d09ab0b2dc",
          "dweb:/ipfs/QmWhuDuvy4gmSkVzRrJiAV6P2qo6bXJ3HTLzriRDipzFXC"
        ],
        "license": "BUSL-1.1"
      },
      "src/AuthInitializable.sol": {
        "keccak256": "0xb618cd12bd1580651bf31f22f961e0bfe114266eed818a38da10c2241c772ce0",
        "urls": [
          "bzz-raw://388ee22c48a8ddfdfe07de692d22aea63f8bd707405bb15fd18bca6cf417489f",
          "dweb:/ipfs/QmTb6AeQmQ1v9DZtgPb7fmihvg5G2W7LgQimDEU4rufHuC"
        ],
        "license": "BUSL-1.1"
      },
      "src/ClearingHouse.sol": {
        "keccak256": "0x1bfb46936420f613c5583c02511038836b556088068df7007aac5175a9b91a73",
        "urls": [
          "bzz-raw://c1f9d893886629791bcf5160b3fc53d3885bac8978348caff553852870c9ad71",
          "dweb:/ipfs/QmUsqp61e9ptT7KDvZPndV7gGPFR8bf4mH5H12cUGntMNL"
        ],
        "license": "BUSL-1.1"
      },
      "src/LienToken.sol": {
        "keccak256": "0x26a88655c0c5c195252d8334a41322d00aeef9ae90a2015631a89f65146a91d9",
        "urls": [
          "bzz-raw://717c47d731edebb31a2c5ff96168543e502c900cb3f8ed8157dbb3003d82be62",
          "dweb:/ipfs/QmQtPVyPGP2iToVCWsf8peThr48KAYDaWBswoCKe9mebde"
        ],
        "license": "BUSL-1.1"
      },
      "src/Vault.sol": {
        "keccak256": "0x5cfb047e7be73c90b09698617e69788a330cba27251959b9bb48f1f60b7ca563",
        "urls": [
          "bzz-raw://87673b6a1141fcfa38b6f32fe9432c781511e62432e868916848e156e3350e76",
          "dweb:/ipfs/QmYrRHsuLCYM8b8jMgM8YC6LdxEnSd9mAzx5WVQqhSYAef"
        ],
        "license": "BUSL-1.1"
      },
      "src/VaultImplementation.sol": {
        "keccak256": "0x5891c12e1194f1a8660ee833e13db870a0de4b3a3b758438de0a869a6e48d505",
        "urls": [
          "bzz-raw://1b38f0e59c01119072bde256d77bdbc55e08f4ee429bca22fab43a21d5afefd0",
          "dweb:/ipfs/QmZ39NDfHsbHuo61cZ7ZDCYJRKoVmRcJrwz8Ke13qQFa7X"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IAstariaRouter.sol": {
        "keccak256": "0x4da64031c3b687916f1b488960e2cfb586e9fcdd7e3447b77e35d416d63d2b47",
        "urls": [
          "bzz-raw://983e9fac5607387504e40319c5b9d6cf9fb3b20b89af1b4ff940b9760bdd4be3",
          "dweb:/ipfs/QmYZGEEAwRw9Jc4U7hpTWajRAAcnc5hYFnjvnApcsC3Kiy"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IAstariaVaultBase.sol": {
        "keccak256": "0x91c5eba850a50a0f845cd1819d6a6ec1100cfc032dcdc86167cc2fc3c97d2c56",
        "urls": [
          "bzz-raw://6bb554137ef7f5a24a1d2a7e1e466daaccbb786eb72ac18be92e0f23783e174e",
          "dweb:/ipfs/QmRHbGRpUZJZVpVsP2pW8yJvXqgHtKUqpfcLDFU6EfGNLu"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IBeacon.sol": {
        "keccak256": "0x60542a4b2250ecf9e980f8a8a87903cb66f4a93185426ca445545af977a5bef6",
        "urls": [
          "bzz-raw://924d9a07203f64c67b418e5f81deab3fa647113b25b685bf6ef3d361eaf70722",
          "dweb:/ipfs/QmanmpmD9MsczFJdB24jkYFCycrZKZtdFBKXPEssRYQARA"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/ICollateralToken.sol": {
        "keccak256": "0x66b5389be5fabcad2155208eff28578f12edd21d0c5c105b06e0ff77191f3f68",
        "urls": [
          "bzz-raw://1b5a73440fa94aee669a279368c8da86989e0060afdf0972f3fc7ca02a6d950d",
          "dweb:/ipfs/QmY5GAho5ZkX1EpiCmz7urxNNCMgPZ6axG6aMC5az47B9c"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IERC1155.sol": {
        "keccak256": "0x89e4758c3753584b1c79105475e438d304339d78155cb6a19c83337710816e75",
        "urls": [
          "bzz-raw://61e1f1c992ebeb519d0d8bc222fb56a289ae86cf5cfeb1c0c2176a4b86334821",
          "dweb:/ipfs/QmRXdTgVGob85CaUpQvAQMefLkSpL13Z3xroS1dVTnwTrH"
        ],
        "license": "MIT"
      },
      "src/interfaces/IERC165.sol": {
        "keccak256": "0x651fde20fe0c48a0d6f66e6a1dbf9796a431bb41691874ac526e46498243694b",
        "urls": [
          "bzz-raw://252b4f3c1150c8338cc9c0e76a54aed0901dff6f795a5e90ce3d05bde30eca44",
          "dweb:/ipfs/QmZgHPxjgSgFfCoX7uLP2yHzwh6nR5ieWfmAJPQaB8j2EW"
        ],
        "license": "MIT"
      },
      "src/interfaces/IERC20.sol": {
        "keccak256": "0x1c9080caa0261f88d06071b0e71d35b82599697d36635e40957696b5e4e9f9a8",
        "urls": [
          "bzz-raw://324101da8a5f46a121ccd78b328deea5669b9f46928659295a1ce1f384795607",
          "dweb:/ipfs/QmaX3c9PrMK99rsV9W74ERABgU3GpRYSFq1fYed1pU2U76"
        ],
        "license": "MIT"
      },
      "src/interfaces/IERC20Metadata.sol": {
        "keccak256": "0xf85faa19ef3e47c41d37b8d05d16e3d505cf48c463bcfbd2deddb8e270a53f13",
        "urls": [
          "bzz-raw://f8ea588e4f44d6a05745992905ede61f12a830d7044a73d5fa9f9915d4116961",
          "dweb:/ipfs/QmWHVqEStcMGiCDjgwYRfrHQnfqLwBxCSgMPnE8GeYGEPq"
        ],
        "license": null
      },
      "src/interfaces/IERC4626.sol": {
        "keccak256": "0xec9f0eb1356b603d2563b64f90082118fdb0a9ae960e41fe6127cc8ca9d5021c",
        "urls": [
          "bzz-raw://dfb98dad6b7f98b23315a0322d34a9cbb6966133cfcbe937fce4f5c659a7e48d",
          "dweb:/ipfs/QmXrt8E11QnR1Ygrg7znL64gB2btcAbrafbyPHLGn7k9yC"
        ],
        "license": "MIT"
      },
      "src/interfaces/IERC721.sol": {
        "keccak256": "0x587f5c9003c06c069931f6f535e3fb421898cd83083c92af7e81414f29041627",
        "urls": [
          "bzz-raw://30b18d4ec5d36004ea05164666fb1902c59c0574962a3e846ebfec0c98772a96",
          "dweb:/ipfs/QmZS3o4GGvmJjnervZMPq7VRXEjtrMo4KTk2Hfku8TjrFX"
        ],
        "license": null
      },
      "src/interfaces/IERC721Receiver.sol": {
        "keccak256": "0xa62494f6023849683f26fc0a19c703719cbfb31778984d90bcdcc35e34d135a4",
        "urls": [
          "bzz-raw://e2d8bd4190bab30ec06a27c8e7b60e87047ec4160cb644ba6439128317bdb56e",
          "dweb:/ipfs/QmS1evua87uLAzDpaZcoKEnAQcAm22gRmYfQEavAfgTWbh"
        ],
        "license": "MIT"
      },
      "src/interfaces/IFlashAction.sol": {
        "keccak256": "0xeacfd67f36fc859683297a9ad81b6201ecdcd5820d13b3f6f8f765b0f7f089fd",
        "urls": [
          "bzz-raw://f479a0cf791c99a46e036b47ac186d66c82ae779ec87a15c48fe2e6463855539",
          "dweb:/ipfs/QmctNHmesNAArGgqy9XbJAvQ5b1Sxuc6xu2DJJBPRkf2Bp"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/ILienToken.sol": {
        "keccak256": "0x901ce3558a4b9d8aa5371277e0a10f460ee8825c4615bc4646b89037fee4641b",
        "urls": [
          "bzz-raw://ed52de1d44666b6da962b51c7c7fc7bec09b8ed514b15ad7b4a57cbabaa07c0d",
          "dweb:/ipfs/QmT4tnuqeAEcpapM7LN4GgDAGeX8TuWn5FfZC7gLZu4dwC"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IPublicVault.sol": {
        "keccak256": "0xb165a837a7bd77126b9ef65df4e8975c1515e26facc3fe95c2262ee12dd3d557",
        "urls": [
          "bzz-raw://32478dcf446ec063e85d75e3a45f0a660d521ad85f81c924931a7f395d457b42",
          "dweb:/ipfs/QmWN32NXnKBUz87rhBJjjW3dSAGyK6yP7wccT8QWA9ewzv"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IRouterBase.sol": {
        "keccak256": "0x0e3780a4050a37ecccf2f1abae1df974d7b926fc87e49e0f92e22de580dacd4a",
        "urls": [
          "bzz-raw://6ce30d6df00fd98adea42fd734d4f886163f3dfdeea2168cb08b6f051320b796",
          "dweb:/ipfs/QmYdTFhuhjY6VedwCrvQKmpivAmSrVXkJsJd3ZiwmQaE2Y"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/ITransferProxy.sol": {
        "keccak256": "0xf9ed41cdf923fad284f27675ade24260124598394732ed2cbc35d41673dfa41b",
        "urls": [
          "bzz-raw://88e0e387a685254c09605859f4127639cd5cc6f253270cea538241cb830cf003",
          "dweb:/ipfs/QmdvhzgxwbHWA5ozAU37QfXPHZxuv6yvtf9B1CqdLcS6o9"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IVaultImplementation.sol": {
        "keccak256": "0x3f789587c98dc7577f23fa0a4a60d8b7addfbb123adb4451811319a77df453b2",
        "urls": [
          "bzz-raw://927c99f5400983ef7a61b6130fe2a0bb415a59262885577f11c110e28b80ebe5",
          "dweb:/ipfs/QmNkwaENd4Eo2eWxJ8R2jQM9jVEJjazzGeJGdqnjQmxJJn"
        ],
        "license": "BUSL-1.1"
      },
      "src/libraries/CollateralLookup.sol": {
        "keccak256": "0x2a873b4fafb630769da112e929dce146a364165b036f1997314cb534ed6c854f",
        "urls": [
          "bzz-raw://bd327ca78949cfced29d912114755beb0ff0fe0d14365730dd25ed6ca151375f",
          "dweb:/ipfs/QmezKmjFnNMnf83foaprZQBDqMhRZFaxGyVvpDk73DpjWv"
        ],
        "license": "BUSL-1.1"
      },
      "src/utils/Initializable.sol": {
        "keccak256": "0xf58d209ca926c727cc60ba54279ede429681840e5d0dbbb2801315c72712cbe9",
        "urls": [
          "bzz-raw://8f53c0e77967494f470b3c9466c535d57b047eddf1bb120a81260c10a505985d",
          "dweb:/ipfs/QmfHeBMHfcmKPHTPtVT5vDw1ipCpMLLChgBEU3bDHRF5QF"
        ],
        "license": "MIT"
      },
      "src/utils/Pausable.sol": {
        "keccak256": "0x1eac95a60676b3c8bc3f1a03b5e9fd3e64e1bdfe32776971453d64998b05a983",
        "urls": [
          "bzz-raw://d4f6f4a0b1d2bce898bf40195514a581b47b5f16a96025ec8eac75850563f726",
          "dweb:/ipfs/QmZoL2mSw2uoRic2AfXZ8utFxUHkmyChdrJnJj3RrjYNfT"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Vault.sol",
    "id": 71738,
    "exportedSymbols": {
      "ERC20": [
        60380
      ],
      "IERC165": [
        74533
      ],
      "SafeTransferLib": [
        61306
      ],
      "Vault": [
        71737
      ],
      "VaultImplementation": [
        72711
      ]
    },
    "nodeType": "SourceUnit",
    "src": "981:2026:151",
    "nodes": [
      {
        "id": 71552,
        "nodeType": "PragmaDirective",
        "src": "981:24:151",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 71554,
        "nodeType": "ImportDirective",
        "src": "1007:47:151",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 71738,
        "sourceUnit": 60381,
        "symbolAliases": [
          {
            "foreign": {
              "id": 71553,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 60380,
              "src": "1015:5:151",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 71556,
        "nodeType": "ImportDirective",
        "src": "1055:66:151",
        "nodes": [],
        "absolutePath": "lib/solmate/src/utils/SafeTransferLib.sol",
        "file": "solmate/utils/SafeTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 71738,
        "sourceUnit": 61307,
        "symbolAliases": [
          {
            "foreign": {
              "id": 71555,
              "name": "SafeTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 61306,
              "src": "1063:15:151",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 71558,
        "nodeType": "ImportDirective",
        "src": "1123:52:151",
        "nodes": [],
        "absolutePath": "src/interfaces/IERC165.sol",
        "file": "core/interfaces/IERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 71738,
        "sourceUnit": 74534,
        "symbolAliases": [
          {
            "foreign": {
              "id": 71557,
              "name": "IERC165",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 74533,
              "src": "1131:7:151",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 71560,
        "nodeType": "ImportDirective",
        "src": "1176:65:151",
        "nodes": [],
        "absolutePath": "src/VaultImplementation.sol",
        "file": "core/VaultImplementation.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 71738,
        "sourceUnit": 72712,
        "symbolAliases": [
          {
            "foreign": {
              "id": 71559,
              "name": "VaultImplementation",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 72711,
              "src": "1184:19:151",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 71737,
        "nodeType": "ContractDefinition",
        "src": "1267:1739:151",
        "nodes": [
          {
            "id": 71567,
            "nodeType": "UsingForDirective",
            "src": "1309:32:151",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 71564,
              "name": "SafeTransferLib",
              "nameLocations": [
                "1315:15:151"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 61306,
              "src": "1315:15:151"
            },
            "typeName": {
              "id": 71566,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 71565,
                "name": "ERC20",
                "nameLocations": [
                  "1335:5:151"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 60380,
                "src": "1335:5:151"
              },
              "referencedDeclaration": 60380,
              "src": "1335:5:151",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$60380",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 71589,
            "nodeType": "FunctionDefinition",
            "src": "1345:193:151",
            "nodes": [],
            "body": {
              "id": 71588,
              "nodeType": "Block",
              "src": "1457:81:151",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4153542d5661756c742d",
                            "id": 71578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1494:12:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_6b4e44b280b3804a1b9b8579ff5e67ebab4da2e147b044328faf169505f5f1a8",
                              "typeString": "literal_string \"AST-Vault-\""
                            },
                            "value": "AST-Vault-"
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 71580,
                                      "name": "asset",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 63841,
                                      "src": "1514:5:151",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                                        "typeString": "function () pure returns (address)"
                                      }
                                    },
                                    "id": 71581,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1514:7:151",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 71579,
                                  "name": "ERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60380,
                                  "src": "1508:5:151",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC20_$60380_$",
                                    "typeString": "type(contract ERC20)"
                                  }
                                },
                                "id": 71582,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1508:14:151",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$60380",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "id": 71583,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1523:6:151",
                              "memberName": "symbol",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 60015,
                              "src": "1508:21:151",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () view external returns (string memory)"
                              }
                            },
                            "id": 71584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1508:23:151",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_6b4e44b280b3804a1b9b8579ff5e67ebab4da2e147b044328faf169505f5f1a8",
                              "typeString": "literal_string \"AST-Vault-\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 71576,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1477:3:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 71577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1481:12:151",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1477:16:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 71585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1477:55:151",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 71575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1470:6:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 71574,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1470:6:151",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 71586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1470:63:151",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 71573,
                  "id": 71587,
                  "nodeType": "Return",
                  "src": "1463:70:151"
                }
              ]
            },
            "baseFunctions": [
              71805
            ],
            "functionSelector": "06fdde03",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "1354:4:151",
            "overrides": {
              "id": 71570,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 71569,
                  "name": "VaultImplementation",
                  "nameLocations": [
                    "1406:19:151"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 72711,
                  "src": "1406:19:151"
                }
              ],
              "src": "1397:29:151"
            },
            "parameters": {
              "id": 71568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1358:2:151"
            },
            "returnParameters": {
              "id": 71573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71572,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71589,
                  "src": "1440:13:151",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 71571,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1440:6:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1439:15:151"
            },
            "scope": 71737,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 71614,
            "nodeType": "FunctionDefinition",
            "src": "1542:210:151",
            "nodes": [],
            "body": {
              "id": 71613,
              "nodeType": "Block",
              "src": "1656:96:151",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4153542d56",
                            "id": 71600,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1699:7:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f05957a6d9189ef0c927096585306d95b190ebbb461aea18bc014e9e099c70f0",
                              "typeString": "literal_string \"AST-V\""
                            },
                            "value": "AST-V"
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 71601,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63829,
                              "src": "1708:5:151",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                                "typeString": "function () pure returns (address)"
                              }
                            },
                            "id": 71602,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1708:7:151",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "2d",
                            "id": 71603,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1717:3:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
                              "typeString": "literal_string \"-\""
                            },
                            "value": "-"
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 71605,
                                      "name": "asset",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 63841,
                                      "src": "1728:5:151",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                                        "typeString": "function () pure returns (address)"
                                      }
                                    },
                                    "id": 71606,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1728:7:151",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 71604,
                                  "name": "ERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60380,
                                  "src": "1722:5:151",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC20_$60380_$",
                                    "typeString": "type(contract ERC20)"
                                  }
                                },
                                "id": 71607,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1722:14:151",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$60380",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "id": 71608,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1737:6:151",
                              "memberName": "symbol",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 60015,
                              "src": "1722:21:151",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () view external returns (string memory)"
                              }
                            },
                            "id": 71609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1722:23:151",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f05957a6d9189ef0c927096585306d95b190ebbb461aea18bc014e9e099c70f0",
                              "typeString": "literal_string \"AST-V\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
                              "typeString": "literal_string \"-\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 71598,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1682:3:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 71599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1686:12:151",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1682:16:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 71610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1682:64:151",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 71597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1675:6:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 71596,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1675:6:151",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 71611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1675:72:151",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 71595,
                  "id": 71612,
                  "nodeType": "Return",
                  "src": "1662:85:151"
                }
              ]
            },
            "baseFunctions": [
              71811
            ],
            "functionSelector": "95d89b41",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "1551:6:151",
            "overrides": {
              "id": 71592,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 71591,
                  "name": "VaultImplementation",
                  "nameLocations": [
                    "1605:19:151"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 72711,
                  "src": "1605:19:151"
                }
              ],
              "src": "1596:29:151"
            },
            "parameters": {
              "id": 71590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1557:2:151"
            },
            "returnParameters": {
              "id": 71595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71594,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71614,
                  "src": "1639:13:151",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 71593,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1639:6:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1638:15:151"
            },
            "scope": 71737,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 71626,
            "nodeType": "FunctionDefinition",
            "src": "1756:133:151",
            "nodes": [],
            "body": {
              "id": 71625,
              "nodeType": "Block",
              "src": "1866:23:151",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 71623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1879:5:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 71622,
                  "id": 71624,
                  "nodeType": "Return",
                  "src": "1872:12:151"
                }
              ]
            },
            "baseFunctions": [
              74532
            ],
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1765:17:151",
            "overrides": {
              "id": 71619,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 71618,
                  "name": "IERC165",
                  "nameLocations": [
                    "1836:7:151"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 74533,
                  "src": "1836:7:151"
                }
              ],
              "src": "1827:17:151"
            },
            "parameters": {
              "id": 71617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71616,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71626,
                  "src": "1783:6:151",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 71615,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1783:6:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1782:8:151"
            },
            "returnParameters": {
              "id": 71622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71621,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71626,
                  "src": "1858:4:151",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 71620,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1858:4:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1857:6:151"
            },
            "scope": 71737,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 71671,
            "nodeType": "FunctionDefinition",
            "src": "1893:293:151",
            "nodes": [],
            "body": {
              "id": 71670,
              "nodeType": "Block",
              "src": "1991:195:151",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    71637
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 71637,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "2012:1:151",
                      "nodeType": "VariableDeclaration",
                      "scope": 71670,
                      "src": "1997:16:151",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VIData_$75907_storage_ptr",
                        "typeString": "struct IVaultImplementation.VIData"
                      },
                      "typeName": {
                        "id": 71636,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 71635,
                          "name": "VIData",
                          "nameLocations": [
                            "1997:6:151"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 75907,
                          "src": "1997:6:151"
                        },
                        "referencedDeclaration": 75907,
                        "src": "1997:6:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VIData_$75907_storage_ptr",
                          "typeString": "struct IVaultImplementation.VIData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 71640,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 71638,
                      "name": "_loadVISlot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71904,
                      "src": "2016:11:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_VIData_$75907_storage_ptr_$",
                        "typeString": "function () pure returns (struct IVaultImplementation.VIData storage pointer)"
                      }
                    },
                    "id": 71639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2016:13:151",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VIData_$75907_storage_ptr",
                      "typeString": "struct IVaultImplementation.VIData storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1997:32:151"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 71651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 71642,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71637,
                              "src": "2043:1:151",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VIData_$75907_storage_ptr",
                                "typeString": "struct IVaultImplementation.VIData storage pointer"
                              }
                            },
                            "id": 71643,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2045:9:151",
                            "memberName": "allowList",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 75906,
                            "src": "2043:11:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 71646,
                          "indexExpression": {
                            "expression": {
                              "id": 71644,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2055:3:151",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 71645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2059:6:151",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2055:10:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2043:23:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 71650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 71647,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71630,
                            "src": "2070:8:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 71648,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63829,
                              "src": "2082:5:151",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                                "typeString": "function () pure returns (address)"
                              }
                            },
                            "id": 71649,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2082:7:151",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2070:19:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2043:46:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 71641,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2035:7:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 71652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2035:55:151",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71653,
                  "nodeType": "ExpressionStatement",
                  "src": "2035:55:151"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 71659,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2128:3:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 71660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2132:6:151",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2128:10:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 71663,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2148:4:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vault_$71737",
                              "typeString": "contract Vault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Vault_$71737",
                              "typeString": "contract Vault"
                            }
                          ],
                          "id": 71662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2140:7:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 71661,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2140:7:151",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 71664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2140:13:151",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 71665,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71628,
                        "src": "2155:6:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 71655,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63841,
                              "src": "2102:5:151",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                                "typeString": "function () pure returns (address)"
                              }
                            },
                            "id": 71656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2102:7:151",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 71654,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60380,
                          "src": "2096:5:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$60380_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 71657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2096:14:151",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$60380",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 71658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2111:16:151",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61265,
                      "src": "2096:31:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$60380_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$60380_$",
                        "typeString": "function (contract ERC20,address,address,uint256)"
                      }
                    },
                    "id": 71666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2096:66:151",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71667,
                  "nodeType": "ExpressionStatement",
                  "src": "2096:66:151"
                },
                {
                  "expression": {
                    "id": 71668,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 71628,
                    "src": "2175:6:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 71634,
                  "id": 71669,
                  "nodeType": "Return",
                  "src": "2168:13:151"
                }
              ]
            },
            "functionSelector": "6e553f65",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1902:7:151",
            "parameters": {
              "id": 71631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71628,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1918:6:151",
                  "nodeType": "VariableDeclaration",
                  "scope": 71671,
                  "src": "1910:14:151",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71627,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1910:7:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71630,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "1934:8:151",
                  "nodeType": "VariableDeclaration",
                  "scope": 71671,
                  "src": "1926:16:151",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71629,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1926:7:151",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1909:34:151"
            },
            "returnParameters": {
              "id": 71634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71633,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71671,
                  "src": "1980:7:151",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71632,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1980:7:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1979:9:151"
            },
            "scope": 71737,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 71699,
            "nodeType": "FunctionDefinition",
            "src": "2190:156:151",
            "nodes": [],
            "body": {
              "id": 71698,
              "nodeType": "Block",
              "src": "2233:113:151",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 71681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 71677,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2247:3:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 71678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2251:6:151",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2247:10:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 71679,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63829,
                            "src": "2261:5:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                              "typeString": "function () pure returns (address)"
                            }
                          },
                          "id": 71680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2261:7:151",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2247:21:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 71676,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2239:7:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 71682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2239:30:151",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71683,
                  "nodeType": "ExpressionStatement",
                  "src": "2239:30:151"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 71691,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2315:4:151",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vault_$71737",
                              "typeString": "contract Vault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Vault_$71737",
                              "typeString": "contract Vault"
                            }
                          ],
                          "id": 71690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2307:7:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 71689,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2307:7:151",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 71692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2307:13:151",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 71693,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2322:3:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 71694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2326:6:151",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2322:10:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 71695,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71673,
                        "src": "2334:6:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 71685,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63841,
                              "src": "2281:5:151",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                                "typeString": "function () pure returns (address)"
                              }
                            },
                            "id": 71686,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2281:7:151",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 71684,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60380,
                          "src": "2275:5:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$60380_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 71687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2275:14:151",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$60380",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 71688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2290:16:151",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61265,
                      "src": "2275:31:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$60380_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$60380_$",
                        "typeString": "function (contract ERC20,address,address,uint256)"
                      }
                    },
                    "id": 71696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2275:66:151",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71697,
                  "nodeType": "ExpressionStatement",
                  "src": "2275:66:151"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "2199:8:151",
            "parameters": {
              "id": 71674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71673,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2216:6:151",
                  "nodeType": "VariableDeclaration",
                  "scope": 71699,
                  "src": "2208:14:151",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71672,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2208:7:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2207:16:151"
            },
            "returnParameters": {
              "id": 71675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2233:0:151"
            },
            "scope": 71737,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 71710,
            "nodeType": "FunctionDefinition",
            "src": "2350:205:151",
            "nodes": [],
            "body": {
              "id": 71709,
              "nodeType": "Block",
              "src": "2422:133:151",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 71705,
                          "name": "InvalidRequestReason",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75877,
                          "src": "2516:20:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_InvalidRequestReason_$75877_$",
                            "typeString": "type(enum IVaultImplementation.InvalidRequestReason)"
                          }
                        },
                        "id": 71706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2537:12:151",
                        "memberName": "NO_AUTHORITY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 75868,
                        "src": "2516:33:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_InvalidRequestReason_$75877",
                          "typeString": "enum IVaultImplementation.InvalidRequestReason"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_InvalidRequestReason_$75877",
                          "typeString": "enum IVaultImplementation.InvalidRequestReason"
                        }
                      ],
                      "id": 71704,
                      "name": "InvalidRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75882,
                      "src": "2501:14:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$_t_enum$_InvalidRequestReason_$75877_$returns$__$",
                        "typeString": "function (enum IVaultImplementation.InvalidRequestReason) pure"
                      }
                    },
                    "id": 71707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2501:49:151",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71708,
                  "nodeType": "RevertStatement",
                  "src": "2494:56:151"
                }
              ]
            },
            "baseFunctions": [
              71957
            ],
            "functionSelector": "834029ba",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "disableAllowList",
            "nameLocation": "2359:16:151",
            "overrides": {
              "id": 71702,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 71701,
                  "name": "VaultImplementation",
                  "nameLocations": [
                    "2401:19:151"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 72711,
                  "src": "2401:19:151"
                }
              ],
              "src": "2392:29:151"
            },
            "parameters": {
              "id": 71700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2375:2:151"
            },
            "returnParameters": {
              "id": 71703,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2422:0:151"
            },
            "scope": 71737,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 71721,
            "nodeType": "FunctionDefinition",
            "src": "2559:204:151",
            "nodes": [],
            "body": {
              "id": 71720,
              "nodeType": "Block",
              "src": "2630:133:151",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 71716,
                          "name": "InvalidRequestReason",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75877,
                          "src": "2724:20:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_InvalidRequestReason_$75877_$",
                            "typeString": "type(enum IVaultImplementation.InvalidRequestReason)"
                          }
                        },
                        "id": 71717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2745:12:151",
                        "memberName": "NO_AUTHORITY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 75868,
                        "src": "2724:33:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_InvalidRequestReason_$75877",
                          "typeString": "enum IVaultImplementation.InvalidRequestReason"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_InvalidRequestReason_$75877",
                          "typeString": "enum IVaultImplementation.InvalidRequestReason"
                        }
                      ],
                      "id": 71715,
                      "name": "InvalidRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75882,
                      "src": "2709:14:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$_t_enum$_InvalidRequestReason_$75877_$returns$__$",
                        "typeString": "function (enum IVaultImplementation.InvalidRequestReason) pure"
                      }
                    },
                    "id": 71718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2709:49:151",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71719,
                  "nodeType": "RevertStatement",
                  "src": "2702:56:151"
                }
              ]
            },
            "baseFunctions": [
              71980
            ],
            "functionSelector": "dc2fbaee",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enableAllowList",
            "nameLocation": "2568:15:151",
            "overrides": {
              "id": 71713,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 71712,
                  "name": "VaultImplementation",
                  "nameLocations": [
                    "2609:19:151"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 72711,
                  "src": "2609:19:151"
                }
              ],
              "src": "2600:29:151"
            },
            "parameters": {
              "id": 71711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2583:2:151"
            },
            "returnParameters": {
              "id": 71714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2630:0:151"
            },
            "scope": 71737,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 71736,
            "nodeType": "FunctionDefinition",
            "src": "2767:237:151",
            "nodes": [],
            "body": {
              "id": 71735,
              "nodeType": "Block",
              "src": "2865:139:151",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 71731,
                          "name": "InvalidRequestReason",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75877,
                          "src": "2965:20:151",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_InvalidRequestReason_$75877_$",
                            "typeString": "type(enum IVaultImplementation.InvalidRequestReason)"
                          }
                        },
                        "id": 71732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2986:12:151",
                        "memberName": "NO_AUTHORITY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 75868,
                        "src": "2965:33:151",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_InvalidRequestReason_$75877",
                          "typeString": "enum IVaultImplementation.InvalidRequestReason"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_InvalidRequestReason_$75877",
                          "typeString": "enum IVaultImplementation.InvalidRequestReason"
                        }
                      ],
                      "id": 71730,
                      "name": "InvalidRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75882,
                      "src": "2950:14:151",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$_t_enum$_InvalidRequestReason_$75877_$returns$__$",
                        "typeString": "function (enum IVaultImplementation.InvalidRequestReason) pure"
                      }
                    },
                    "id": 71733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2950:49:151",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71734,
                  "nodeType": "RevertStatement",
                  "src": "2943:56:151"
                }
              ]
            },
            "baseFunctions": [
              71934
            ],
            "functionSelector": "3177e0fe",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "modifyAllowList",
            "nameLocation": "2776:15:151",
            "overrides": {
              "id": 71728,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 71727,
                  "name": "VaultImplementation",
                  "nameLocations": [
                    "2842:19:151"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 72711,
                  "src": "2842:19:151"
                }
              ],
              "src": "2833:29:151"
            },
            "parameters": {
              "id": 71726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71723,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71736,
                  "src": "2792:7:151",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71722,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2792:7:151",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71725,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71736,
                  "src": "2801:4:151",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 71724,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2801:4:151",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2791:15:151"
            },
            "returnParameters": {
              "id": 71729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2865:0:151"
            },
            "scope": 71737,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 71562,
              "name": "VaultImplementation",
              "nameLocations": [
                "1285:19:151"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 72711,
              "src": "1285:19:151"
            },
            "id": 71563,
            "nodeType": "InheritanceSpecifier",
            "src": "1285:19:151"
          }
        ],
        "canonicalName": "Vault",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 71561,
          "nodeType": "StructuredDocumentation",
          "src": "1243:23:151",
          "text": " @title Vault"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          71737,
          72711,
          76024,
          74533,
          60944,
          63884,
          74121,
          75625,
          120
        ],
        "name": "Vault",
        "nameLocation": "1276:5:151",
        "scope": 71738,
        "usedErrors": [
          75882
        ]
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 151
}