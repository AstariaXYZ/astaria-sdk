{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "enum IVaultImplementation.InvalidRequestReason",
          "name": "reason",
          "type": "uint8"
        }
      ],
      "name": "InvalidRequest",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "nonce",
          "type": "uint32"
        }
      ],
      "name": "IncrementNonce",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "nonce",
          "type": "uint32"
        }
      ],
      "name": "NonceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "VaultShutdown",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "COLLATERAL_TOKEN",
      "outputs": [
        {
          "internalType": "contract ICollateralToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "EPOCH_LENGTH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IMPL_TYPE",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROUTER",
      "outputs": [
        {
          "internalType": "contract IAstariaRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "START",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STRATEGY_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VAULT_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "asset",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "collateralId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "position",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "version",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct IAstariaRouter.StrategyDetails",
                  "name": "strategy",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "vault",
                          "type": "address"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "strategyRoot",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "collateralId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "maxAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rate",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "duration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "maxPotentialDebt",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "liquidationInitialAsk",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct ILienToken.Details",
                          "name": "details",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct ILienToken.Lien",
                      "name": "lien",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint88",
                          "name": "amount",
                          "type": "uint88"
                        },
                        {
                          "internalType": "uint8",
                          "name": "position",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint40",
                          "name": "last",
                          "type": "uint40"
                        },
                        {
                          "internalType": "uint40",
                          "name": "end",
                          "type": "uint40"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lienId",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct ILienToken.Point",
                      "name": "point",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct ILienToken.Stack[]",
                  "name": "stack",
                  "type": "tuple[]"
                },
                {
                  "internalType": "bytes",
                  "name": "nlrDetails",
                  "type": "bytes"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "root",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ],
                  "internalType": "struct IAstariaRouter.MerkleData",
                  "name": "merkle",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct IAstariaRouter.NewLienRequest",
              "name": "lienRequest",
              "type": "tuple"
            }
          ],
          "internalType": "struct IAstariaRouter.Commitment",
          "name": "incomingTerms",
          "type": "tuple"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "strategyRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralId",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "maxAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "rate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxPotentialDebt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidationInitialAsk",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ILienToken.Details",
                  "name": "details",
                  "type": "tuple"
                }
              ],
              "internalType": "struct ILienToken.Lien",
              "name": "lien",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint88",
                  "name": "amount",
                  "type": "uint88"
                },
                {
                  "internalType": "uint8",
                  "name": "position",
                  "type": "uint8"
                },
                {
                  "internalType": "uint40",
                  "name": "last",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "end",
                  "type": "uint40"
                },
                {
                  "internalType": "uint256",
                  "name": "lienId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ILienToken.Point",
              "name": "point",
              "type": "tuple"
            }
          ],
          "internalType": "struct ILienToken.Stack[]",
          "name": "stack",
          "type": "tuple[]"
        }
      ],
      "name": "buyoutLien",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "strategyRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralId",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "maxAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "rate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxPotentialDebt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidationInitialAsk",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ILienToken.Details",
                  "name": "details",
                  "type": "tuple"
                }
              ],
              "internalType": "struct ILienToken.Lien",
              "name": "lien",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint88",
                  "name": "amount",
                  "type": "uint88"
                },
                {
                  "internalType": "uint8",
                  "name": "position",
                  "type": "uint8"
                },
                {
                  "internalType": "uint40",
                  "name": "last",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "end",
                  "type": "uint40"
                },
                {
                  "internalType": "uint256",
                  "name": "lienId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ILienToken.Point",
              "name": "point",
              "type": "tuple"
            }
          ],
          "internalType": "struct ILienToken.Stack[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "strategyRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralId",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "maxAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "rate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxPotentialDebt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidationInitialAsk",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ILienToken.Details",
                  "name": "details",
                  "type": "tuple"
                }
              ],
              "internalType": "struct ILienToken.Lien",
              "name": "lien",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint88",
                  "name": "amount",
                  "type": "uint88"
                },
                {
                  "internalType": "uint8",
                  "name": "position",
                  "type": "uint8"
                },
                {
                  "internalType": "uint40",
                  "name": "last",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "end",
                  "type": "uint40"
                },
                {
                  "internalType": "uint256",
                  "name": "lienId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ILienToken.Point",
              "name": "point",
              "type": "tuple"
            }
          ],
          "internalType": "struct ILienToken.Stack",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "version",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct IAstariaRouter.StrategyDetails",
                  "name": "strategy",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "vault",
                          "type": "address"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "strategyRoot",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "collateralId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "maxAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rate",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "duration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "maxPotentialDebt",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "liquidationInitialAsk",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct ILienToken.Details",
                          "name": "details",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct ILienToken.Lien",
                      "name": "lien",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint88",
                          "name": "amount",
                          "type": "uint88"
                        },
                        {
                          "internalType": "uint8",
                          "name": "position",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint40",
                          "name": "last",
                          "type": "uint40"
                        },
                        {
                          "internalType": "uint40",
                          "name": "end",
                          "type": "uint40"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lienId",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct ILienToken.Point",
                      "name": "point",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct ILienToken.Stack[]",
                  "name": "stack",
                  "type": "tuple[]"
                },
                {
                  "internalType": "bytes",
                  "name": "nlrDetails",
                  "type": "bytes"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "root",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ],
                  "internalType": "struct IAstariaRouter.MerkleData",
                  "name": "merkle",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct IAstariaRouter.NewLienRequest",
              "name": "lienRequest",
              "type": "tuple"
            }
          ],
          "internalType": "struct IAstariaRouter.Commitment",
          "name": "params",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "commitToLien",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lienId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "strategyRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralId",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "maxAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "rate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxPotentialDebt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidationInitialAsk",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ILienToken.Details",
                  "name": "details",
                  "type": "tuple"
                }
              ],
              "internalType": "struct ILienToken.Lien",
              "name": "lien",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint88",
                  "name": "amount",
                  "type": "uint88"
                },
                {
                  "internalType": "uint8",
                  "name": "position",
                  "type": "uint8"
                },
                {
                  "internalType": "uint40",
                  "name": "last",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "end",
                  "type": "uint40"
                },
                {
                  "internalType": "uint256",
                  "name": "lienId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ILienToken.Point",
              "name": "point",
              "type": "tuple"
            }
          ],
          "internalType": "struct ILienToken.Stack[]",
          "name": "stack",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableAllowList",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "domainSeparator",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableAllowList",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            }
          ],
          "internalType": "struct IAstariaRouter.StrategyDetails",
          "name": "strategy",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        }
      ],
      "name": "encodeStrategyData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getShutdown",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStrategistNonce",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "incrementNonce",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "delegate",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "allowListEnabled",
              "type": "bool"
            },
            {
              "internalType": "address[]",
              "name": "allowList",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "depositCap",
              "type": "uint256"
            }
          ],
          "internalType": "struct IVaultImplementation.InitParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "name": "modifyAllowList",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newCap",
          "type": "uint256"
        }
      ],
      "name": "modifyDepositCap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId_",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data_",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "recipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegate_",
          "type": "address"
        }
      ],
      "name": "setDelegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shutdown",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50613298806100206000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80636e553f6511610104578063c237c703116100a2578063dc2fbaee11610071578063dc2fbaee1461037c578063f5f1f1a714610419578063f698da2514610421578063fc0e74d11461042957600080fd5b8063c237c703146103c3578063ca5eb5e1146103dd578063cb58189d146103f0578063d4208b73146103f857600080fd5b806395d89b41116100de57806395d89b411461038c578063ac4746ab14610394578063ba9a061a1461039c578063c0e9b053146103a457600080fd5b80636e553f6514610369578063834029ba1461037c5780638da5cb5b1461038457600080fd5b80633177e0fe1161017c578063474a1e541161014b578063474a1e541461031157806351ab5c4914610324578063627cdcb91461035957806366d003ac1461036157600080fd5b80633177e0fe146102c357806332fe7b26146102d657806338d52e0f146102f65780633c96ce12146102fe57600080fd5b80632917e097116101b85780632917e097146102555780632d7342c0146102685780632e1a7d4d1461028957806330040e771461029e57600080fd5b806301ffc9a7146101df57806306fdde0314610208578063150b7a021461021d575b600080fd5b6101f36101ed366004611cbd565b50600090565b60405190151581526020015b60405180910390f35b610210610431565b6040516101ff9190611d37565b61023c61022b366004611d5f565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016101ff565b610210610263366004611e15565b6104c4565b61027b610276366004611e5f565b6104ea565b6040516101ff929190612003565b61029c610297366004612027565b610b30565b005b6000805160206132438339815191525460405163ffffffff90911681526020016101ff565b61029c6102d136600461204e565b610b77565b6102de610b93565b6040516001600160a01b0390911681526020016101ff565b6102de610ba4565b61029c61030c366004612027565b610bb0565b61029c61031f366004612087565b610c1f565b61034b7f679f3933bd13bd2e4ec6e9cde341ede07736ad7b635428a8a211e9cccb4393b081565b6040519081526020016101ff565b61029c610d96565b6102de610e67565b61034b6103773660046120c1565b610e88565b61029c610b77565b6102de610f31565b610210610f3d565b61034b610fc5565b61034b610fd1565b60008051602061322383398151915254600160a81b900460ff166101f3565b6103cb610fdd565b60405160ff90911681526020016101ff565b61029c6103eb3660046120e6565b610fe9565b61034b61108b565b61040b610406366004612103565b611097565b6040516101ff929190612149565b6102de6111c1565b61034b61122c565b61029c6112ab565b606061043b610ba4565b6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610478573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104a09190810190612266565b6040516020016104b091906122e1565b604051602081830303815290604052905090565b60606000805160206132438339815191526104e081858561131b565b9150505b92915050565b60606104f4611c06565b6104fc610b93565b6001600160a01b0316635c975abb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610539573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055d9190612313565b1561058757600860405163eac08f1960e01b815260040161057e9190612330565b60405180910390fd5b60008051602061322383398151915254600160a81b900460ff16156105c257600760405163eac08f1960e01b815260040161057e9190612330565b6000806105cd610b93565b6001600160a01b03166341700b976040518163ffffffff1660e01b8152600401602060405180830381865afa15801561060a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062e9190612358565b6001600160a01b03166352335c8d87878b60ff1681811061065157610651612375565b90506101c002016040518263ffffffff1660e01b815260040161067491906124a5565b6040805180830381865afa158015610690573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b491906124b4565b915091506106c0610ba4565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610706573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072a91906124d8565b81111561074d57600460405163eac08f1960e01b815260040161057e9190612330565b61075e87610759610e67565b6113f2565b6107e3610769610b93565b6001600160a01b03166396d6401d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ca9190612358565b826107d3610ba4565b6001600160a01b03169190611812565b60006107ed610b93565b6001600160a01b03166341700b976040518163ffffffff1660e01b8152600401602060405180830381865afa15801561082a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084e9190612358565b905030610859610e67565b6001600160a01b0316141580156108f45750806001600160a01b031663e985e9c530610883610e67565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa1580156108ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f29190612313565b155b1561097157806001600160a01b031663a22cb465610910610e67565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260016024820152604401600060405180830381600087803b15801561095857600080fd5b505af115801561096c573d6000803e3d6000fd5b505050505b806001600160a01b0316639b9761fb60405180606001604052808b61099590612815565b81526020018c60ff1681526020016040518060a001604052808f81526020018d80604001906109c49190612934565b60c0013581526020016109d5610e67565b6001600160a01b031681526020016109eb610b93565b6001600160a01b031663f44794ca8f60006040518363ffffffff1660e01b8152600401610a19929190612c2b565b610120604051808303816000875af1158015610a39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5d9190612cf7565b81526020018c8c808060200260200160405190810160405280939291908181526020016000905b82821015610ab157610aa26101c08302860136819003810190612d14565b81526020019060010190610a84565b50505050508152508152506040518263ffffffff1660e01b8152600401610ad89190612dd8565b6000604051808303816000875af1158015610af7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b1f919081019061300c565b945094505050509550959350505050565b610b38610f31565b6001600160a01b0316336001600160a01b031614610b5557600080fd5b610b74303383610b63610ba4565b6001600160a01b031692919061188f565b50565b600060405163eac08f1960e01b815260040161057e9190612330565b6000610b9f6000611919565b905090565b6000610b9f6029611919565b610bb8610f31565b6001600160a01b0316336001600160a01b031614610bd557600080fd5b610bde8161193e565b60008051602061324383398151915280546001600160581b0392909216640100000000026effffffffffffffffffffff000000001990921691909117905550565b610c27610b93565b6001600160a01b0316336001600160a01b031614610c4457600080fd5b6000805160206132438339815191526000610c6260208401846120e6565b6001600160a01b031614610ca057610c7d60208301836120e6565b6001820180546001600160a01b0319166001600160a01b03929092169190911790555b610cad826060013561193e565b81546001600160581b0391909116640100000000026effffffffffffffffffffff0000000019909116178155610ce9604083016020840161305b565b15610d925760018101805460ff60a01b1916600160a01b17905560005b610d136040840184613078565b9050811015610d90576001600283016000610d316040870187613078565b85818110610d4157610d41612375565b9050602002016020810190610d5691906120e6565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905580610d88816130d7565b915050610d06565b505b5050565b600080516020613243833981519152610dad610f31565b6001600160a01b0316336001600160a01b031614158015610ddb575060018101546001600160a01b03163314155b15610dfc57600060405163eac08f1960e01b815260040161057e9190612330565b805463ffffffff16816000610e10836130f0565b82546101009290920a63ffffffff8181021990931691831602179091558254604051911681527fd53ee127c4cc096a6aa01269ecbe5c887e5a1cbe71d83109974c55e865a0db82915060200160405180910390a150565b60006001610e73610fdd565b60ff1603610e8057503090565b610b9f610f31565b3360009081527f8db05f23e24c991e45d8dd3599daf8e419ee5ab93565cf65b18905286a24ec1660205260408120546000805160206132438339815191529060ff1680610f125750610ed8610b93565b6001600160a01b0316336001600160a01b0316148015610f1257506001600160a01b038316600090815260028201602052604090205460ff165b610f1b57600080fd5b610f29333086610b63610ba4565b509192915050565b6000610b9f6015611919565b6060610f47610f31565b610f4f610ba4565b6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610f8c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fb49190810190612266565b6040516020016104b0929190613113565b6000610b9f605d611954565b6000610b9f603d611954565b6000610b9f6014611976565b610ff1610f31565b6001600160a01b0316336001600160a01b03161461100e57600080fd5b60008051602061322383398151915280546001600160a01b0390811660009081527f8db05f23e24c991e45d8dd3599daf8e419ee5ab93565cf65b18905286a24ec166020526040808220805460ff1990811690915594909216808252919020805490931660011790925580546001600160a01b0319169091179055565b6000610b9f607d611954565b600060606110a3610b93565b6001600160a01b0316635c975abb6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111049190612313565b1561112557600860405163eac08f1960e01b815260040161057e9190612330565b60008051602061322383398151915254600160a81b900460ff161561116057600760405163eac08f1960e01b815260040161057e9190612330565b600061116c858561199b565b815192955090935091506111b990839061118890600190613163565b8151811061119857611198612375565b6020026020010151602001516060015184878060400190610d909190612934565b509250929050565b60006111cb610b93565b6001600160a01b031663f5f1f1a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611208573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9f9190612358565b604080517f2aef22f9d7df5f9d21c56d14029233f3fdaa91917727e1eb68e504d27072d6cd60208201527f044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d9181019190915246606082015230608082015260009060a00160405160208183030381529060405280519060200120905090565b6112b3610f31565b6001600160a01b0316336001600160a01b0316146112d057600080fd5b600080516020613223833981519152805460ff60a81b1916600160a81b1790556040517f43849b84f1a1ce86ba1205cd8a5d4fa1563bca4b169db452674f94b4b6ddaa6990600090a1565b8254604051606091600091611380917f679f3933bd13bd2e4ec6e9cde341ede07736ad7b635428a8a211e9cccb4393b09163ffffffff909116906020808901359188910193845263ffffffff9290921660208401526040830152606082015260800190565b60408051601f1981840301815291905280516020909101209050601960f81b600160f81b6113ac61122c565b6040516001600160f81b031993841660208201529290911660218301526022820152604281018290526062016040516020818303038152906040529150505b9392505050565b600061144c6020840180359061140890866120e6565b6040805160609290921b6bffffffffffffffffffffffff19166020808401919091526034808401949094528151808403909401845260549092019052815191012090565b905060006114586111c1565b6040516331a9108f60e11b8152600481018490529091506000906001600160a01b03831690636352211e90602401602060405180830381865afa1580156114a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114c79190612358565b60405163020604bf60e21b8152600481018590529091506000906001600160a01b0384169063081812fc90602401602060405180830381865afa158015611512573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115369190612358565b9050336001600160a01b038316148015906115635750816001600160a01b0316856001600160a01b031614155b80156115815750806001600160a01b0316856001600160a01b031614155b80156115fe5750611590610b93565b604051630642194560e41b81526001600160a01b0387811660048301529190911690636421945090602401602060405180830381865afa1580156115d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115fc9190612313565b155b156116b0576001600160a01b0381161561163557846001600160a01b0316816001600160a01b03161461163057600080fd5b6116b0565b60405163e985e9c560e01b81526001600160a01b038381166004830152868116602483015284169063e985e9c590604401602060405180830381865afa158015611683573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a79190612313565b6116b057600080fd5b600080516020613243833981519152600060016116f5836116d460408c018c612934565b6116e160408d018d612934565b6116ef9060a0810190613176565b3561131b565b805160209091012061170a60408b018b612934565b61171c9061010081019060e00161318c565b61172960408c018c612934565b610100013561173b60408d018d612934565b6040805160008152602081018083529590955260ff9093169284019290925260608301526101200135608082015260a0016020604051602081039080840390855afa15801561178e573d6000803e3d6000fd5b5050506020604051035190506117a2610f31565b6001600160a01b0316816001600160a01b0316141580156117d3575060018201546001600160a01b03828116911614155b80156117e757506001600160a01b03811615155b1561180857600160405163eac08f1960e01b815260040161057e9190612330565b5050505050505050565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806118895760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b604482015260640161057e565b50505050565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806119125760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b604482015260640161057e565b5050505050565b600080611930600119368181013560f01c90030190565b929092013560601c92915050565b6000600160581b821061195057600080fd5b5090565b60008061196b600119368181013560f01c90030190565b929092013592915050565b60008061198d600119368181013560f01c90030190565b929092013560f81c92915050565b6000606060006119ab85856113f2565b6119b3610b93565b6001600160a01b03166322d51d7e866119ca610e67565b6040518363ffffffff1660e01b81526004016119e79291906131a9565b6000604051808303816000875af1158015611a06573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611a2e91908101906131d3565b919450925090506000611a50611a476040880188612934565b60c00135611a77565b9050611a6f8582611a5f610ba4565b6001600160a01b03169190611b8e565b509250925092565b600080611a82610b93565b6001600160a01b031663017e7e586040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611ac1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ae59190612358565b90506001600160a01b03811615801590610f29576000611b03610b93565b6001600160a01b0316630f0245ad866040518263ffffffff1660e01b8152600401611b3091815260200190565b602060405180830381865afa158015611b4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b7191906124d8565b90508085039450611b858382611a5f610ba4565b50509192915050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806118895760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b604482015260640161057e565b6040518060400160405280611c19611c4f565b81526040805160a0810182526000808252602082810182905292820181905260608201819052608082015291015290565b905290565b6040518060a0016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000801916815260200160008152602001611c4a6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b600060208284031215611ccf57600080fd5b81356001600160e01b0319811681146113eb57600080fd5b60005b83811015611d02578181015183820152602001611cea565b50506000910152565b60008151808452611d23816020860160208601611ce7565b601f01601f19169290920160200192915050565b6020815260006113eb6020830184611d0b565b6001600160a01b0381168114610b7457600080fd5b600080600080600060808688031215611d7757600080fd5b8535611d8281611d4a565b94506020860135611d9281611d4a565b93506040860135925060608601356001600160401b0380821115611db557600080fd5b818801915088601f830112611dc957600080fd5b813581811115611dd857600080fd5b896020828501011115611dea57600080fd5b9699959850939650602001949392505050565b600060608284031215611e0f57600080fd5b50919050565b60008060808385031215611e2857600080fd5b611e328484611dfd565b946060939093013593505050565b60ff81168114610b7457600080fd5b8035611e5a81611e40565b919050565b600080600080600060808688031215611e7757600080fd5b853594506020860135611e8981611e40565b935060408601356001600160401b0380821115611ea557600080fd5b611eb189838a01611dfd565b94506060880135915080821115611ec757600080fd5b818801915088601f830112611edb57600080fd5b813581811115611eea57600080fd5b8960206101c083028501011115611dea57600080fd5b80516001600160a01b0390811683526020808301519091168184015260408083015181850152606080840151818601526080938401518051858701529283015160a08601529082015160c085015281015160e0840152015161010090910152565b611f6c828251611f00565b60209081015180516001600160581b03166101208401529081015160ff16610140830152604081015164ffffffffff908116610160840152606082015116610180830152608001516101a090910152565b600081518084526020808501945080840160005b83811015611ff857611fe4878351611f61565b6101c0969096019590820190600101611fd1565b509495945050505050565b60006101e080835261201781840186611fbd565b9150506113eb6020830184611f61565b60006020828403121561203957600080fd5b5035919050565b8015158114610b7457600080fd5b6000806040838503121561206157600080fd5b823561206c81611d4a565b9150602083013561207c81612040565b809150509250929050565b60006020828403121561209957600080fd5b81356001600160401b038111156120af57600080fd5b8201608081850312156113eb57600080fd5b600080604083850312156120d457600080fd5b82359150602083013561207c81611d4a565b6000602082840312156120f857600080fd5b81356113eb81611d4a565b6000806040838503121561211657600080fd5b82356001600160401b0381111561212c57600080fd5b61213885828601611dfd565b925050602083013561207c81611d4a565b8281526040602082015260006121626040830184611fbd565b949350505050565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b03811182821017156121a2576121a261216a565b60405290565b60405160a081016001600160401b03811182821017156121a2576121a261216a565b604080519081016001600160401b03811182821017156121a2576121a261216a565b60405161010081016001600160401b03811182821017156121a2576121a261216a565b604051601f8201601f191681016001600160401b03811182821017156122375761223761216a565b604052919050565b60006001600160401b038211156122585761225861216a565b50601f01601f191660200190565b60006020828403121561227857600080fd5b81516001600160401b0381111561228e57600080fd5b8201601f8101841361229f57600080fd5b80516122b26122ad8261223f565b61220f565b8181528560208385010111156122c757600080fd5b6122d8826020830160208601611ce7565b95945050505050565b694153542d5661756c742d60b01b81526000825161230681600a850160208701611ce7565b91909101600a0192915050565b60006020828403121561232557600080fd5b81516113eb81612040565b602081016009831061235257634e487b7160e01b600052602160045260246000fd5b91905290565b60006020828403121561236a57600080fd5b81516113eb81611d4a565b634e487b7160e01b600052603260045260246000fd5b6001600160581b0381168114610b7457600080fd5b64ffffffffff81168114610b7457600080fd5b80356123be8161238b565b6001600160581b0316825260208101356123d781611e40565b60ff16602083015260408101356123ed816123a0565b64ffffffffff908116604084015260608201359061240a826123a0565b166060830152608090810135910152565b803561242681611d4a565b6001600160a01b03908116835260208201359061244282611d4a565b8082166020850152505060408101356040830152606081013560608301526080810135608083015260a081013560a083015260c081013560c083015260e081013560e0830152610100808201358184015250610120610d908184018284016123b3565b6101c081016104e4828461241b565b600080604083850312156124c757600080fd5b505080516020909101519092909150565b6000602082840312156124ea57600080fd5b5051919050565b60006060828403121561250357600080fd5b61250b612180565b9050813561251881611e40565b815260208281013590820152604082013561253281611d4a565b604082015292915050565b60006001600160401b038211156125565761255661216a565b5060051b60200190565b600060a0828403121561257257600080fd5b61257a6121a8565b905081356125878161238b565b8152602082013561259781611e40565b602082015260408201356125aa816123a0565b604082015260608201356125bd816123a0565b806060830152506080820135608082015292915050565b60008183036101c08112156125e857600080fd5b6125f06121ca565b91506101208082121561260257600080fd5b61260a6121a8565b843561261581611d4a565b8152602085013561262581611d4a565b6020820152604085810135908201526060808601359082015260a0607f198401121561265057600080fd5b6126586121a8565b92506080850135835260a0850135602084015260c0850135604084015260e085013560608401526101008501356080840152826080820152808452506126a085828601612560565b6020840152505092915050565b600082601f8301126126be57600080fd5b813560206126ce6122ad8361253d565b8281526101c092830285018201928282019190878511156126ee57600080fd5b8387015b858110156127115761270489826125d4565b84529284019281016126f2565b5090979650505050505050565b600082601f83011261272f57600080fd5b813561273d6122ad8261223f565b81815284602083860101111561275257600080fd5b816020850160208301376000918101602001919091529392505050565b60006040828403121561278157600080fd5b6127896121ca565b9050813581526020808301356001600160401b038111156127a957600080fd5b8301601f810185136127ba57600080fd5b80356127c86122ad8261253d565b81815260059190911b820183019083810190878311156127e757600080fd5b928401925b82841015612805578335825292840192908401906127ec565b8085870152505050505092915050565b60006060823603121561282757600080fd5b61282f612180565b823561283a81611d4a565b81526020838101359082015260408301356001600160401b038082111561286057600080fd5b8185019150610140823603121561287657600080fd5b61287e6121ec565b61288836846124f1565b815260608301358281111561289c57600080fd5b6128a8368286016126ad565b6020830152506080830135828111156128c057600080fd5b6128cc3682860161271e565b60408301525060a0830135828111156128e457600080fd5b6128f03682860161276f565b60608301525060c0830135608082015261290c60e08401611e4f565b60a082015261010083013560c08201526101209092013560e083015250604082015292915050565b6000823561013e1983360301811261294b57600080fd5b9190910192915050565b6000808335601e1984360301811261296c57600080fd5b83016020810192503590506001600160401b0381111561298b57600080fd5b6101c08102360382131561299e57600080fd5b9250929050565b81835260208301925060008160005b848110156129da576129c6868361241b565b6101c09586019591909101906001016129b4565b5093949350505050565b6000808335601e198436030181126129fb57600080fd5b83016020810192503590506001600160401b03811115612a1a57600080fd5b80360382131561299e57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008235603e19833603018112612a6857600080fd5b90910192915050565b8035825260006020820135601e19833603018112612a8e57600080fd5b82016020810190356001600160401b03811115612aaa57600080fd5b8060051b803603831315612abd57600080fd5b60406020870181905286018290526001600160fb1b03821115612adf57600080fd5b8083606088013794909401606001949350505050565b60008135612b0281611d4a565b6001600160a01b039081168452602083810135908501526040830135903684900361013e19018212612b3357600080fd5b60606040860152908301908135612b4981611e40565b60ff166060860152602082013560808601526040820135612b6981611d4a565b1660a0850152612b7c6060820182612955565b6101408060c0880152612b946101a0880183856129a5565b9250612ba360808501856129e4565b9250605f19808986030160e08a0152612bbd858584612a29565b9450612bcc60a0870187612a52565b935061010091508089860301828a015250612be78484612a71565b9350610120925060c085013583890152612c0360e08601611e4f565b60ff811689840152508401356101608801525090910135610180909401939093525090919050565b604081526000612c3e6040830185612af5565b90508260208301529392505050565b6000818303610120811215612c6157600080fd5b612c696121a8565b91508251612c7681611d4a565b82526020830151612c8681611d4a565b6020830152604083810151908301526060808401519083015260a0607f1982011215612cb157600080fd5b50612cba6121a8565b6080830151815260a0830151602082015260c0830151604082015260e0830151606082015261010083015160808201528060808301525092915050565b60006101208284031215612d0a57600080fd5b6113eb8383612c4d565b60006101c08284031215612d2757600080fd5b6113eb83836125d4565b600060408301825184526020808401516040828701528281518085526060880191508383019450600092505b80831015612d7d5784518252938301936001929092019190830190612d5d565b509695505050505050565b60006101a0825184526020830151602085015260018060a01b0360408401511660408501526060830151612dbf6060860182611f00565b506080830151816101808601526122d882860182611fbd565b60208152600082516060602084015260018060a01b038151166080840152602081015160a084015260408101519050606060c0840152612e3c60e084018251805160ff168252602080820151908301526040908101516001600160a01b0316910152565b602081015161014084810152612e56610220850182611fbd565b9050604082015160df198086840301610160870152612e758383611d0b565b925060608401519150808684030161018087015250612e948282612d31565b91505060808201516101a085015260a0820151612eb76101c086018260ff169052565b5060c08201516101e085015260e090910151610200840152602084015160ff81166040850152906040850151848203601f1901606086015291506122d88183612d88565b60008183036101c0811215612f0f57600080fd5b612f176121ca565b9150612f238484612c4d565b825260a061011f1982011215612f3857600080fd5b50612f416121a8565b610120830151612f508161238b565b8152610140830151612f6181611e40565b6020820152610160830151612f75816123a0565b6040820152610180830151612f89816123a0565b806060830152506101a083015160808201528060208301525092915050565b600082601f830112612fb957600080fd5b81516020612fc96122ad8361253d565b8281526101c09283028501820192828201919087851115612fe957600080fd5b8387015b8581101561271157612fff8982612efb565b8452928401928101612fed565b6000806101e0838503121561302057600080fd5b82516001600160401b0381111561303657600080fd5b61304285828601612fa8565b9250506130528460208501612efb565b90509250929050565b60006020828403121561306d57600080fd5b81356113eb81612040565b6000808335601e1984360301811261308f57600080fd5b8301803591506001600160401b038211156130a957600080fd5b6020019150600581901b360382131561299e57600080fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016130e9576130e96130c1565b5060010190565b600063ffffffff808316818103613109576131096130c1565b6001019392505050565b6420a9aa16ab60d91b81526bffffffffffffffffffffffff198360601b166005820152602d60f81b60198201526000825161315581601a850160208701611ce7565b91909101601a019392505050565b818103818111156104e4576104e46130c1565b60008235603e1983360301811261294b57600080fd5b60006020828403121561319e57600080fd5b81356113eb81611e40565b6040815260006131bc6040830185612af5565b905060018060a01b03831660208301529392505050565b6000806000606084860312156131e857600080fd5b8351925060208401516001600160401b0381111561320557600080fd5b61321186828701612fa8565b92505060408401519050925092509256fe8db05f23e24c991e45d8dd3599daf8e419ee5ab93565cf65b18905286a24ec158db05f23e24c991e45d8dd3599daf8e419ee5ab93565cf65b18905286a24ec14a26469706673582212201b6cad4f5bfb70fee6ce0482f063b0a5ca3d5fbe03f402cce82dcf38a17f13a464736f6c63430008110033",
    "sourceMap": "1051:1870:136:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101da5760003560e01c80636e553f6511610104578063c237c703116100a2578063dc2fbaee11610071578063dc2fbaee1461037c578063f5f1f1a714610419578063f698da2514610421578063fc0e74d11461042957600080fd5b8063c237c703146103c3578063ca5eb5e1146103dd578063cb58189d146103f0578063d4208b73146103f857600080fd5b806395d89b41116100de57806395d89b411461038c578063ac4746ab14610394578063ba9a061a1461039c578063c0e9b053146103a457600080fd5b80636e553f6514610369578063834029ba1461037c5780638da5cb5b1461038457600080fd5b80633177e0fe1161017c578063474a1e541161014b578063474a1e541461031157806351ab5c4914610324578063627cdcb91461035957806366d003ac1461036157600080fd5b80633177e0fe146102c357806332fe7b26146102d657806338d52e0f146102f65780633c96ce12146102fe57600080fd5b80632917e097116101b85780632917e097146102555780632d7342c0146102685780632e1a7d4d1461028957806330040e771461029e57600080fd5b806301ffc9a7146101df57806306fdde0314610208578063150b7a021461021d575b600080fd5b6101f36101ed366004611cbd565b50600090565b60405190151581526020015b60405180910390f35b610210610431565b6040516101ff9190611d37565b61023c61022b366004611d5f565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016101ff565b610210610263366004611e15565b6104c4565b61027b610276366004611e5f565b6104ea565b6040516101ff929190612003565b61029c610297366004612027565b610b30565b005b6000805160206132438339815191525460405163ffffffff90911681526020016101ff565b61029c6102d136600461204e565b610b77565b6102de610b93565b6040516001600160a01b0390911681526020016101ff565b6102de610ba4565b61029c61030c366004612027565b610bb0565b61029c61031f366004612087565b610c1f565b61034b7f679f3933bd13bd2e4ec6e9cde341ede07736ad7b635428a8a211e9cccb4393b081565b6040519081526020016101ff565b61029c610d96565b6102de610e67565b61034b6103773660046120c1565b610e88565b61029c610b77565b6102de610f31565b610210610f3d565b61034b610fc5565b61034b610fd1565b60008051602061322383398151915254600160a81b900460ff166101f3565b6103cb610fdd565b60405160ff90911681526020016101ff565b61029c6103eb3660046120e6565b610fe9565b61034b61108b565b61040b610406366004612103565b611097565b6040516101ff929190612149565b6102de6111c1565b61034b61122c565b61029c6112ab565b606061043b610ba4565b6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610478573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104a09190810190612266565b6040516020016104b091906122e1565b604051602081830303815290604052905090565b60606000805160206132438339815191526104e081858561131b565b9150505b92915050565b60606104f4611c06565b6104fc610b93565b6001600160a01b0316635c975abb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610539573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055d9190612313565b1561058757600860405163eac08f1960e01b815260040161057e9190612330565b60405180910390fd5b60008051602061322383398151915254600160a81b900460ff16156105c257600760405163eac08f1960e01b815260040161057e9190612330565b6000806105cd610b93565b6001600160a01b03166341700b976040518163ffffffff1660e01b8152600401602060405180830381865afa15801561060a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062e9190612358565b6001600160a01b03166352335c8d87878b60ff1681811061065157610651612375565b90506101c002016040518263ffffffff1660e01b815260040161067491906124a5565b6040805180830381865afa158015610690573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b491906124b4565b915091506106c0610ba4565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610706573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072a91906124d8565b81111561074d57600460405163eac08f1960e01b815260040161057e9190612330565b61075e87610759610e67565b6113f2565b6107e3610769610b93565b6001600160a01b03166396d6401d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ca9190612358565b826107d3610ba4565b6001600160a01b03169190611812565b60006107ed610b93565b6001600160a01b03166341700b976040518163ffffffff1660e01b8152600401602060405180830381865afa15801561082a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084e9190612358565b905030610859610e67565b6001600160a01b0316141580156108f45750806001600160a01b031663e985e9c530610883610e67565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa1580156108ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f29190612313565b155b1561097157806001600160a01b031663a22cb465610910610e67565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260016024820152604401600060405180830381600087803b15801561095857600080fd5b505af115801561096c573d6000803e3d6000fd5b505050505b806001600160a01b0316639b9761fb60405180606001604052808b61099590612815565b81526020018c60ff1681526020016040518060a001604052808f81526020018d80604001906109c49190612934565b60c0013581526020016109d5610e67565b6001600160a01b031681526020016109eb610b93565b6001600160a01b031663f44794ca8f60006040518363ffffffff1660e01b8152600401610a19929190612c2b565b610120604051808303816000875af1158015610a39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5d9190612cf7565b81526020018c8c808060200260200160405190810160405280939291908181526020016000905b82821015610ab157610aa26101c08302860136819003810190612d14565b81526020019060010190610a84565b50505050508152508152506040518263ffffffff1660e01b8152600401610ad89190612dd8565b6000604051808303816000875af1158015610af7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b1f919081019061300c565b945094505050509550959350505050565b610b38610f31565b6001600160a01b0316336001600160a01b031614610b5557600080fd5b610b74303383610b63610ba4565b6001600160a01b031692919061188f565b50565b600060405163eac08f1960e01b815260040161057e9190612330565b6000610b9f6000611919565b905090565b6000610b9f6029611919565b610bb8610f31565b6001600160a01b0316336001600160a01b031614610bd557600080fd5b610bde8161193e565b60008051602061324383398151915280546001600160581b0392909216640100000000026effffffffffffffffffffff000000001990921691909117905550565b610c27610b93565b6001600160a01b0316336001600160a01b031614610c4457600080fd5b6000805160206132438339815191526000610c6260208401846120e6565b6001600160a01b031614610ca057610c7d60208301836120e6565b6001820180546001600160a01b0319166001600160a01b03929092169190911790555b610cad826060013561193e565b81546001600160581b0391909116640100000000026effffffffffffffffffffff0000000019909116178155610ce9604083016020840161305b565b15610d925760018101805460ff60a01b1916600160a01b17905560005b610d136040840184613078565b9050811015610d90576001600283016000610d316040870187613078565b85818110610d4157610d41612375565b9050602002016020810190610d5691906120e6565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905580610d88816130d7565b915050610d06565b505b5050565b600080516020613243833981519152610dad610f31565b6001600160a01b0316336001600160a01b031614158015610ddb575060018101546001600160a01b03163314155b15610dfc57600060405163eac08f1960e01b815260040161057e9190612330565b805463ffffffff16816000610e10836130f0565b82546101009290920a63ffffffff8181021990931691831602179091558254604051911681527fd53ee127c4cc096a6aa01269ecbe5c887e5a1cbe71d83109974c55e865a0db82915060200160405180910390a150565b60006001610e73610fdd565b60ff1603610e8057503090565b610b9f610f31565b3360009081527f8db05f23e24c991e45d8dd3599daf8e419ee5ab93565cf65b18905286a24ec1660205260408120546000805160206132438339815191529060ff1680610f125750610ed8610b93565b6001600160a01b0316336001600160a01b0316148015610f1257506001600160a01b038316600090815260028201602052604090205460ff165b610f1b57600080fd5b610f29333086610b63610ba4565b509192915050565b6000610b9f6015611919565b6060610f47610f31565b610f4f610ba4565b6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610f8c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fb49190810190612266565b6040516020016104b0929190613113565b6000610b9f605d611954565b6000610b9f603d611954565b6000610b9f6014611976565b610ff1610f31565b6001600160a01b0316336001600160a01b03161461100e57600080fd5b60008051602061322383398151915280546001600160a01b0390811660009081527f8db05f23e24c991e45d8dd3599daf8e419ee5ab93565cf65b18905286a24ec166020526040808220805460ff1990811690915594909216808252919020805490931660011790925580546001600160a01b0319169091179055565b6000610b9f607d611954565b600060606110a3610b93565b6001600160a01b0316635c975abb6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111049190612313565b1561112557600860405163eac08f1960e01b815260040161057e9190612330565b60008051602061322383398151915254600160a81b900460ff161561116057600760405163eac08f1960e01b815260040161057e9190612330565b600061116c858561199b565b815192955090935091506111b990839061118890600190613163565b8151811061119857611198612375565b6020026020010151602001516060015184878060400190610d909190612934565b509250929050565b60006111cb610b93565b6001600160a01b031663f5f1f1a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611208573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9f9190612358565b604080517f2aef22f9d7df5f9d21c56d14029233f3fdaa91917727e1eb68e504d27072d6cd60208201527f044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d9181019190915246606082015230608082015260009060a00160405160208183030381529060405280519060200120905090565b6112b3610f31565b6001600160a01b0316336001600160a01b0316146112d057600080fd5b600080516020613223833981519152805460ff60a81b1916600160a81b1790556040517f43849b84f1a1ce86ba1205cd8a5d4fa1563bca4b169db452674f94b4b6ddaa6990600090a1565b8254604051606091600091611380917f679f3933bd13bd2e4ec6e9cde341ede07736ad7b635428a8a211e9cccb4393b09163ffffffff909116906020808901359188910193845263ffffffff9290921660208401526040830152606082015260800190565b60408051601f1981840301815291905280516020909101209050601960f81b600160f81b6113ac61122c565b6040516001600160f81b031993841660208201529290911660218301526022820152604281018290526062016040516020818303038152906040529150505b9392505050565b600061144c6020840180359061140890866120e6565b6040805160609290921b6bffffffffffffffffffffffff19166020808401919091526034808401949094528151808403909401845260549092019052815191012090565b905060006114586111c1565b6040516331a9108f60e11b8152600481018490529091506000906001600160a01b03831690636352211e90602401602060405180830381865afa1580156114a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114c79190612358565b60405163020604bf60e21b8152600481018590529091506000906001600160a01b0384169063081812fc90602401602060405180830381865afa158015611512573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115369190612358565b9050336001600160a01b038316148015906115635750816001600160a01b0316856001600160a01b031614155b80156115815750806001600160a01b0316856001600160a01b031614155b80156115fe5750611590610b93565b604051630642194560e41b81526001600160a01b0387811660048301529190911690636421945090602401602060405180830381865afa1580156115d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115fc9190612313565b155b156116b0576001600160a01b0381161561163557846001600160a01b0316816001600160a01b03161461163057600080fd5b6116b0565b60405163e985e9c560e01b81526001600160a01b038381166004830152868116602483015284169063e985e9c590604401602060405180830381865afa158015611683573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a79190612313565b6116b057600080fd5b600080516020613243833981519152600060016116f5836116d460408c018c612934565b6116e160408d018d612934565b6116ef9060a0810190613176565b3561131b565b805160209091012061170a60408b018b612934565b61171c9061010081019060e00161318c565b61172960408c018c612934565b610100013561173b60408d018d612934565b6040805160008152602081018083529590955260ff9093169284019290925260608301526101200135608082015260a0016020604051602081039080840390855afa15801561178e573d6000803e3d6000fd5b5050506020604051035190506117a2610f31565b6001600160a01b0316816001600160a01b0316141580156117d3575060018201546001600160a01b03828116911614155b80156117e757506001600160a01b03811615155b1561180857600160405163eac08f1960e01b815260040161057e9190612330565b5050505050505050565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806118895760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b604482015260640161057e565b50505050565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806119125760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b604482015260640161057e565b5050505050565b600080611930600119368181013560f01c90030190565b929092013560601c92915050565b6000600160581b821061195057600080fd5b5090565b60008061196b600119368181013560f01c90030190565b929092013592915050565b60008061198d600119368181013560f01c90030190565b929092013560f81c92915050565b6000606060006119ab85856113f2565b6119b3610b93565b6001600160a01b03166322d51d7e866119ca610e67565b6040518363ffffffff1660e01b81526004016119e79291906131a9565b6000604051808303816000875af1158015611a06573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611a2e91908101906131d3565b919450925090506000611a50611a476040880188612934565b60c00135611a77565b9050611a6f8582611a5f610ba4565b6001600160a01b03169190611b8e565b509250925092565b600080611a82610b93565b6001600160a01b031663017e7e586040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611ac1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ae59190612358565b90506001600160a01b03811615801590610f29576000611b03610b93565b6001600160a01b0316630f0245ad866040518263ffffffff1660e01b8152600401611b3091815260200190565b602060405180830381865afa158015611b4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b7191906124d8565b90508085039450611b858382611a5f610ba4565b50509192915050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806118895760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b604482015260640161057e565b6040518060400160405280611c19611c4f565b81526040805160a0810182526000808252602082810182905292820181905260608201819052608082015291015290565b905290565b6040518060a0016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000801916815260200160008152602001611c4a6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b600060208284031215611ccf57600080fd5b81356001600160e01b0319811681146113eb57600080fd5b60005b83811015611d02578181015183820152602001611cea565b50506000910152565b60008151808452611d23816020860160208601611ce7565b601f01601f19169290920160200192915050565b6020815260006113eb6020830184611d0b565b6001600160a01b0381168114610b7457600080fd5b600080600080600060808688031215611d7757600080fd5b8535611d8281611d4a565b94506020860135611d9281611d4a565b93506040860135925060608601356001600160401b0380821115611db557600080fd5b818801915088601f830112611dc957600080fd5b813581811115611dd857600080fd5b896020828501011115611dea57600080fd5b9699959850939650602001949392505050565b600060608284031215611e0f57600080fd5b50919050565b60008060808385031215611e2857600080fd5b611e328484611dfd565b946060939093013593505050565b60ff81168114610b7457600080fd5b8035611e5a81611e40565b919050565b600080600080600060808688031215611e7757600080fd5b853594506020860135611e8981611e40565b935060408601356001600160401b0380821115611ea557600080fd5b611eb189838a01611dfd565b94506060880135915080821115611ec757600080fd5b818801915088601f830112611edb57600080fd5b813581811115611eea57600080fd5b8960206101c083028501011115611dea57600080fd5b80516001600160a01b0390811683526020808301519091168184015260408083015181850152606080840151818601526080938401518051858701529283015160a08601529082015160c085015281015160e0840152015161010090910152565b611f6c828251611f00565b60209081015180516001600160581b03166101208401529081015160ff16610140830152604081015164ffffffffff908116610160840152606082015116610180830152608001516101a090910152565b600081518084526020808501945080840160005b83811015611ff857611fe4878351611f61565b6101c0969096019590820190600101611fd1565b509495945050505050565b60006101e080835261201781840186611fbd565b9150506113eb6020830184611f61565b60006020828403121561203957600080fd5b5035919050565b8015158114610b7457600080fd5b6000806040838503121561206157600080fd5b823561206c81611d4a565b9150602083013561207c81612040565b809150509250929050565b60006020828403121561209957600080fd5b81356001600160401b038111156120af57600080fd5b8201608081850312156113eb57600080fd5b600080604083850312156120d457600080fd5b82359150602083013561207c81611d4a565b6000602082840312156120f857600080fd5b81356113eb81611d4a565b6000806040838503121561211657600080fd5b82356001600160401b0381111561212c57600080fd5b61213885828601611dfd565b925050602083013561207c81611d4a565b8281526040602082015260006121626040830184611fbd565b949350505050565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b03811182821017156121a2576121a261216a565b60405290565b60405160a081016001600160401b03811182821017156121a2576121a261216a565b604080519081016001600160401b03811182821017156121a2576121a261216a565b60405161010081016001600160401b03811182821017156121a2576121a261216a565b604051601f8201601f191681016001600160401b03811182821017156122375761223761216a565b604052919050565b60006001600160401b038211156122585761225861216a565b50601f01601f191660200190565b60006020828403121561227857600080fd5b81516001600160401b0381111561228e57600080fd5b8201601f8101841361229f57600080fd5b80516122b26122ad8261223f565b61220f565b8181528560208385010111156122c757600080fd5b6122d8826020830160208601611ce7565b95945050505050565b694153542d5661756c742d60b01b81526000825161230681600a850160208701611ce7565b91909101600a0192915050565b60006020828403121561232557600080fd5b81516113eb81612040565b602081016009831061235257634e487b7160e01b600052602160045260246000fd5b91905290565b60006020828403121561236a57600080fd5b81516113eb81611d4a565b634e487b7160e01b600052603260045260246000fd5b6001600160581b0381168114610b7457600080fd5b64ffffffffff81168114610b7457600080fd5b80356123be8161238b565b6001600160581b0316825260208101356123d781611e40565b60ff16602083015260408101356123ed816123a0565b64ffffffffff908116604084015260608201359061240a826123a0565b166060830152608090810135910152565b803561242681611d4a565b6001600160a01b03908116835260208201359061244282611d4a565b8082166020850152505060408101356040830152606081013560608301526080810135608083015260a081013560a083015260c081013560c083015260e081013560e0830152610100808201358184015250610120610d908184018284016123b3565b6101c081016104e4828461241b565b600080604083850312156124c757600080fd5b505080516020909101519092909150565b6000602082840312156124ea57600080fd5b5051919050565b60006060828403121561250357600080fd5b61250b612180565b9050813561251881611e40565b815260208281013590820152604082013561253281611d4a565b604082015292915050565b60006001600160401b038211156125565761255661216a565b5060051b60200190565b600060a0828403121561257257600080fd5b61257a6121a8565b905081356125878161238b565b8152602082013561259781611e40565b602082015260408201356125aa816123a0565b604082015260608201356125bd816123a0565b806060830152506080820135608082015292915050565b60008183036101c08112156125e857600080fd5b6125f06121ca565b91506101208082121561260257600080fd5b61260a6121a8565b843561261581611d4a565b8152602085013561262581611d4a565b6020820152604085810135908201526060808601359082015260a0607f198401121561265057600080fd5b6126586121a8565b92506080850135835260a0850135602084015260c0850135604084015260e085013560608401526101008501356080840152826080820152808452506126a085828601612560565b6020840152505092915050565b600082601f8301126126be57600080fd5b813560206126ce6122ad8361253d565b8281526101c092830285018201928282019190878511156126ee57600080fd5b8387015b858110156127115761270489826125d4565b84529284019281016126f2565b5090979650505050505050565b600082601f83011261272f57600080fd5b813561273d6122ad8261223f565b81815284602083860101111561275257600080fd5b816020850160208301376000918101602001919091529392505050565b60006040828403121561278157600080fd5b6127896121ca565b9050813581526020808301356001600160401b038111156127a957600080fd5b8301601f810185136127ba57600080fd5b80356127c86122ad8261253d565b81815260059190911b820183019083810190878311156127e757600080fd5b928401925b82841015612805578335825292840192908401906127ec565b8085870152505050505092915050565b60006060823603121561282757600080fd5b61282f612180565b823561283a81611d4a565b81526020838101359082015260408301356001600160401b038082111561286057600080fd5b8185019150610140823603121561287657600080fd5b61287e6121ec565b61288836846124f1565b815260608301358281111561289c57600080fd5b6128a8368286016126ad565b6020830152506080830135828111156128c057600080fd5b6128cc3682860161271e565b60408301525060a0830135828111156128e457600080fd5b6128f03682860161276f565b60608301525060c0830135608082015261290c60e08401611e4f565b60a082015261010083013560c08201526101209092013560e083015250604082015292915050565b6000823561013e1983360301811261294b57600080fd5b9190910192915050565b6000808335601e1984360301811261296c57600080fd5b83016020810192503590506001600160401b0381111561298b57600080fd5b6101c08102360382131561299e57600080fd5b9250929050565b81835260208301925060008160005b848110156129da576129c6868361241b565b6101c09586019591909101906001016129b4565b5093949350505050565b6000808335601e198436030181126129fb57600080fd5b83016020810192503590506001600160401b03811115612a1a57600080fd5b80360382131561299e57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008235603e19833603018112612a6857600080fd5b90910192915050565b8035825260006020820135601e19833603018112612a8e57600080fd5b82016020810190356001600160401b03811115612aaa57600080fd5b8060051b803603831315612abd57600080fd5b60406020870181905286018290526001600160fb1b03821115612adf57600080fd5b8083606088013794909401606001949350505050565b60008135612b0281611d4a565b6001600160a01b039081168452602083810135908501526040830135903684900361013e19018212612b3357600080fd5b60606040860152908301908135612b4981611e40565b60ff166060860152602082013560808601526040820135612b6981611d4a565b1660a0850152612b7c6060820182612955565b6101408060c0880152612b946101a0880183856129a5565b9250612ba360808501856129e4565b9250605f19808986030160e08a0152612bbd858584612a29565b9450612bcc60a0870187612a52565b935061010091508089860301828a015250612be78484612a71565b9350610120925060c085013583890152612c0360e08601611e4f565b60ff811689840152508401356101608801525090910135610180909401939093525090919050565b604081526000612c3e6040830185612af5565b90508260208301529392505050565b6000818303610120811215612c6157600080fd5b612c696121a8565b91508251612c7681611d4a565b82526020830151612c8681611d4a565b6020830152604083810151908301526060808401519083015260a0607f1982011215612cb157600080fd5b50612cba6121a8565b6080830151815260a0830151602082015260c0830151604082015260e0830151606082015261010083015160808201528060808301525092915050565b60006101208284031215612d0a57600080fd5b6113eb8383612c4d565b60006101c08284031215612d2757600080fd5b6113eb83836125d4565b600060408301825184526020808401516040828701528281518085526060880191508383019450600092505b80831015612d7d5784518252938301936001929092019190830190612d5d565b509695505050505050565b60006101a0825184526020830151602085015260018060a01b0360408401511660408501526060830151612dbf6060860182611f00565b506080830151816101808601526122d882860182611fbd565b60208152600082516060602084015260018060a01b038151166080840152602081015160a084015260408101519050606060c0840152612e3c60e084018251805160ff168252602080820151908301526040908101516001600160a01b0316910152565b602081015161014084810152612e56610220850182611fbd565b9050604082015160df198086840301610160870152612e758383611d0b565b925060608401519150808684030161018087015250612e948282612d31565b91505060808201516101a085015260a0820151612eb76101c086018260ff169052565b5060c08201516101e085015260e090910151610200840152602084015160ff81166040850152906040850151848203601f1901606086015291506122d88183612d88565b60008183036101c0811215612f0f57600080fd5b612f176121ca565b9150612f238484612c4d565b825260a061011f1982011215612f3857600080fd5b50612f416121a8565b610120830151612f508161238b565b8152610140830151612f6181611e40565b6020820152610160830151612f75816123a0565b6040820152610180830151612f89816123a0565b806060830152506101a083015160808201528060208301525092915050565b600082601f830112612fb957600080fd5b81516020612fc96122ad8361253d565b8281526101c09283028501820192828201919087851115612fe957600080fd5b8387015b8581101561271157612fff8982612efb565b8452928401928101612fed565b6000806101e0838503121561302057600080fd5b82516001600160401b0381111561303657600080fd5b61304285828601612fa8565b9250506130528460208501612efb565b90509250929050565b60006020828403121561306d57600080fd5b81356113eb81612040565b6000808335601e1984360301811261308f57600080fd5b8301803591506001600160401b038211156130a957600080fd5b6020019150600581901b360382131561299e57600080fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016130e9576130e96130c1565b5060010190565b600063ffffffff808316818103613109576131096130c1565b6001019392505050565b6420a9aa16ab60d91b81526bffffffffffffffffffffffff198360601b166005820152602d60f81b60198201526000825161315581601a850160208701611ce7565b91909101601a019392505050565b818103818111156104e4576104e46130c1565b60008235603e1983360301811261294b57600080fd5b60006020828403121561319e57600080fd5b81356113eb81611e40565b6040815260006131bc6040830185612af5565b905060018060a01b03831660208301529392505050565b6000806000606084860312156131e857600080fd5b8351925060208401516001600160401b0381111561320557600080fd5b61321186828701612fa8565b92505060408401519050925092509256fe8db05f23e24c991e45d8dd3599daf8e419ee5ab93565cf65b18905286a24ec158db05f23e24c991e45d8dd3599daf8e419ee5ab93565cf65b18905286a24ec14a26469706673582212201b6cad4f5bfb70fee6ce0482f063b0a5ca3d5fbe03f402cce82dcf38a17f13a464736f6c63430008110033",
    "sourceMap": "1051:1870:136:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1594:133;;;;;;:::i;:::-;-1:-1:-1;1696:4:136;;1594:133;;;;470:14:187;;463:22;445:41;;433:2;418:18;1594:133:136;;;;;;;;1147:211;;;:::i;:::-;;;;;;;:::i;3232:223:137:-;;;;;;:::i;:::-;-1:-1:-1;;;3232:223:137;;;;;;;;;;;-1:-1:-1;;;;;;2492:33:187;;;2474:52;;2462:2;2447:18;3232:223:137;2330:202:187;4623:235:137;;;;;;:::i;:::-;;:::i;9539:1486::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2096:165:136:-;;;;;;:::i;:::-;;:::i;:::-;;1589:108:137;-1:-1:-1;;;;;;;;;;;1663:29:137;1589:108;;1663:29;;;;7231:42:187;;7219:2;7204:18;1589:108:137;7087:192:187;2682:237:136;;;;;;:::i;:::-;;:::i;610:119:129:-;;;:::i;:::-;;;-1:-1:-1;;;;;7982:32:187;;;7964:51;;7952:2;7937:18;610:119:129;7794:227:187;933:104:129;;;:::i;2079:168:137:-;;;;;;:::i;:::-;;:::i;5240:478::-;;;;;;:::i;:::-;;:::i;4300:114::-;;4348:66;4300:114;;;;;8776:25:187;;;8764:2;8749:18;4300:114:137;8630:177:187;1701:276:137;;;:::i;11383:204::-;;;:::i;1731:361:136:-;;;;;;:::i;:::-;;:::i;2265:205::-;;;:::i;833:96:129:-;;;:::i;1362:228:136:-;;;:::i;1128:104:129:-;;;:::i;1041:83::-;;;:::i;3696:94:137:-;-1:-1:-1;;;;;;;;;;;3761:24:137;-1:-1:-1;;;3761:24:137;;;;3696:94;;733:96:129;;;:::i;:::-;;;9486:4:187;9474:17;;;9456:36;;9444:2;9429:18;733:96:129;9314:184:187;5722:252:137;;;;;;:::i;:::-;;:::i;1236:88:129:-;;;:::i;8768:505:137:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1328:112:129:-;;;:::i;3955:341:137:-;;;:::i;3794:157::-;;;:::i;1147:211:136:-;1260:13;1334:7;:5;:7::i;:::-;-1:-1:-1;;;;;1328:21:136;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1328:23:136;;;;;;;;;;;;:::i;:::-;1297:55;;;;;;;;:::i;:::-;;;;;;;;;;;;;1283:70;;1147:211;:::o;4623:235:137:-;4750:12;-1:-1:-1;;;;;;;;;;;4815:38:137;2350:7;4838:8;4848:4;4815:19;:38::i;:::-;4808:45;;;4623:235;;;;;:::o;9539:1486::-;9746:25;9773:23;;:::i;:::-;3494:8;:6;:8::i;:::-;-1:-1:-1;;;;;3494:15:137;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3490:88;;;3543:27;3528:43;;-1:-1:-1;;;3528:43:137;;;;;;;;:::i;:::-;;;;;;;;3490:88;-1:-1:-1;;;;;;;;;;;3588:24:137;-1:-1:-1;;;3588:24:137;;;;3584:97;;;3644:29;3629:45;;-1:-1:-1;;;3629:45:137;;;;;;;;:::i;3584:97::-;9807:12:::1;9821:14:::0;9854:8:::1;:6;:8::i;:::-;-1:-1:-1::0;;;;;9839:42:137::1;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;9839:61:137::1;;9901:5;;9907:8;9901:15;;;;;;;;;:::i;:::-;;;;;;9839:78;;;;;;;;;;;;;;;:::i;:::-;;::::0;::::1;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9806:111;;;;9943:7;:5;:7::i;:::-;9937:39;::::0;-1:-1:-1;;;9937:39:137;;9970:4:::1;9937:39;::::0;::::1;7964:51:187::0;-1:-1:-1;;;;;9937:24:137;;;::::1;::::0;::::1;::::0;7937:18:187;;9937:39:137::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9928:6;:48;9924:168;;;10038:39;9993:92;;-1:-1:-1::0;;;9993:92:137::1;;;;;;;;:::i;9924:168::-;10098:47;10118:13;10133:11;:9;:11::i;:::-;10098:19;:47::i;:::-;10152:70;10187:8;:6;:8::i;:::-;-1:-1:-1::0;;;;;10187:23:137::1;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10215:6;10158:7;:5;:7::i;:::-;-1:-1:-1::0;;;;;10152:26:137::1;::::0;:70;:26:::1;:70::i;:::-;10229:19;10269:8;:6;:8::i;:::-;-1:-1:-1::0;;;;;10269:19:137::1;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10229:63:::0;-1:-1:-1;10333:4:137::1;10310:11;:9;:11::i;:::-;-1:-1:-1::0;;;;;10310:28:137::1;;;:93;;;;;10349:9;-1:-1:-1::0;;;;;10349:26:137::1;;10384:4;10391:11;:9;:11::i;:::-;10349:54;::::0;-1:-1:-1;;;;;;10349:54:137::1;::::0;;;;;;-1:-1:-1;;;;;17921:15:187;;;10349:54:137::1;::::0;::::1;17903:34:187::0;17973:15;;17953:18;;;17946:43;17838:18;;10349:54:137::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10348:55;10310:93;10299:172;;;10418:9;-1:-1:-1::0;;;;;10418:27:137::1;;10446:11;:9;:11::i;:::-;10418:46;::::0;-1:-1:-1;;;;;;10418:46:137::1;::::0;;;;;;-1:-1:-1;;;;;18186:32:187;;;10418:46:137::1;::::0;::::1;18168:51:187::0;10459:4:137::1;18235:18:187::0;;;18228:50;18141:18;;10418:46:137::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;10299:172;10490:9;-1:-1:-1::0;;;;;10490:20:137::1;;10520:492;;;;;;;;10570:13;10520:492;;;:::i;:::-;;;;;10605:8;10520:492;;;;;;10635:366;;;;;;;;10693:12;10635:366;;;;10727:13;:25;;;;;;;;:::i;:::-;:32;;;10635:366;;;;10783:11;:9;:11::i;:::-;-1:-1:-1::0;;;;;10635:366:137::1;;;;;10814:8;:6;:8::i;:::-;-1:-1:-1::0;;;;;10814:27:137::1;;10870:13:::0;11096:28;10814:148:::1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10635:366;;;;10983:5;;10635:366;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;::::1;;::::0;;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;10520:492:::1;;::::0;10490:530:::1;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;10490:530:137::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;10477:543;;;;;;;9539:1486:::0;;;;;;;;:::o;2096:165:136:-;2167:7;:5;:7::i;:::-;-1:-1:-1;;;;;2153:21:136;:10;-1:-1:-1;;;;;2153:21:136;;2145:30;;;;;;2181:75;2221:4;2236:10;2249:6;2187:7;:5;:7::i;:::-;-1:-1:-1;;;;;2181:31:136;;:75;;:31;:75::i;:::-;2096:165;:::o;2682:237::-;2880:33;2865:49;;-1:-1:-1;;;2865:49:136;;;;;;;;:::i;610:119:129:-;649:14;693:17;708:1;693:14;:17::i;:::-;671:40;;610:119;:::o;933:104::-;979:7;1001:18;1016:2;1001:14;:18::i;2079:168:137:-;2156:7;:5;:7::i;:::-;-1:-1:-1;;;;;2142:21:137;:10;-1:-1:-1;;;;;2142:21:137;;2134:30;;;;;;2221:21;:6;:19;:21::i;:::-;-1:-1:-1;;;;;;;;;;;2194:48:137;;-1:-1:-1;;;;;2194:48:137;;;;;;-1:-1:-1;;2194:48:137;;;;;;;;;-1:-1:-1;2079:168:137:o;5240:478::-;5335:8;:6;:8::i;:::-;-1:-1:-1;;;;;5313:31:137;:10;-1:-1:-1;;;;;5313:31:137;;5305:40;;;;;;-1:-1:-1;;;;;;;;;;;5351:16:137;5394:15;;;;;;:::i;:::-;-1:-1:-1;;;;;5394:29:137;;5390:78;;5446:15;;;;:6;:15;:::i;:::-;5433:10;;;:28;;-1:-1:-1;;;;;;5433:28:137;-1:-1:-1;;;;;5433:28:137;;;;;;;;;;5390:78;5488:32;:6;:17;;;:30;:32::i;:::-;5473:47;;-1:-1:-1;;;;;5473:47:137;;;;;;-1:-1:-1;;5473:47:137;;;;;;5530:23;;;;;;;;:::i;:::-;5526:188;;;5584:4;5563:18;;:25;;-1:-1:-1;;;;5563:25:137;-1:-1:-1;;;5563:25:137;;;;5596:112;5620:16;;;;:6;:16;:::i;:::-;:23;;5616:1;:27;5596:112;;;5695:4;5660:11;;;:32;5672:16;;;;:6;:16;:::i;:::-;5689:1;5672:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5660:32:137;;;;;;;;;;;;-1:-1:-1;5660:32:137;:39;;-1:-1:-1;;5660:39:137;;;;;;;;;;5645:3;;;;:::i;:::-;;;;5596:112;;;;5526:188;5299:419;5240:478;:::o;1701:276::-;-1:-1:-1;;;;;;;;;;;1798:7:137;:5;:7::i;:::-;-1:-1:-1;;;;;1784:21:137;:10;-1:-1:-1;;;;;1784:21:137;;;:49;;;;-1:-1:-1;1823:10:137;;;;-1:-1:-1;;;;;1823:10:137;1809;:24;;1784:49;1780:126;;;1865:33;1850:49;;-1:-1:-1;;;1850:49:137;;;;;;;;:::i;1780:126::-;1911:19;;;;:1;:17;:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1954:17;;1941:31;;1954:17;;7231:42:187;;1941:31:137;;-1:-1:-1;7219:2:187;7204:18;1941:31:137;;;;;;;1736:241;1701:276::o;11383:204::-;11425:7;11465:45;11444:11;:9;:11::i;:::-;:67;;;11440:143;;-1:-1:-1;11536:4:137;;11383:204::o;11440:143::-;11569:7;:5;:7::i;1731:361:136:-;1900:10;1818:7;1888:23;;;:11;:23;;;;;;-1:-1:-1;;;;;;;;;;;2350:7:137;1888:23:136;;;:93;;;1946:8;:6;:8::i;:::-;-1:-1:-1;;;;;1924:31:136;:10;-1:-1:-1;;;;;1924:31:136;;:56;;;;-1:-1:-1;;;;;;1959:21:136;;;;;;:11;;;:21;;;;;;;;1924:56;1873:114;;;;;;1993:75;2033:10;2054:4;2061:6;1999:7;:5;:7::i;1993:75::-;-1:-1:-1;2081:6:136;;1731:361;-1:-1:-1;;1731:361:136:o;833:96:129:-;871:7;893:18;908:2;893:14;:18::i;1362:228:136:-;1477:13;1546:7;:5;:7::i;:::-;1566;:5;:7::i;:::-;-1:-1:-1;;;;;1560:21:136;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1560:23:136;;;;;;;;;;;;:::i;:::-;1520:64;;;;;;;;;:::i;1128:104:129:-;1173:7;1195:18;1210:2;1195:14;:18::i;1041:83::-;1079:7;1101:18;1116:2;1101:14;:18::i;733:96::-;775:5;795:16;808:2;795:12;:16::i;5722:252:137:-;5799:7;:5;:7::i;:::-;-1:-1:-1;;;;;5785:21:137;:10;-1:-1:-1;;;;;5785:21:137;;5777:30;;;;;;-1:-1:-1;;;;;;;;;;;5887:10:137;;-1:-1:-1;;;;;5887:10:137;;;5837:16;5875:23;;;:11;:23;;;;;;:31;;-1:-1:-1;;5875:31:137;;;;;;5912:22;;;;;;;;;;:29;;;;;5887:10;5912:29;;;;5947:22;;-1:-1:-1;;;;;;5947:22:137;;;;;;5722:252::o;1236:88:129:-;1278:7;1300:19;1315:3;1300:14;:19::i;8768:505:137:-;8907:14;8923:31;3494:8;:6;:8::i;:::-;-1:-1:-1;;;;;3494:15:137;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3490:88;;;3543:27;3528:43;;-1:-1:-1;;;3528:43:137;;;;;;;;:::i;3490:88::-;-1:-1:-1;;;;;;;;;;;3588:24:137;-1:-1:-1;;;3588:24:137;;;;3584:97;;;3644:29;3629:45;;-1:-1:-1;;;3629:45:137;;;;;;;;:::i;3584:97::-;9007:21:::1;9067:62;9101:6;9115:8;9067:26;:62::i;:::-;9167:12:::0;;9034:95;;-1:-1:-1;9034:95:137;;-1:-1:-1;9034:95:137;-1:-1:-1;9135:133:137::1;::::0;9034:95;;9167:16:::1;::::0;9182:1:::1;::::0;9167:16:::1;:::i;:::-;9161:23;;;;;;;;:::i;:::-;;;;;;;:29;;;:33;;;9202:6;9216;:18;;;;;;;;:::i;9135:133::-;8958:315;8768:505:::0;;;;;:::o;1328:112:129:-;1377:16;1408:8;:6;:8::i;:::-;-1:-1:-1;;;;;1408:25:129;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3955:341:137:-;4058:225;;;4080:107;4058:225;;;40338:25:187;4199:14:137;40379:18:187;;;40372:34;;;;4235:13:137;40422:18:187;;;40415:34;4268:4:137;40465:18:187;;;40458:60;4011:7:137;;40310:19:187;;4058:225:137;;;;;;;;;;;;4039:252;;;;;;4026:265;;3955:341;:::o;3794:157::-;3851:7;:5;:7::i;:::-;-1:-1:-1;;;;;3837:21:137;:10;-1:-1:-1;;;;;3837:21:137;;3829:30;;;;;;-1:-1:-1;;;;;;;;;;;3889:31:137;;-1:-1:-1;;;;3889:31:137;-1:-1:-1;;;3889:31:137;;;3931:15;;;;3889:31;;3931:15;3794:157::o;4862:374::-;5094:17;;5064:73;;5012:12;;5032;;5064:73;;4348:66;;5094:17;;;;;5113;;;;;;5132:4;;5064:73;40758:25:187;;;40831:10;40819:23;;;;40814:2;40799:18;;40792:51;40874:2;40859:18;;40852:34;40917:2;40902:18;;40895:34;40745:3;40730:19;;40529:406;5064:73:137;;;;-1:-1:-1;;5064:73:137;;;;;;;;;5047:96;;5064:73;5047:96;;;;;-1:-1:-1;;;;;;;5207:17:137;:15;:17::i;:::-;5162:69;;-1:-1:-1;;;;;;41193:15:187;;;5162:69:137;;;41181:28:187;41238:15;;;;41225:11;;;41218:36;41270:11;;;41263:27;41306:12;;;41299:28;;;41343:12;;5162:69:137;;;;;;;;;;;;5149:82;;;4862:374;;;;;;:::o;6738:1185::-;6860:20;6883:46;6914:14;;;;;;6883:20;;6914:6;6883:20;:::i;:::-;417:32:166;;;44376:2:187;44372:15;;;;-1:-1:-1;;44372:15:187;417:32:166;;;;44356:66:187;;;;44438:12;;;;44431:28;;;;417:32:166;;;;;;;;;;44475:12:187;;;;417:32:166;;407:43;;;;;;289:167;6883:46:137;6860:69;;6935:9;6962:18;:16;:18::i;:::-;7005:24;;-1:-1:-1;;;7005:24:137;;;;;8776:25:187;;;6935:47:137;;-1:-1:-1;6988:14:137;;-1:-1:-1;;;;;7005:10:137;;;;;8749:18:187;;7005:24:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7054:28;;-1:-1:-1;;;7054:28:137;;;;;8776:25:187;;;6988:41:137;;-1:-1:-1;7035:16:137;;-1:-1:-1;;;;;7054:14:137;;;;;8749:18:187;;7054:28:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7035:47;-1:-1:-1;7100:10:137;-1:-1:-1;;;;;7100:20:137;;;;;;:48;;;7142:6;-1:-1:-1;;;;;7130:18:137;:8;-1:-1:-1;;;;;7130:18:137;;;7100:48;:78;;;;;7170:8;-1:-1:-1;;;;;7158:20:137;:8;-1:-1:-1;;;;;7158:20:137;;;7100:78;:120;;;;;7189:8;:6;:8::i;:::-;:31;;-1:-1:-1;;;7189:31:137;;-1:-1:-1;;;;;7982:32:187;;;7189:31:137;;;7964:51:187;7189:21:137;;;;;;;7937:18:187;;7189:31:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7188:32;7100:120;7089:299;;;-1:-1:-1;;;;;7239:22:137;;;7235:147;;7293:8;-1:-1:-1;;;;;7281:20:137;:8;-1:-1:-1;;;;;7281:20:137;;7273:29;;;;;;7235:147;;;7335:37;;-1:-1:-1;;;7335:37:137;;-1:-1:-1;;;;;17921:15:187;;;7335:37:137;;;17903:34:187;17973:15;;;17953:18;;;17946:43;7335:19:137;;;;;17838:18:187;;7335:37:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7327:46;;;;;;-1:-1:-1;;;;;;;;;;;7393:16:137;7451:257;7487:123;2350:7;7531:18;;;;;;:::i;:::-;7570;;;;:6;:18;:::i;:::-;:25;;;;;;;:::i;:::-;:30;7487:19;:123::i;:::-;7468:150;;;;;;;7626:18;;;;:6;:18;:::i;:::-;:20;;;;;;;;;:::i;:::-;7654:18;;;;:6;:18;:::i;:::-;:20;;;7682:18;;;;:6;:18;:::i;:::-;7451:257;;;;;;;;;;;;42430:25:187;;;;42503:4;42491:17;;;42471:18;;;42464:45;;;;42525:18;;;42518:34;7682:20:137;;;42568:18:187;;;42561:34;42402:19;;7451:257:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7431:277;;7738:7;:5;:7::i;:::-;-1:-1:-1;;;;;7725:20:137;:9;-1:-1:-1;;;;;7725:20:137;;;:47;;;;-1:-1:-1;7762:10:137;;;;-1:-1:-1;;;;;7749:23:137;;;7762:10;;7749:23;;7725:47;:74;;;;-1:-1:-1;;;;;;7776:23:137;;;;7725:74;7714:205;;;7866:38;7821:91;;-1:-1:-1;;;7821:91:137;;;;;;;;:::i;7714:205::-;6854:1069;;;;;;6738:1185;;:::o;4326:1454:127:-;4437:12;4564:4;4558:11;-1:-1:-1;;;4687:17:127;4680:93;4820:2;4816:1;4797:17;4793:25;4786:37;4900:6;4895:2;4876:17;4872:26;4865:42;5702:2;5699:1;5695:2;5676:17;5673:1;5666:5;5659;5654:51;5223:16;5216:24;5210:2;5192:16;5189:24;5185:1;5181;5175:8;5172:15;5168:46;5165:76;4965:754;4954:765;;;5747:7;5739:34;;;;-1:-1:-1;;;5739:34:127;;42808:2:187;5739:34:127;;;42790:21:187;42847:2;42827:18;;;42820:30;-1:-1:-1;;;42866:18:187;;;42859:44;42920:18;;5739:34:127;42606:338:187;5739:34:127;4427:1353;4326:1454;;;:::o;1285:1573::-;1423:12;1550:4;1544:11;-1:-1:-1;;;1673:17:127;1666:93;1806:4;1802:1;1783:17;1779:25;1772:39;1890:2;1885;1866:17;1862:26;1855:38;1970:6;1965:2;1946:17;1942:26;1935:42;2774:2;2771:1;2766:3;2747:17;2744:1;2737:5;2730;2725:52;2293:16;2286:24;2280:2;2262:16;2259:24;2255:1;2251;2245:8;2242:15;2238:46;2235:76;2035:756;2024:767;;;2819:7;2811:40;;;;-1:-1:-1;;;2811:40:127;;43151:2:187;2811:40:127;;;43133:21:187;43190:2;43170:18;;;43163:30;-1:-1:-1;;;43209:18:187;;;43202:50;43269:18;;2811:40:127;42949:344:187;2811:40:127;1413:1445;1285:1573;;;;:::o;354:318:0:-;444:11;471:14;488:25;-1:-1:-1;;3120:14:0;3116:22;;;3103:36;3098:3;3094:46;3037:121;;;;2864:310;488:25;632:22;;;;619:36;613:4;609:47;;354:318;-1:-1:-1;;354:318:0:o;1782:117:33:-;1838:8;-1:-1:-1;;;1862:1:33;:11;1854:20;;;;;;-1:-1:-1;1892:1:33;1782:117::o;835:307:0:-;925:11;952:14;969:25;-1:-1:-1;;3120:14:0;3116:22;;;3103:36;3098:3;3094:46;3037:121;;;;2864:310;969:25;1103:22;;;;1090:36;;835:307;-1:-1:-1;;835:307:0:o;2497:286::-;2561:9;2582:14;2599:25;-1:-1:-1;;3120:14:0;3116:22;;;3103:36;3098:3;3094:46;3037:121;;;;2864:310;2599:25;2743:22;;;;2730:36;2724:4;2720:47;;2497:286;-1:-1:-1;;2497:286:0:o;11903:458:137:-;12040:17;12065:31;12104:13;12132:32;12152:1;12155:8;12132:19;:32::i;:::-;12198:8;:6;:8::i;:::-;-1:-1:-1;;;;;12198:28:137;;12227:1;12230:11;:9;:11::i;:::-;12198:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12198:44:137;;;;;;;;;;;;:::i;:::-;12170:72;;-1:-1:-1;12170:72:137;-1:-1:-1;12170:72:137;-1:-1:-1;12248:14:137;12265:40;12284:13;;;;:1;:13;:::i;:::-;:20;;;12265:18;:40::i;:::-;12248:57;;12311:45;12339:8;12349:6;12317:7;:5;:7::i;:::-;-1:-1:-1;;;;;12311:27:137;;:45;:27;:45::i;:::-;12126:235;11903:458;;;;;:::o;12365:344::-;12427:7;12442:13;12458:8;:6;:8::i;:::-;-1:-1:-1;;;;;12458:14:137;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12442:32;-1:-1:-1;;;;;;12493:19:137;;;;;;12518:168;;12537:11;12551:8;:6;:8::i;:::-;-1:-1:-1;;;;;12551:23:137;;12575:6;12551:31;;;;;;;;;;;;;8776:25:187;;8764:2;8749:18;;8630:177;12551:31:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12537:45;;12621:3;12611:13;;;;12640:39;12668:5;12675:3;12646:7;:5;:7::i;12640:39::-;12529:157;-1:-1:-1;12698:6:137;;12365:344;-1:-1:-1;;12365:344:137:o;2864:1456:127:-;2976:12;3103:4;3097:11;-1:-1:-1;;;3226:17:127;3219:93;3359:2;3355:1;3336:17;3332:25;3325:37;3439:6;3434:2;3415:17;3411:26;3404:42;4241:2;4238:1;4234:2;4215:17;4212:1;4205:5;4198;4193:51;3762:16;3755:24;3749:2;3731:16;3728:24;3724:1;3720;3714:8;3711:15;3707:46;3704:76;3504:754;3493:765;;;4286:7;4278:35;;;;-1:-1:-1;;;4278:35:127;;44700:2:187;4278:35:127;;;44682:21:187;44739:2;44719:18;;;44712:30;-1:-1:-1;;;44758:18:187;;;44751:45;44813:18;;4278:35:127;44498:339:187;-1:-1:-1;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:286:187;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:187;;209:43;;199:71;;266:1;263;256:12;497:250;582:1;592:113;606:6;603:1;600:13;592:113;;;682:11;;;676:18;663:11;;;656:39;628:2;621:10;592:113;;;-1:-1:-1;;739:1:187;721:16;;714:27;497:250::o;752:271::-;794:3;832:5;826:12;859:6;854:3;847:19;875:76;944:6;937:4;932:3;928:14;921:4;914:5;910:16;875:76;:::i;:::-;1005:2;984:15;-1:-1:-1;;980:29:187;971:39;;;;1012:4;967:50;;752:271;-1:-1:-1;;752:271:187:o;1028:220::-;1177:2;1166:9;1159:21;1140:4;1197:45;1238:2;1227:9;1223:18;1215:6;1197:45;:::i;1253:131::-;-1:-1:-1;;;;;1328:31:187;;1318:42;;1308:70;;1374:1;1371;1364:12;1389:936;1486:6;1494;1502;1510;1518;1571:3;1559:9;1550:7;1546:23;1542:33;1539:53;;;1588:1;1585;1578:12;1539:53;1627:9;1614:23;1646:31;1671:5;1646:31;:::i;:::-;1696:5;-1:-1:-1;1753:2:187;1738:18;;1725:32;1766:33;1725:32;1766:33;:::i;:::-;1818:7;-1:-1:-1;1872:2:187;1857:18;;1844:32;;-1:-1:-1;1927:2:187;1912:18;;1899:32;-1:-1:-1;;;;;1980:14:187;;;1977:34;;;2007:1;2004;1997:12;1977:34;2045:6;2034:9;2030:22;2020:32;;2090:7;2083:4;2079:2;2075:13;2071:27;2061:55;;2112:1;2109;2102:12;2061:55;2152:2;2139:16;2178:2;2170:6;2167:14;2164:34;;;2194:1;2191;2184:12;2164:34;2239:7;2234:2;2225:6;2221:2;2217:15;2213:24;2210:37;2207:57;;;2260:1;2257;2250:12;2207:57;1389:936;;;;-1:-1:-1;1389:936:187;;-1:-1:-1;2291:2:187;2283:11;;2313:6;1389:936;-1:-1:-1;;;1389:936:187:o;2537:163::-;2605:5;2650:2;2641:6;2636:3;2632:16;2628:25;2625:45;;;2666:1;2663;2656:12;2625:45;-1:-1:-1;2688:6:187;2537:163;-1:-1:-1;2537:163:187:o;2705:324::-;2809:6;2817;2870:3;2858:9;2849:7;2845:23;2841:33;2838:53;;;2887:1;2884;2877:12;2838:53;2910:62;2964:7;2953:9;2910:62;:::i;:::-;2900:72;3019:2;3004:18;;;;2991:32;;-1:-1:-1;;;2705:324:187:o;3257:114::-;3341:4;3334:5;3330:16;3323:5;3320:27;3310:55;;3361:1;3358;3351:12;3376:130;3442:20;;3471:29;3442:20;3471:29;:::i;:::-;3376:130;;;:::o;3511:1092::-;3679:6;3687;3695;3703;3711;3764:3;3752:9;3743:7;3739:23;3735:33;3732:53;;;3781:1;3778;3771:12;3732:53;3817:9;3804:23;3794:33;;3877:2;3866:9;3862:18;3849:32;3890:29;3913:5;3890:29;:::i;:::-;3938:5;-1:-1:-1;3994:2:187;3979:18;;3966:32;-1:-1:-1;;;;;4047:14:187;;;4044:34;;;4074:1;4071;4064:12;4044:34;4097:75;4164:7;4155:6;4144:9;4140:22;4097:75;:::i;:::-;4087:85;;4225:2;4214:9;4210:18;4197:32;4181:48;;4254:2;4244:8;4241:16;4238:36;;;4270:1;4267;4260:12;4238:36;4308:8;4297:9;4293:24;4283:34;;4355:7;4348:4;4344:2;4340:13;4336:27;4326:55;;4377:1;4374;4367:12;4326:55;4417:2;4404:16;4443:2;4435:6;4432:14;4429:34;;;4459:1;4456;4449:12;4429:34;4517:7;4512:2;4502:6;4494;4490:19;4486:2;4482:28;4478:37;4475:50;4472:70;;;4538:1;4535;4528:12;4608:665;4720:12;;-1:-1:-1;;;;;4716:21:187;;;4704:34;;4791:4;4780:16;;;4774:23;4770:32;;;4754:14;;;4747:56;4852:4;4841:16;;;4835:23;4819:14;;;4812:47;4908:4;4897:16;;;4891:23;4875:14;;;4868:47;4961:4;4950:16;;;4944:23;4999:19;;4983:14;;;4976:43;5056:23;;;5050:30;4684:3;5035:13;;5028:53;5118:23;;;5112:30;5106:3;5097:13;;5090:53;5180:23;;5174:30;5168:3;5159:13;;5152:53;5242:23;5236:30;5230:3;5221:13;;;5214:53;4608:665::o;5358:596::-;5417:41;5454:3;5446:5;5440:12;5417:41;:::i;:::-;5504:4;5493:16;;;5487:23;5548:19;;-1:-1:-1;;;;;5544:50:187;5535:6;5526:16;;5519:76;5636:23;;;5630:30;5662:4;5626:41;5620:3;5611:13;;5604:64;5723:4;5705:23;;5699:30;5748:12;5791:23;;;5785:3;5776:13;;5769:46;5874:4;5856:23;;5850:30;5846:39;5840:3;5831:13;;5824:62;5941:4;5923:23;5917:30;5911:3;5902:13;;;5895:53;5358:596::o;5959:461::-;6017:3;6055:5;6049:12;6082:6;6077:3;6070:19;6108:4;6137:2;6132:3;6128:12;6121:19;;6174:2;6167:5;6163:14;6195:1;6205:190;6219:6;6216:1;6213:13;6205:190;;;6268:43;6307:3;6298:6;6292:13;6268:43;:::i;:::-;6340:6;6331:16;;;;;6370:15;;;;6241:1;6234:9;6205:190;;;-1:-1:-1;6411:3:187;;5959:461;-1:-1:-1;;;;;5959:461:187:o;6425:472::-;6691:4;6720:3;6750:2;6739:9;6732:21;6770:61;6827:2;6816:9;6812:18;6804:6;6770:61;:::i;:::-;6762:69;;;6840:51;6887:2;6876:9;6872:18;6864:6;6840:51;:::i;6902:180::-;6961:6;7014:2;7002:9;6993:7;6989:23;6985:32;6982:52;;;7030:1;7027;7020:12;6982:52;-1:-1:-1;7053:23:187;;6902:180;-1:-1:-1;6902:180:187:o;7284:118::-;7370:5;7363:13;7356:21;7349:5;7346:32;7336:60;;7392:1;7389;7382:12;7407:382;7472:6;7480;7533:2;7521:9;7512:7;7508:23;7504:32;7501:52;;;7549:1;7546;7539:12;7501:52;7588:9;7575:23;7607:31;7632:5;7607:31;:::i;:::-;7657:5;-1:-1:-1;7714:2:187;7699:18;;7686:32;7727:30;7686:32;7727:30;:::i;:::-;7776:7;7766:17;;;7407:382;;;;;:::o;8234:391::-;8324:6;8377:2;8365:9;8356:7;8352:23;8348:32;8345:52;;;8393:1;8390;8383:12;8345:52;8433:9;8420:23;-1:-1:-1;;;;;8458:6:187;8455:30;8452:50;;;8498:1;8495;8488:12;8452:50;8521:22;;8577:3;8559:16;;;8555:26;8552:46;;;8594:1;8591;8584:12;8812:315;8880:6;8888;8941:2;8929:9;8920:7;8916:23;8912:32;8909:52;;;8957:1;8954;8947:12;8909:52;8993:9;8980:23;8970:33;;9053:2;9042:9;9038:18;9025:32;9066:31;9091:5;9066:31;:::i;9503:247::-;9562:6;9615:2;9603:9;9594:7;9590:23;9586:32;9583:52;;;9631:1;9628;9621:12;9583:52;9670:9;9657:23;9689:31;9714:5;9689:31;:::i;9755:503::-;9854:6;9862;9915:2;9903:9;9894:7;9890:23;9886:32;9883:52;;;9931:1;9928;9921:12;9883:52;9971:9;9958:23;-1:-1:-1;;;;;9996:6:187;9993:30;9990:50;;;10036:1;10033;10026:12;9990:50;10059:75;10126:7;10117:6;10106:9;10102:22;10059:75;:::i;:::-;10049:85;;;10184:2;10173:9;10169:18;10156:32;10197:31;10222:5;10197:31;:::i;10263:385::-;10518:6;10507:9;10500:25;10561:2;10556;10545:9;10541:18;10534:30;10481:4;10581:61;10638:2;10627:9;10623:18;10615:6;10581:61;:::i;:::-;10573:69;10263:385;-1:-1:-1;;;;10263:385:187:o;10887:127::-;10948:10;10943:3;10939:20;10936:1;10929:31;10979:4;10976:1;10969:15;11003:4;11000:1;10993:15;11019:253;11091:2;11085:9;11133:4;11121:17;;-1:-1:-1;;;;;11153:34:187;;11189:22;;;11150:62;11147:88;;;11215:18;;:::i;:::-;11251:2;11244:22;11019:253;:::o;11277:::-;11349:2;11343:9;11391:4;11379:17;;-1:-1:-1;;;;;11411:34:187;;11447:22;;;11408:62;11405:88;;;11473:18;;:::i;11535:257::-;11607:4;11601:11;;;11639:17;;-1:-1:-1;;;;;11671:34:187;;11707:22;;;11668:62;11665:88;;;11733:18;;:::i;11797:255::-;11869:2;11863:9;11911:6;11899:19;;-1:-1:-1;;;;;11933:34:187;;11969:22;;;11930:62;11927:88;;;11995:18;;:::i;12057:275::-;12128:2;12122:9;12193:2;12174:13;;-1:-1:-1;;12170:27:187;12158:40;;-1:-1:-1;;;;;12213:34:187;;12249:22;;;12210:62;12207:88;;;12275:18;;:::i;:::-;12311:2;12304:22;12057:275;;-1:-1:-1;12057:275:187:o;12337:187::-;12386:4;-1:-1:-1;;;;;12411:6:187;12408:30;12405:56;;;12441:18;;:::i;:::-;-1:-1:-1;12507:2:187;12486:15;-1:-1:-1;;12482:29:187;12513:4;12478:40;;12337:187::o;12529:649::-;12609:6;12662:2;12650:9;12641:7;12637:23;12633:32;12630:52;;;12678:1;12675;12668:12;12630:52;12711:9;12705:16;-1:-1:-1;;;;;12736:6:187;12733:30;12730:50;;;12776:1;12773;12766:12;12730:50;12799:22;;12852:4;12844:13;;12840:27;-1:-1:-1;12830:55:187;;12881:1;12878;12871:12;12830:55;12910:2;12904:9;12935:49;12951:32;12980:2;12951:32;:::i;:::-;12935:49;:::i;:::-;13007:2;13000:5;12993:17;13047:7;13042:2;13037;13033;13029:11;13025:20;13022:33;13019:53;;;13068:1;13065;13058:12;13019:53;13081:67;13145:2;13140;13133:5;13129:14;13124:2;13120;13116:11;13081:67;:::i;:::-;13167:5;12529:649;-1:-1:-1;;;;;12529:649:187:o;13183:442::-;-1:-1:-1;;;13440:3:187;13433:25;13415:3;13487:6;13481:13;13503:75;13571:6;13566:2;13561:3;13557:12;13550:4;13542:6;13538:17;13503:75;:::i;:::-;13598:16;;;;13616:2;13594:25;;13183:442;-1:-1:-1;;13183:442:187:o;13630:245::-;13697:6;13750:2;13738:9;13729:7;13725:23;13721:32;13718:52;;;13766:1;13763;13756:12;13718:52;13798:9;13792:16;13817:28;13839:5;13817:28;:::i;14012:354::-;14170:2;14155:18;;14203:1;14192:13;;14182:144;;14248:10;14243:3;14239:20;14236:1;14229:31;14283:4;14280:1;14273:15;14311:4;14308:1;14301:15;14182:144;14335:25;;;14012:354;:::o;14371:271::-;14461:6;14514:2;14502:9;14493:7;14489:23;14485:32;14482:52;;;14530:1;14527;14520:12;14482:52;14562:9;14556:16;14581:31;14606:5;14581:31;:::i;14647:127::-;14708:10;14703:3;14699:20;14696:1;14689:31;14739:4;14736:1;14729:15;14763:4;14760:1;14753:15;14779:135;-1:-1:-1;;;;;14857:5:187;14853:36;14846:5;14843:47;14833:75;;14904:1;14901;14894:12;14919:123;15004:12;14997:5;14993:24;14986:5;14983:35;14973:63;;15032:1;15029;15022:12;15047:736;15143:5;15130:19;15158:32;15182:7;15158:32;:::i;:::-;-1:-1:-1;;;;;15211:38:187;15199:51;;15298:4;15287:16;;15274:30;15313:31;15274:30;15313:31;:::i;:::-;15389:4;15376:18;15369:4;15360:14;;15353:42;15443:4;15432:16;;15419:30;15458:32;15419:30;15458:32;:::i;:::-;15509:12;15553:16;;;15546:4;15537:14;;15530:40;15618:4;15607:16;;15594:30;;15633:32;15594:30;15633:32;:::i;:::-;15697:16;15690:4;15681:14;;15674:40;15770:4;15759:16;;;15746:30;15730:14;;15723:54;15047:736::o;15788:920::-;15884:5;15871:19;15899:33;15924:7;15899:33;:::i;:::-;-1:-1:-1;;;;;15991:16:187;;;15979:29;;16056:4;16045:16;;16032:30;;16071:33;16032:30;16071:33;:::i;:::-;16149:2;16140:7;16136:16;16129:4;16124:3;16120:14;16113:40;;;16209:4;16202:5;16198:16;16185:30;16178:4;16173:3;16169:14;16162:54;16272:4;16265:5;16261:16;16248:30;16241:4;16236:3;16232:14;16225:54;16335:4;16328:5;16324:16;16311:30;16304:4;16299:3;16295:14;16288:54;16397:3;16390:5;16386:15;16373:29;16367:3;16362;16358:13;16351:52;16458:3;16451:5;16447:15;16434:29;16428:3;16423;16419:13;16412:52;16519:3;16512:5;16508:15;16495:29;16489:3;16484;16480:13;16473:52;16544:3;16601:2;16594:5;16590:14;16577:28;16572:2;16567:3;16563:12;16556:50;;16625:6;16640:62;16698:2;16693:3;16689:12;16684:2;16677:5;16673:14;16640:62;:::i;16713:254::-;16897:3;16882:19;;16910:51;16886:9;16943:6;16910:51;:::i;16972:245::-;17051:6;17059;17112:2;17100:9;17091:7;17087:23;17083:32;17080:52;;;17128:1;17125;17118:12;17080:52;-1:-1:-1;;17151:16:187;;17207:2;17192:18;;;17186:25;17151:16;;17186:25;;-1:-1:-1;16972:245:187:o;17222:184::-;17292:6;17345:2;17333:9;17324:7;17320:23;17316:32;17313:52;;;17361:1;17358;17351:12;17313:52;-1:-1:-1;17384:16:187;;17222:184;-1:-1:-1;17222:184:187:o;18289:499::-;18351:5;18399:4;18387:9;18382:3;18378:19;18374:30;18371:50;;;18417:1;18414;18407:12;18371:50;18439:22;;:::i;:::-;18430:31;;18498:9;18485:23;18517:31;18540:7;18517:31;:::i;:::-;18557:22;;18639:2;18624:18;;;18611:32;18595:14;;;18588:56;18696:2;18681:18;;18668:32;18709:33;18668:32;18709:33;:::i;:::-;18769:2;18758:14;;18751:31;18762:5;18289:499;-1:-1:-1;;18289:499:187:o;18793:188::-;18858:4;-1:-1:-1;;;;;18883:6:187;18880:30;18877:56;;;18913:18;;:::i;:::-;-1:-1:-1;18958:1:187;18954:14;18970:4;18950:25;;18793:188::o;18986:764::-;19038:5;19086:4;19074:9;19069:3;19065:19;19061:30;19058:50;;;19104:1;19101;19094:12;19058:50;19126:22;;:::i;:::-;19117:31;;19185:9;19172:23;19204:32;19228:7;19204:32;:::i;:::-;19245:22;;19319:2;19304:18;;19291:32;19332:31;19291:32;19332:31;:::i;:::-;19390:2;19379:14;;19372:31;19455:2;19440:18;;19427:32;19468;19427;19468;:::i;:::-;19527:2;19516:14;;19509:31;19592:2;19577:18;;19564:32;19605;19564;19605;:::i;:::-;19669:7;19664:2;19657:5;19653:14;19646:31;;19738:3;19727:9;19723:19;19710:33;19704:3;19697:5;19693:15;19686:58;18986:764;;;;:::o;19755:1295::-;19807:5;19846:9;19841:3;19837:19;19876:6;19872:2;19868:15;19865:35;;;19896:1;19893;19886:12;19865:35;19918:22;;:::i;:::-;19909:31;;19959:6;19985:2;19981;19977:11;19974:31;;;20001:1;19998;19991:12;19974:31;20029:22;;:::i;:::-;20088:9;20075:23;20107:33;20132:7;20107:33;:::i;:::-;20149:24;;20225:2;20210:18;;20197:32;20238:33;20197:32;20238:33;:::i;:::-;20300:2;20287:16;;20280:33;20377:4;20362:20;;;20349:34;20329:18;;;20322:62;20446:2;20431:18;;;20418:32;20400:16;;;20393:58;20486:4;-1:-1:-1;;20467:17:187;;20463:28;20460:48;;;20504:1;20501;20494:12;20460:48;20532:22;;:::i;:::-;20517:37;;20607:3;20596:9;20592:19;20579:33;20570:7;20563:50;20675:4;20664:9;20660:20;20647:34;20642:2;20633:7;20629:16;20622:60;20746:3;20735:9;20731:19;20718:33;20711:4;20702:7;20698:18;20691:61;20814:3;20803:9;20799:19;20786:33;20781:2;20772:7;20768:16;20761:59;20883:3;20872:9;20868:19;20855:33;20849:3;20840:7;20836:17;20829:60;20924:7;20918:3;20909:7;20905:17;20898:34;20955:7;20948:5;20941:22;;20995:48;21039:3;21034:2;21023:9;21019:18;20995:48;:::i;:::-;20990:2;20983:5;20979:14;20972:72;;;19755:1295;;;;:::o;21055:714::-;21114:5;21167:3;21160:4;21152:6;21148:17;21144:27;21134:55;;21185:1;21182;21175:12;21134:55;21221:6;21208:20;21247:4;21271:65;21287:48;21332:2;21287:48;:::i;21271:65::-;21370:15;;;21432:6;21477:11;;;21465:24;;21461:33;;;21401:12;;;;21358:3;21506:15;;;21503:35;;;21534:1;21531;21524:12;21503:35;21570:2;21562:6;21558:15;21582:158;21598:6;21593:3;21590:15;21582:158;;;21664:33;21693:3;21688;21664:33;:::i;:::-;21652:46;;21718:12;;;;21615;;21582:158;;;-1:-1:-1;21758:5:187;;21055:714;-1:-1:-1;;;;;;;21055:714:187:o;21774:463::-;21816:5;21869:3;21862:4;21854:6;21850:17;21846:27;21836:55;;21887:1;21884;21877:12;21836:55;21923:6;21910:20;21954:49;21970:32;21999:2;21970:32;:::i;21954:49::-;22028:2;22019:7;22012:19;22074:3;22067:4;22062:2;22054:6;22050:15;22046:26;22043:35;22040:55;;;22091:1;22088;22081:12;22040:55;22156:2;22149:4;22141:6;22137:17;22130:4;22121:7;22117:18;22104:55;22204:1;22179:16;;;22197:4;22175:27;22168:38;;;;22183:7;21774:463;-1:-1:-1;;;21774:463:187:o;22242:968::-;22299:5;22347:4;22335:9;22330:3;22326:19;22322:30;22319:50;;;22365:1;22362;22355:12;22319:50;22387:22;;:::i;:::-;22378:31;;22445:9;22432:23;22425:5;22418:38;22475:2;22528;22517:9;22513:18;22500:32;-1:-1:-1;;;;;22547:6:187;22544:30;22541:50;;;22587:1;22584;22577:12;22541:50;22610:22;;22663:4;22655:13;;22651:23;-1:-1:-1;22641:51:187;;22688:1;22685;22678:12;22641:51;22724:2;22711:16;22747:65;22763:48;22808:2;22763:48;:::i;22747:65::-;22846:15;;;22928:1;22924:10;;;;22916:19;;22912:28;;;22877:12;;;;22952:15;;;22949:35;;;22980:1;22977;22970:12;22949:35;23004:11;;;;23024:142;23040:6;23035:3;23032:15;23024:142;;;23106:17;;23094:30;;23057:12;;;;23144;;;;23024:142;;;23198:5;23193:2;23186:5;23182:14;23175:29;;;;;;22242:968;;;;:::o;23215:1686::-;23325:9;23384:4;23376:5;23360:14;23356:26;23352:37;23349:57;;;23402:1;23399;23392:12;23349:57;23430:22;;:::i;:::-;23489:5;23476:19;23504:33;23529:7;23504:33;:::i;:::-;23546:24;;23628:2;23617:14;;;23604:28;23586:16;;;23579:54;23680:2;23669:14;;23656:28;-1:-1:-1;;;;;23733:14:187;;;23730:34;;;23760:1;23757;23750:12;23730:34;23794:6;23787:5;23783:18;23773:28;;23842:6;23837:2;23821:14;23817:23;23813:36;23810:56;;;23862:1;23859;23852:12;23810:56;23890:22;;:::i;:::-;23937:53;23975:14;23971:2;23937:53;:::i;:::-;23928:7;23921:70;24037:4;24033:2;24029:13;24016:27;24068:2;24058:8;24055:16;24052:36;;;24084:1;24081;24074:12;24052:36;24122:68;24175:14;24164:8;24160:2;24156:17;24122:68;:::i;:::-;24117:2;24108:7;24104:16;24097:94;;24237:3;24233:2;24229:12;24216:26;24267:2;24257:8;24254:16;24251:36;;;24283:1;24280;24273:12;24251:36;24321:51;24357:14;24346:8;24342:2;24338:17;24321:51;:::i;:::-;24316:2;24307:7;24303:16;24296:77;;24419:3;24415:2;24411:12;24398:26;24449:2;24439:8;24436:16;24433:36;;;24465:1;24462;24455:12;24433:36;24505:63;24553:14;24542:8;24538:2;24534:17;24505:63;:::i;:::-;24498:4;24489:7;24485:18;24478:91;;24625:3;24621:2;24617:12;24604:26;24598:3;24589:7;24585:17;24578:53;24666:30;24691:3;24687:2;24683:12;24666:30;:::i;:::-;24660:3;24647:17;;24640:57;24753:6;24745:15;;24732:29;24726:3;24713:17;;24706:56;24818:3;24810:12;;;24797:26;24791:3;24778:17;;24771:53;-1:-1:-1;24853:2:187;24840:16;;24833:33;24844:7;23215:1686;-1:-1:-1;;23215:1686:187:o;24906:333::-;25007:4;25065:11;25052:25;25159:3;25155:8;25144;25128:14;25124:29;25120:44;25100:18;25096:69;25086:97;;25179:1;25176;25169:12;25086:97;25200:33;;;;;24906:333;-1:-1:-1;;24906:333:187:o;25244:539::-;25328:5;25335:6;25395:3;25382:17;25481:2;25477:7;25466:8;25450:14;25446:29;25442:43;25422:18;25418:68;25408:96;;25500:1;25497;25490:12;25408:96;25528:33;;25632:4;25619:18;;;-1:-1:-1;25580:21:187;;-1:-1:-1;;;;;;25649:30:187;;25646:50;;;25692:1;25689;25682:12;25646:50;25751:6;25743;25739:19;25723:14;25719:40;25712:5;25708:52;25705:72;;;25773:1;25770;25763:12;25705:72;25244:539;;;;;:::o;25788:449::-;25902:6;25897:3;25890:19;25934:4;25929:3;25925:14;25918:21;;25872:3;25962:5;25985:1;25995:217;26009:6;26006:1;26003:13;25995:217;;;26058:45;26099:3;26091:6;26058:45;:::i;:::-;26126:6;26152:12;;;;26187:15;;;;;26031:1;26024:9;25995:217;;;-1:-1:-1;26228:3:187;;25788:449;-1:-1:-1;;;;25788:449:187:o;26242:500::-;26300:5;26307:6;26367:3;26354:17;26453:2;26449:7;26438:8;26422:14;26418:29;26414:43;26394:18;26390:68;26380:96;;26472:1;26469;26462:12;26380:96;26500:33;;26604:4;26591:18;;;-1:-1:-1;26552:21:187;;-1:-1:-1;;;;;;26621:30:187;;26618:50;;;26664:1;26661;26654:12;26618:50;26711:6;26695:14;26691:27;26684:5;26680:39;26677:59;;;26732:1;26729;26722:12;26747:266;26835:6;26830:3;26823:19;26887:6;26880:5;26873:4;26868:3;26864:14;26851:43;-1:-1:-1;26939:1:187;26914:16;;;26932:4;26910:27;;;26903:38;;;;26995:2;26974:15;;;-1:-1:-1;;26970:29:187;26961:39;;;26957:50;;26747:266::o;27018:295::-;27088:5;27147:3;27134:17;27233:2;27229:7;27218:8;27202:14;27198:29;27194:43;27174:18;27170:68;27160:96;;27252:1;27249;27242:12;27160:96;27274:33;;;;27018:295;-1:-1:-1;;27018:295:187:o;27318:804::-;27423:5;27410:19;27405:3;27398:32;27380:3;27489:4;27482:5;27478:16;27465:30;27574:2;27570:7;27562:5;27546:14;27542:26;27538:40;27518:18;27514:65;27504:93;;27593:1;27590;27583:12;27504:93;27621:30;;27732:4;27719:18;;;27674:21;-1:-1:-1;;;;;27749:30:187;;27746:50;;;27792:1;27789;27782:12;27746:50;27822:6;27819:1;27815:14;27874:2;27858:14;27854:23;27845:7;27841:37;27838:57;;;27891:1;27888;27881:12;27838:57;27927:4;27920;27911:14;;27904:28;;;27948:14;;27941:30;;;-1:-1:-1;;;;;27983:31:187;;27980:51;;;28027:1;28024;28017:12;27980:51;28076:2;28067:7;28062:2;28057:3;28053:12;28040:39;28099:12;;;;28113:2;28095:21;;27318:804;-1:-1:-1;;;;27318:804:187:o;28127:2094::-;28189:3;28235:5;28222:19;28250:33;28275:7;28250:33;:::i;:::-;-1:-1:-1;;;;;28342:16:187;;;28330:29;;28415:4;28404:16;;;28391:30;28375:14;;;28368:54;28481:4;28470:16;;28457:30;;28538:14;28534:26;;;-1:-1:-1;;28530:41:187;28506:66;;28496:94;;28586:1;28583;28576:12;28496:94;28676:4;28669;28660:14;;28653:28;28614:30;;;;28705:21;;28735:31;28705:21;28735:31;:::i;:::-;28811:4;28798:18;28791:4;28782:14;;28775:42;28874:4;28861:18;;28848:32;28842:3;28833:13;;28826:55;28931:4;28918:18;;28905:32;28946:33;28905:32;28946:33;:::i;:::-;29010:16;29004:3;28995:13;;28988:39;29070:85;29149:4;29136:18;;29140:7;29070:85;:::i;:::-;29174:6;29211:2;29205:3;29200;29196:13;29189:25;29235:94;29324:3;29319;29315:13;29301:12;29287;29235:94;:::i;:::-;29223:106;;29376:58;29429:3;29420:7;29416:17;29407:7;29376:58;:::i;:::-;29338:96;;29457:2;29453:7;29511:2;29505:3;29499:4;29495:14;29491:23;29485:3;29480;29476:13;29469:46;29538:63;29596:4;29580:14;29564;29538:63;:::i;:::-;29524:77;;29632:70;29697:3;29688:7;29684:17;29675:7;29632:70;:::i;:::-;29610:92;;29721:3;29711:13;;29776:2;29770:3;29762:6;29758:16;29754:25;29749:2;29744:3;29740:12;29733:47;;29803:61;29857:6;29841:14;29803:61;:::i;:::-;29789:75;;29883:3;29873:13;;29942:3;29933:7;29929:17;29916:31;29911:2;29906:3;29902:12;29895:53;29979:35;30009:3;30000:7;29996:17;29979:35;:::i;:::-;5345:4;5334:16;;30056:12;;;5322:29;-1:-1:-1;30113:16:187;;30100:30;30094:3;30085:13;;30078:53;-1:-1:-1;30175:16:187;;;30162:30;30156:3;30147:13;;;30140:53;;;;-1:-1:-1;30209:6:187;;28127:2094;-1:-1:-1;28127:2094:187:o;30226:351::-;30443:2;30432:9;30425:21;30406:4;30463:65;30524:2;30513:9;30509:18;30501:6;30463:65;:::i;:::-;30455:73;;30564:6;30559:2;30548:9;30544:18;30537:34;30226:351;;;;;:::o;30582:1003::-;30644:5;30683:9;30678:3;30674:19;30713:6;30709:2;30705:15;30702:35;;;30733:1;30730;30723:12;30702:35;30755:22;;:::i;:::-;30746:31;;30807:9;30801:16;30826:33;30851:7;30826:33;:::i;:::-;30868:22;;30935:2;30920:18;;30914:25;30948:33;30914:25;30948:33;:::i;:::-;31008:2;30997:14;;30990:31;31074:2;31059:18;;;31053:25;31037:14;;;31030:49;31132:2;31117:18;;;31111:25;31095:14;;;31088:49;31172:4;-1:-1:-1;;31153:17:187;;31149:28;31146:48;;;31190:1;31187;31180:12;31146:48;;31218:22;;:::i;:::-;31286:3;31275:9;31271:19;31265:26;31256:7;31249:43;31347:4;31336:9;31332:20;31326:27;31321:2;31312:7;31308:16;31301:53;31409:3;31398:9;31394:19;31388:26;31383:2;31374:7;31370:16;31363:52;31470:3;31459:9;31455:19;31449:26;31444:2;31435:7;31431:16;31424:52;31532:3;31521:9;31517:19;31511:26;31505:3;31496:7;31492:17;31485:53;31571:7;31565:3;31558:5;31554:15;31547:32;;30582:1003;;;;:::o;31590:245::-;31683:6;31736:3;31724:9;31715:7;31711:23;31707:33;31704:53;;;31753:1;31750;31743:12;31704:53;31776;31821:7;31810:9;31776:53;:::i;31840:225::-;31923:6;31976:3;31964:9;31955:7;31951:23;31947:33;31944:53;;;31993:1;31990;31983:12;31944:53;32016:43;32051:7;32040:9;32016:43;:::i;32324:640::-;32377:3;32416:4;32411:3;32407:14;32448:5;32442:12;32437:3;32430:25;32474:4;32524:2;32517:5;32513:14;32507:21;32558:4;32553:2;32548:3;32544:12;32537:26;32585:4;32618:12;32612:19;32653:6;32647:4;32640:20;32687:2;32682:3;32678:12;32669:21;;32731:2;32717:12;32713:21;32699:35;;32752:1;32743:10;;32762:175;32776:6;32773:1;32770:13;32762:175;;;32839:13;;32825:28;;32912:15;;;;32798:1;32791:9;;;;;32875:14;;;;32762:175;;;-1:-1:-1;32953:5:187;32324:640;-1:-1:-1;;;;;;32324:640:187:o;32969:556::-;33030:3;33058:6;33091:5;33085:12;33080:3;33073:25;33147:4;33140:5;33136:16;33130:23;33123:4;33118:3;33114:14;33107:47;33232:1;33228;33223:3;33219:11;33215:19;33207:4;33200:5;33196:16;33190:23;33186:49;33179:4;33174:3;33170:14;33163:73;33282:4;33275:5;33271:16;33265:23;33297:52;33343:4;33338:3;33334:14;33320:12;33297:52;:::i;:::-;;33397:4;33390:5;33386:16;33380:23;33437:2;33428:6;33423:3;33419:16;33412:28;33456:63;33515:2;33510:3;33506:12;33490:14;33456:63;:::i;33530:1931::-;33729:2;33718:9;33711:21;33692:4;33767:6;33761:13;33810:4;33805:2;33794:9;33790:18;33783:32;33894:1;33890;33885:3;33881:11;33877:19;33862:12;33856:19;33852:45;33846:3;33835:9;33831:19;33824:74;33959:2;33945:12;33941:21;33935:28;33929:3;33918:9;33914:19;33907:57;34019:4;34005:12;34001:23;33995:30;33973:52;;34062:4;34056:3;34045:9;34041:19;34034:33;34076:77;34148:3;34137:9;34133:19;34116:14;34110:21;32155:12;;32169:4;32151:23;32139:36;;32224:4;32213:16;;;32207:23;32191:14;;;32184:47;32284:4;32273:16;;;32267:23;-1:-1:-1;;;;;32263:49:187;32247:14;;32240:73;32070:249;34076:77;34210:2;34190:23;;34184:30;34233:6;34255:18;;;34248:30;34301:70;34366:3;34351:19;;34184:30;34301:70;:::i;:::-;34287:84;;34428:4;34412:14;34408:25;34402:32;34457:3;34453:8;34526:2;34514:9;34506:6;34502:22;34498:31;34492:3;34481:9;34477:19;34470:60;34553:41;34587:6;34571:14;34553:41;:::i;:::-;34539:55;;34651:4;34635:14;34631:25;34625:32;34603:54;;34722:2;34710:9;34702:6;34698:22;34694:31;34688:3;34677:9;34673:19;34666:60;;34749:52;34794:6;34778:14;34749:52;:::i;:::-;34735:66;;;34864:3;34848:14;34844:24;34838:31;34832:3;34821:9;34817:19;34810:60;34927:3;34911:14;34907:24;34901:31;34941:53;34989:3;34978:9;34974:19;34958:14;5345:4;5334:16;5322:29;;5278:75;34941:53;-1:-1:-1;35057:3:187;35037:24;;35031:31;35025:3;35010:19;;35003:60;35126:3;35106:24;;;35100:31;35094:3;35079:19;;35072:60;35181:2;35169:15;;35163:22;5345:4;5334:16;;35242:4;35227:20;;5322:29;35163:22;35297:4;35285:17;;35279:24;35345:22;;;-1:-1:-1;;35341:36:187;35334:4;35319:20;;35312:66;35279:24;-1:-1:-1;35395:60:187;35349:6;35279:24;35395:60;:::i;35466:1004::-;35529:5;35568:9;35563:3;35559:19;35598:6;35594:2;35590:15;35587:35;;;35618:1;35615;35608:12;35587:35;35640:22;;:::i;:::-;35631:31;;35685:49;35730:3;35719:9;35685:49;:::i;:::-;35671:64;;35770:4;-1:-1:-1;;35751:17:187;;35747:28;35744:48;;;35788:1;35785;35778:12;35744:48;;35816:22;;:::i;:::-;35883:3;35872:9;35868:19;35862:26;35897:32;35921:7;35897:32;:::i;:::-;35938:24;;36007:3;35992:19;;35986:26;36021:31;35986:26;36021:31;:::i;:::-;36081:2;36068:16;;36061:33;36139:3;36124:19;;36118:26;36153:32;36118:26;36153:32;:::i;:::-;36214:4;36201:18;;36194:35;36274:3;36259:19;;36253:26;36288:32;36253:26;36288:32;:::i;:::-;36354:7;36349:2;36340:7;36336:16;36329:33;;36418:3;36407:9;36403:19;36397:26;36391:3;36382:7;36378:17;36371:53;36456:7;36451:2;36444:5;36440:14;36433:31;;35466:1004;;;;:::o;36475:729::-;36545:5;36598:3;36591:4;36583:6;36579:17;36575:27;36565:55;;36616:1;36613;36606:12;36565:55;36645:6;36639:13;36671:4;36695:65;36711:48;36756:2;36711:48;:::i;36695:65::-;36794:15;;;36856:6;36901:11;;;36889:24;;36885:33;;;36825:12;;;;36782:3;36930:15;;;36927:35;;;36958:1;36955;36948:12;36927:35;36994:2;36986:6;36982:15;37006:169;37022:6;37017:3;37014:15;37006:169;;;37088:44;37128:3;37123;37088:44;:::i;:::-;37076:57;;37153:12;;;;37039;;37006:169;;37209:516;37361:6;37369;37422:3;37410:9;37401:7;37397:23;37393:33;37390:53;;;37439:1;37436;37429:12;37390:53;37472:9;37466:16;-1:-1:-1;;;;;37497:6:187;37494:30;37491:50;;;37537:1;37534;37527:12;37491:50;37560:77;37629:7;37620:6;37609:9;37605:22;37560:77;:::i;:::-;37550:87;;;37656:63;37711:7;37706:2;37695:9;37691:18;37656:63;:::i;:::-;37646:73;;37209:516;;;;;:::o;37730:241::-;37786:6;37839:2;37827:9;37818:7;37814:23;37810:32;37807:52;;;37855:1;37852;37845:12;37807:52;37894:9;37881:23;37913:28;37935:5;37913:28;:::i;37976:545::-;38069:4;38075:6;38135:11;38122:25;38229:2;38225:7;38214:8;38198:14;38194:29;38190:43;38170:18;38166:68;38156:96;;38248:1;38245;38238:12;38156:96;38275:33;;38327:20;;;-1:-1:-1;;;;;;38359:30:187;;38356:50;;;38402:1;38399;38392:12;38356:50;38435:4;38423:17;;-1:-1:-1;38486:1:187;38482:14;;;38466;38462:35;38452:46;;38449:66;;;38511:1;38508;38501:12;38526:127;38587:10;38582:3;38578:20;38575:1;38568:31;38618:4;38615:1;38608:15;38642:4;38639:1;38632:15;38658:135;38697:3;38718:17;;;38715:43;;38738:18;;:::i;:::-;-1:-1:-1;38785:1:187;38774:13;;38658:135::o;38798:201::-;38836:3;38864:10;38909:2;38902:5;38898:14;38936:2;38927:7;38924:15;38921:41;;38942:18;;:::i;:::-;38991:1;38978:15;;38798:201;-1:-1:-1;;;38798:201:187:o;39004:683::-;-1:-1:-1;;;39390:3:187;39383:20;39457:26;39453:31;39444:6;39440:2;39436:15;39432:53;39428:1;39423:3;39419:11;39412:74;-1:-1:-1;;;39511:2:187;39506:3;39502:12;39495:25;39365:3;39549:6;39543:13;39565:75;39633:6;39628:2;39623:3;39619:12;39612:4;39604:6;39600:17;39565:75;:::i;:::-;39660:16;;;;39678:2;39656:25;;39004:683;-1:-1:-1;;;39004:683:187:o;39692:128::-;39759:9;;;39780:11;;;39777:37;;;39794:18;;:::i;41622:328::-;41719:4;41777:11;41764:25;41871:2;41867:7;41856:8;41840:14;41836:29;41832:43;41812:18;41808:68;41798:96;;41890:1;41887;41880:12;41955:243;42012:6;42065:2;42053:9;42044:7;42040:23;42036:32;42033:52;;;42081:1;42078;42071:12;42033:52;42120:9;42107:23;42139:29;42162:5;42139:29;:::i;43298:377::-;43515:2;43504:9;43497:21;43478:4;43535:65;43596:2;43585:9;43581:18;43573:6;43535:65;:::i;:::-;43527:73;;43665:1;43661;43656:3;43652:11;43648:19;43640:6;43636:32;43631:2;43620:9;43616:18;43609:60;43298:377;;;;;:::o;43680:514::-;43817:6;43825;43833;43886:2;43874:9;43865:7;43861:23;43857:32;43854:52;;;43902:1;43899;43892:12;43854:52;43931:9;43925:16;43915:26;;43985:2;43974:9;43970:18;43964:25;-1:-1:-1;;;;;44004:6:187;44001:30;43998:50;;;44044:1;44041;44034:12;43998:50;44067:77;44136:7;44127:6;44116:9;44112:22;44067:77;:::i;:::-;44057:87;;;44184:2;44173:9;44169:18;44163:25;44153:35;;43680:514;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "COLLATERAL_TOKEN()": "f5f1f1a7",
    "EPOCH_LENGTH()": "ac4746ab",
    "IMPL_TYPE()": "c237c703",
    "ROUTER()": "32fe7b26",
    "START()": "ba9a061a",
    "STRATEGY_TYPEHASH()": "51ab5c49",
    "VAULT_FEE()": "cb58189d",
    "asset()": "38d52e0f",
    "buyoutLien(uint256,uint8,(address,uint256,((uint8,uint256,address),((address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint88,uint8,uint40,uint40,uint256))[],bytes,(bytes32,bytes32[]),uint256,uint8,bytes32,bytes32)),((address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint88,uint8,uint40,uint40,uint256))[])": "2d7342c0",
    "commitToLien((address,uint256,((uint8,uint256,address),((address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint88,uint8,uint40,uint40,uint256))[],bytes,(bytes32,bytes32[]),uint256,uint8,bytes32,bytes32)),address)": "d4208b73",
    "deposit(uint256,address)": "6e553f65",
    "disableAllowList()": "834029ba",
    "domainSeparator()": "f698da25",
    "enableAllowList()": "dc2fbaee",
    "encodeStrategyData((uint8,uint256,address),bytes32)": "2917e097",
    "getShutdown()": "c0e9b053",
    "getStrategistNonce()": "30040e77",
    "incrementNonce()": "627cdcb9",
    "init((address,bool,address[],uint256))": "474a1e54",
    "modifyAllowList(address,bool)": "3177e0fe",
    "modifyDepositCap(uint256)": "3c96ce12",
    "name()": "06fdde03",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "owner()": "8da5cb5b",
    "recipient()": "66d003ac",
    "setDelegate(address)": "ca5eb5e1",
    "shutdown()": "fc0e74d1",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "withdraw(uint256)": "2e1a7d4d"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"enum IVaultImplementation.InvalidRequestReason\",\"name\":\"reason\",\"type\":\"uint8\"}],\"name\":\"InvalidRequest\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"}],\"name\":\"IncrementNonce\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"}],\"name\":\"NonceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"VaultShutdown\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COLLATERAL_TOKEN\",\"outputs\":[{\"internalType\":\"contract ICollateralToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EPOCH_LENGTH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IMPL_TYPE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROUTER\",\"outputs\":[{\"internalType\":\"contract IAstariaRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"START\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STRATEGY_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VAULT_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"position\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"internalType\":\"struct IAstariaRouter.StrategyDetails\",\"name\":\"strategy\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"strategyRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPotentialDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationInitialAsk\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Details\",\"name\":\"details\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Lien\",\"name\":\"lien\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint88\",\"name\":\"amount\",\"type\":\"uint88\"},{\"internalType\":\"uint8\",\"name\":\"position\",\"type\":\"uint8\"},{\"internalType\":\"uint40\",\"name\":\"last\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"},{\"internalType\":\"uint256\",\"name\":\"lienId\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Point\",\"name\":\"point\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Stack[]\",\"name\":\"stack\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"nlrDetails\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IAstariaRouter.MerkleData\",\"name\":\"merkle\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IAstariaRouter.NewLienRequest\",\"name\":\"lienRequest\",\"type\":\"tuple\"}],\"internalType\":\"struct IAstariaRouter.Commitment\",\"name\":\"incomingTerms\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"strategyRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPotentialDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationInitialAsk\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Details\",\"name\":\"details\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Lien\",\"name\":\"lien\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint88\",\"name\":\"amount\",\"type\":\"uint88\"},{\"internalType\":\"uint8\",\"name\":\"position\",\"type\":\"uint8\"},{\"internalType\":\"uint40\",\"name\":\"last\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"},{\"internalType\":\"uint256\",\"name\":\"lienId\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Point\",\"name\":\"point\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Stack[]\",\"name\":\"stack\",\"type\":\"tuple[]\"}],\"name\":\"buyoutLien\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"strategyRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPotentialDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationInitialAsk\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Details\",\"name\":\"details\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Lien\",\"name\":\"lien\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint88\",\"name\":\"amount\",\"type\":\"uint88\"},{\"internalType\":\"uint8\",\"name\":\"position\",\"type\":\"uint8\"},{\"internalType\":\"uint40\",\"name\":\"last\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"},{\"internalType\":\"uint256\",\"name\":\"lienId\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Point\",\"name\":\"point\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Stack[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"strategyRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPotentialDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationInitialAsk\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Details\",\"name\":\"details\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Lien\",\"name\":\"lien\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint88\",\"name\":\"amount\",\"type\":\"uint88\"},{\"internalType\":\"uint8\",\"name\":\"position\",\"type\":\"uint8\"},{\"internalType\":\"uint40\",\"name\":\"last\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"},{\"internalType\":\"uint256\",\"name\":\"lienId\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Point\",\"name\":\"point\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Stack\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"internalType\":\"struct IAstariaRouter.StrategyDetails\",\"name\":\"strategy\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"strategyRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPotentialDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationInitialAsk\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Details\",\"name\":\"details\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Lien\",\"name\":\"lien\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint88\",\"name\":\"amount\",\"type\":\"uint88\"},{\"internalType\":\"uint8\",\"name\":\"position\",\"type\":\"uint8\"},{\"internalType\":\"uint40\",\"name\":\"last\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"},{\"internalType\":\"uint256\",\"name\":\"lienId\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Point\",\"name\":\"point\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Stack[]\",\"name\":\"stack\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"nlrDetails\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IAstariaRouter.MerkleData\",\"name\":\"merkle\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IAstariaRouter.NewLienRequest\",\"name\":\"lienRequest\",\"type\":\"tuple\"}],\"internalType\":\"struct IAstariaRouter.Commitment\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"commitToLien\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lienId\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"strategyRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPotentialDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationInitialAsk\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Details\",\"name\":\"details\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Lien\",\"name\":\"lien\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint88\",\"name\":\"amount\",\"type\":\"uint88\"},{\"internalType\":\"uint8\",\"name\":\"position\",\"type\":\"uint8\"},{\"internalType\":\"uint40\",\"name\":\"last\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"},{\"internalType\":\"uint256\",\"name\":\"lienId\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Point\",\"name\":\"point\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Stack[]\",\"name\":\"stack\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableAllowList\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableAllowList\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"internalType\":\"struct IAstariaRouter.StrategyDetails\",\"name\":\"strategy\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"encodeStrategyData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getShutdown\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategistNonce\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowListEnabled\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"allowList\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"depositCap\",\"type\":\"uint256\"}],\"internalType\":\"struct IVaultImplementation.InitParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"modifyAllowList\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newCap\",\"type\":\"uint256\"}],\"name\":\"modifyDepositCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data_\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate_\",\"type\":\"address\"}],\"name\":\"setDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shutdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"buyoutLien(uint256,uint8,(address,uint256,((uint8,uint256,address),((address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint88,uint8,uint40,uint40,uint256))[],bytes,(bytes32,bytes32[]),uint256,uint8,bytes32,bytes32)),((address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint88,uint8,uint40,uint40,uint256))[])\":{\"params\":{\"collateralId\":\"The ID of the underlying CollateralToken.\",\"incomingTerms\":\"The loan terms of the new lien.\",\"position\":\"The position of the specified lien.\"}},\"commitToLien((address,uint256,((uint8,uint256,address),((address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint88,uint8,uint40,uint40,uint256))[],bytes,(bytes32,bytes32[]),uint256,uint8,bytes32,bytes32)),address)\":{\"params\":{\"params\":\"Commitment data for the incoming lien request\",\"receiver\":\"The borrower receiving the loan.\"},\"returns\":{\"lienId\":\"The id of the newly minted lien token.\"}},\"modifyDepositCap(uint256)\":{\"params\":{\"newCap\":\"The deposit cap.\"}},\"recipient()\":{\"returns\":{\"_0\":\"The address of the recipient.\"}}},\"title\":\"Vault\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buyoutLien(uint256,uint8,(address,uint256,((uint8,uint256,address),((address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint88,uint8,uint40,uint40,uint256))[],bytes,(bytes32,bytes32[]),uint256,uint8,bytes32,bytes32)),((address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint88,uint8,uint40,uint40,uint256))[])\":{\"notice\":\"Buy optimized-out a lien to replace it with new terms.\"},\"commitToLien((address,uint256,((uint8,uint256,address),((address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint88,uint8,uint40,uint40,uint256))[],bytes,(bytes32,bytes32[]),uint256,uint8,bytes32,bytes32)),address)\":{\"notice\":\"Pipeline for lifecycle of new loan origination. Origination consists of a few phases: pre-commitment validation, lien token issuance, strategist reward, and after commitment actions Starts by depositing collateral and take optimized-out a lien against it. Next, verifies the merkle proof for a loan commitment. Vault owners are then rewarded fees for successful loan origination.\"},\"disableAllowList()\":{\"notice\":\"disable the allowList for the vault\"},\"enableAllowList()\":{\"notice\":\"enable the allowList for the vault\"},\"modifyDepositCap(uint256)\":{\"notice\":\"modify the deposit cap for the vault\"},\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"receive hook for ERC721 tokens, nothing special done\"},\"recipient()\":{\"notice\":\"Retrieves the recipient of loan repayments. For PublicVaults (VAULT_TYPE 2), this is always the vault address. For PrivateVaults, retrieves the owner() of the vault.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Vault.sol\":\"Vault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@rari-capital/solmate/=lib/seaport/./lib/solmate/\",\":auction/=lib/gpl/lib/auction-house/src/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":contracts/=lib/seaport/contracts/\",\":core/=src/\",\":ds-test/=lib/ds-test/src/\",\":eip4626/=lib/foundry_eip-4626/src/\",\":forge-std/=lib/forge-std/src/\",\":foundry_eip-4626/=lib/foundry_eip-4626/src/\",\":gpl/=lib/gpl/src/\",\":murky/=lib/seaport/./lib/murky/src/\",\":openzeppelin-contracts/=lib/seaport/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/gpl/lib/openzeppelin-contracts/contracts/\",\":seaport/=lib/seaport/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/clones-with-immutable-args/src/Clone.sol\":{\"keccak256\":\"0x958f183649832a994119e7484fea15a6b7b91c7e7b1ae4f3736104cd89ae7545\",\"license\":\"BSD\",\"urls\":[\"bzz-raw://2b4bbb61023cf315287406fee6086d2c6c5b85d6b1a141a8ee10295b663712bb\",\"dweb:/ipfs/QmaJP5pKF2WoBWsMCrAZssHhDZXvpufaWmg8oYfVgWMAHq\"]},\"lib/gpl/src/ERC721.sol\":{\"keccak256\":\"0x2b62e15196c20edd4a0c97c39139ea70674f8659f056d50bc60748b1a646029d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5bcfe08f6c97a611ca36c2a1009466db4c1021bef9297dffd7bca1b4c1fe56eb\",\"dweb:/ipfs/QmX6Ebmf6yVk7YtbTs1461zUG25Dp8D8qo4D8qoQunWmVT\"]},\"lib/gpl/src/interfaces/IERC4626RouterBase.sol\":{\"keccak256\":\"0xf73159f090c84e03a0a68c5cc78a0a65d71c4a27bcd5881b37a0036bb75355df\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2cea2a0802b9427bd14979aec2f869263480c138c0021c962c24eb8e650b63f4\",\"dweb:/ipfs/QmS3DbnkHmttGkcNKPvxrodHPYayUnK9Eug6yHU754gmWH\"]},\"lib/gpl/src/utils/SafeCastLib.sol\":{\"keccak256\":\"0xc2634e793ee22b9c9c2736dfe9b735b0c13cb6852629969d61d604e09b6d3dde\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://4896559c7c10652c6cd8977b33a8876f00ee3e34d0e137fd2676220659088e7b\",\"dweb:/ipfs/QmcyK4JEj2mSgwikitnntSYYC84sWmpP1FFFxnMLkbgkMr\"]},\"lib/seaport/contracts/interfaces/ConduitControllerInterface.sol\":{\"keccak256\":\"0xb124e40645efdf5d92b48fd54eaeb0ba1d05fde62bf51e7684c1bc3bf5343388\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://757b4b1edb39b78b94debeb877e68036c1181a5d20d0f299c497cecc903f147d\",\"dweb:/ipfs/QmeXsKmxsMXCxGTtcRAnyuRhtkQF4V4cfXukRYSpFwFoaF\"]},\"lib/seaport/contracts/interfaces/ConsiderationInterface.sol\":{\"keccak256\":\"0x1c535d369a2eb5eb3a62783c770870274a07fbdc7c20d6f7dc75decc75930688\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b85c960a378c3f425a1653dd8d978f2915203dfd16ec9932e4dd7b4963c17240\",\"dweb:/ipfs/QmYADawT4zzRFkkEteLTHpXdp9nrVW7ag7CvKmvQS5kYHB\"]},\"lib/seaport/contracts/lib/ConsiderationEnums.sol\":{\"keccak256\":\"0xe78faea2c9d9322ca557af34e8d576fe21dab9c995f0657d34ba6c4e94fe9c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ebef28980d88b7707013dd98658b22d4494755f59d0b93463dba1c377a62bbb\",\"dweb:/ipfs/QmRdfKbcuCYVB3rpTbS6peRY4XnhBxQRewbxpttA4Jv9ie\"]},\"lib/seaport/contracts/lib/ConsiderationStructs.sol\":{\"keccak256\":\"0x1cf7b9e7d034197a5af36536ff8b8fea6041e8c66c1928e6d6d5e411c465b234\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://369e5901a714935a54f68c1abd1f96e901d95b51a05897cfcf2eb9e28ef57896\",\"dweb:/ipfs/QmNM5XGK419cC2xn23qgB68gbR7qqbif44QBFwKax2SBpM\"]},\"lib/solmate/src/auth/Auth.sol\":{\"keccak256\":\"0x6e05238d59cd40172c04c1974eb8f1f6cef4fdc4b6553ef7844a7302b885f76c\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a9743c21ca0470d9082e4cf00aea53786868c977d40775e6954463658ebb50ac\",\"dweb:/ipfs/QmPFdyrLHUX1zSipTC2tcJ58EzxxPp2TTvCZx9KCgqZn2W\"]},\"lib/solmate/src/mixins/ERC4626.sol\":{\"keccak256\":\"0xa404f6f45bd53f24a90cc5ffe95e16b52e3f2dfd88f0d7a1edcb35f815919a7b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9f01e32d713e05cc58c1563e9938a1c5e096b1da9f52c7ea8424f2317b94adc1\",\"dweb:/ipfs/QmVt5SsbA3kezM5pyovupN7iZLy6QVqY5qQRZKLFqxKJUs\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/tokens/ERC721.sol\":{\"keccak256\":\"0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403\",\"dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK\"]},\"lib/solmate/src/tokens/WETH.sol\":{\"keccak256\":\"0x343cf5f6b643864c5728fa9bf057c5708052402b22c5662decce94f5febff514\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://dc3722cf992cc13ff0728660432092d8ae6851f500b24c0aa474c45f2e8c3f2d\",\"dweb:/ipfs/QmVq7veVaBKKdm4AKQiuCXMPGHPuCcPksm7LNuA2ihpN9U\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x5419f4dacaaf6e608653d71173558a14bf57e04d31f2abd54f974f7f4ea56b2d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://fea3de3bd66a3288487b0a1c81c04abb6e0936fdbbde9559be0fead95387c1c5\",\"dweb:/ipfs/QmVNj6szG6r8Ze2MQ3sAJGJaETwb4GkTYknohfSSP4Pp1S\"]},\"lib/solmate/src/utils/SafeCastLib.sol\":{\"keccak256\":\"0xb784a14411858036491124e677aecde6d500e695b7a70c74aa8f1001bda2ccab\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7610da561fe84b893cb46410acdf9e56c204029a21cb717c11cde33ed4354427\",\"dweb:/ipfs/QmQ7LyNz9V48ox4BgncCpvqq4LcDFwqz9q3CTrsrLmdPrk\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41\",\"dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L\"]},\"src/AstariaVaultBase.sol\":{\"keccak256\":\"0x549173d13802bb76aeba77185ef3428b41c5caefac5b3858403e0206cb2fd160\",\"urls\":[\"bzz-raw://bd3b26329716e2b33423aada5efde071c151cb2d497976dd914bc5b8de6f9b95\",\"dweb:/ipfs/QmWDtbuPhGSs3MCKF4rHAePKBptHs9eRx71LzoU3fCrfCz\"]},\"src/ClearingHouse.sol\":{\"keccak256\":\"0xcb1e09c044675455a1e00743da9b02f3ac1b2cf43d24d5f4b0bc0d5bc2d0f3a4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4297bf847414613728e9da4b0b0d670a244e451e4a1d0a14b10dfc20086cc2c9\",\"dweb:/ipfs/QmVyGbp6Co4uirLFdKXYaXM7AkFjP4hCDF9xiUvHqWMcSz\"]},\"src/LienToken.sol\":{\"keccak256\":\"0x28b8d93f2315e5580a644fae8d3d4a19cd0564482e2c024ff2035ab97160d118\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2574f24821f3723d5a15c302f2ffdcd61ea4ccf1393be153ad8492393bfb01e1\",\"dweb:/ipfs/QmRV4UazQvPp5YGJDvnmB9G2qxxesbggxrNaMzKnarcAme\"]},\"src/Vault.sol\":{\"keccak256\":\"0xb9554f85f456d163c2d6924e116c45705078a309e34d91fd0926a3a6968a9f35\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://781a15d29bfb434e08d01bb40792e56f92cc3bc1d9aed1a5f51fd8a34be5c84b\",\"dweb:/ipfs/QmXzdaGmkgfiPacHcqTUyGzF1As8m4d1hZGe1hGuR9Zdut\"]},\"src/VaultImplementation.sol\":{\"keccak256\":\"0xad9f071e7429f349ff7c49b1d2acd3700191033c5cb8178ab34f511650bcec32\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3b2331da9b41abad70b6eb24aee87c6a210521de6267bb9e3941711877d89b9a\",\"dweb:/ipfs/QmPSVeP33KghtJLDngfj8TAHeo7BT4nFH9YDzaPGpHrbHW\"]},\"src/interfaces/IAstariaRouter.sol\":{\"keccak256\":\"0x5aeec48eef1461191a53d0a66f7bfcc2c4ed6a4051aa9eb51c41d850a782db1a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://cec04f5b7d7e8ae36ea73336acec33c3826180df9ea63165794798d9f2c27414\",\"dweb:/ipfs/QmQ8xJKNMhS6jbzy3WFcXHCQkq9PfQ3LffQJe5sKJ7DHUi\"]},\"src/interfaces/IAstariaVaultBase.sol\":{\"keccak256\":\"0x9bac62367d57af33320f2e7c39ce6f206fdcb86d8455ad05403206db1242fc1c\",\"urls\":[\"bzz-raw://a762fd60febc1425be4c020ca1f7d3fe64d2c5f32f9c8ac0d6a4fb2218a0cbf0\",\"dweb:/ipfs/QmVoXAuBjLJ7qK5Cf7NVamv1aHn2DpjMbekbKRju4UoiVG\"]},\"src/interfaces/IBeacon.sol\":{\"keccak256\":\"0x1dfb9ca353162c2bd9fef54d72659a652827edff3d5ddcef90010d9a59087379\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3e8b19a00a3d203f6e3724438581d14a2fcb78f13e63cf53733ed05f9f13ee22\",\"dweb:/ipfs/QmQscTJqw1iPkk8koaPvtv7KbJUbZvZKa53EE6Fdui1fBE\"]},\"src/interfaces/ICollateralToken.sol\":{\"keccak256\":\"0xa86499b8d1c19e6e31c7d3117319407b4b4cab1477f58e02ab779cc0680db2dd\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://514710825450c39fc7e747319bed5f201305d9716ac75a3c0e7e3c55fb78acfb\",\"dweb:/ipfs/QmQQ1fxhDbfBNYAUwt81eTHQR6SzxHDjA1bnfDWWBGreKZ\"]},\"src/interfaces/IERC1155.sol\":{\"keccak256\":\"0xe25553970ad5ce41eff41f09a537fe6acb57d0cd5acf30cca8071bbca1852ff2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3f8a6f908d805b7a07ebdc3abe20cf6a6225a81aa04a50a8d98a2255f4d8b4d\",\"dweb:/ipfs/QmVRFXeHwF3s1haZvHL5GzbCzGHxfRXbZRfUd6vYqgxt9a\"]},\"src/interfaces/IERC165.sol\":{\"keccak256\":\"0x64e1d4f776a4bf02f7ab4187741c2e50c767bfa04f4ef1f920edba78c2918020\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cff6c09b4206cbf675fae7baa5e036802a16b1bad9a541db160858a5caa5b35c\",\"dweb:/ipfs/QmRCagsWpeQGomTbdHusJuNUPJnNB8HLHkB98FPU2s9Vc6\"]},\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0xf60c3588615e47906292265ebdc539f36e624cc166a7e338972e8f7479b3c58e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d61baa7db1a5ec4126d6ab038d6975151bcb173437e51d4d141325fe99f4630c\",\"dweb:/ipfs/QmZ8mYs5xSjd3vNYZWjjBREpob2T84yu5kaHiFFXuVw1jj\"]},\"src/interfaces/IERC20Metadata.sol\":{\"keccak256\":\"0x62d41e03a486abf749e251ba2193aab6839a784134393ae4bbbda4c1158ac719\",\"urls\":[\"bzz-raw://d202de8baf11c4241da55ccd8d478aa678eacdd605c4bd7737a58233aed8b1f4\",\"dweb:/ipfs/Qmc3mcavHSqfnhTTpGo3637i9sQ2h6xAx93CrZGvRNcpUV\"]},\"src/interfaces/IERC4626.sol\":{\"keccak256\":\"0x9d349304814db66455d64a670d2097d15f31c7be256112771029b360b5e9be6e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bc90db889ec013610dd9b46c078bf966bf1ff5581eed358e6939aac82153623\",\"dweb:/ipfs/QmeKm3z1YEqaWH575ee5d2E2e5J1unuS5FuxAgk3Z1awJb\"]},\"src/interfaces/IERC721.sol\":{\"keccak256\":\"0x117f31cd8994417850ae9cbdde9d160e3489438da9da529ccb3364e77094f5f2\",\"urls\":[\"bzz-raw://c5b7819472a2d9300ab01f30ce669842d3964139359eb2fcbbbfe2528caaf49e\",\"dweb:/ipfs/QmWUYVecpypq174bntvxSCKqc9UW14dECQQyu5ZfAF5ahd\"]},\"src/interfaces/IFlashAction.sol\":{\"keccak256\":\"0x3da810acaaaa871c3a774278daccaf235b312bb87a30f31747a604edf03c5fad\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b286e0fe15c162e4c42ba4d101cc3571471d67b73177a41806c02e6c2f490403\",\"dweb:/ipfs/QmZ5doxRvrVjPsez1RSPUkNcFNsKVP77hYxENkDKGBKGTc\"]},\"src/interfaces/ILienToken.sol\":{\"keccak256\":\"0x03939fdaa03bf8d83d319d50c0867692b7f2263eff49359d4708186d2b86fbe2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4db50888740110bd909bdac497f2835b111aeac61e8ba0f33b79385ff28b8389\",\"dweb:/ipfs/Qmc83YKTapvzrtbzsr3KiD3sKQR5sn8ehWzMapAioPYwH5\"]},\"src/interfaces/IPublicVault.sol\":{\"keccak256\":\"0x801eae1b33e3b06296e34724c2e7a6c7f69f708516b1d4906a0265e39eaa1d50\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://59a339b21f28ec3fde1100716d98e38efb8dc8f94506ed8624c5d220d1b90018\",\"dweb:/ipfs/QmNhhFYKuffzPfZXzLhkHj4mDuZxqp9Vu6C8MTcU5PYhu7\"]},\"src/interfaces/IRouterBase.sol\":{\"keccak256\":\"0xd3b9d619ee9290b921ae4e5af10a6d27e86ca4d1b2bbfd3fd7de7e58590fe7d0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://340f9da95d25f28e5d59f26896167baa8b04c9091ba208ad39d08c30fde1dfb7\",\"dweb:/ipfs/QmZEDjZZw7ahYkJzc3wj2BD64nSpZqm4Y7rtHa4ucy8DB3\"]},\"src/interfaces/IRoyaltyEngine.sol\":{\"keccak256\":\"0x3ce05d4eae4f2c83df25091fadb0a0ed775035d21176b8d6ee371dde86666a98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://918dcd595146dcda873ef000974215c69456ee2fd7211ad150c73a9f6d9ffc15\",\"dweb:/ipfs/QmPHFHtXijpebjP7RrnpBWuEmFSE8ZEcHa5RAFz3BkayzE\"]},\"src/interfaces/ITokenBase.sol\":{\"keccak256\":\"0x08ef7300305216638c08433550a74b9b2a67b10815f1f417c8ad3fb9e0a470f1\",\"urls\":[\"bzz-raw://a1f6f8c126a30ddc08d73da72d58c37ef7eee6c284e1bca2b29ef6c038119ecd\",\"dweb:/ipfs/QmTcqNSW35nHEwu5Ta3agViP4XBqaQ3RSAGwPp3b3ifMkK\"]},\"src/interfaces/ITransferProxy.sol\":{\"keccak256\":\"0x9397366f4f7772ca29948286fb778ddaa87bea64b75d9d6d5fa7deaa86c804e8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2d09184e2aaf225923dd3fb3d5455f4901060c4743b37c5e0da11cdb3801fdf1\",\"dweb:/ipfs/QmfNYLZG4jXGK8rTwz2TnXUNNAakMwMYV7aWRJMjASKAHm\"]},\"src/interfaces/IVaultImplementation.sol\":{\"keccak256\":\"0x7af906fe0c94160d02c1b0e7699fdc9c643c16ca205dfc725f4596fe8d5ea80e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ccf0faf7f14d06b086536bda9db91459b98afb289240e2d81467917b6aaa3dc8\",\"dweb:/ipfs/QmfY9omAQE6BZa7qKEUuc7HcRj468JKooShmBV1eiQ4yRo\"]},\"src/libraries/Base64.sol\":{\"keccak256\":\"0x22a9855252647e844b7dfd621163fbf6d7eaa4fbe5f57d13fdc7fe57f5622562\",\"urls\":[\"bzz-raw://bbfbbba46997b00dbe2a0a6416cb018f05eae3367dfced6bc4d5b5f5f16e1232\",\"dweb:/ipfs/QmboXmUuYC8MyVQ5uCCZsMNnu8oVpps9BBUcXSZNCscjiY\"]},\"src/libraries/CollateralLookup.sol\":{\"keccak256\":\"0xbcb4de0cd01b158ccdc5e747ecb25c212ac614642f623ce9e4a8929d53b7cc23\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://88d0927a6069c9dbaf34549910d441fab3b742aaff67093ed188b5024927fe37\",\"dweb:/ipfs/QmSBYoCcDwewyNDCNH3XZrPsgk6jzYpyQXtNikSqyaLbvf\"]},\"src/utils/Pausable.sol\":{\"keccak256\":\"0xab33b35b84c72ab4461d6f339712e7b06bf9d882140823c51161b2b6f7be6d2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4add02c4f8ec8c7018f56678bd3a748f2b7a1883a2aaa38f397aa6f7a0f50f93\",\"dweb:/ipfs/QmYVdHE7D9rkNxA1PPQe1eyRDfGGM5TikVYJnuZqeQu6md\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "enum IVaultImplementation.InvalidRequestReason",
              "name": "reason",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "InvalidRequest"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "nonce",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "IncrementNonce",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "nonce",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NonceUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "VaultShutdown",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "COLLATERAL_TOKEN",
          "outputs": [
            {
              "internalType": "contract ICollateralToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "EPOCH_LENGTH",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "IMPL_TYPE",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "ROUTER",
          "outputs": [
            {
              "internalType": "contract IAstariaRouter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "START",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "STRATEGY_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "VAULT_FEE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "asset",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "collateralId",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "position",
              "type": "uint8"
            },
            {
              "internalType": "struct IAstariaRouter.Commitment",
              "name": "incomingTerms",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenContract",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct IAstariaRouter.NewLienRequest",
                  "name": "lienRequest",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct IAstariaRouter.StrategyDetails",
                      "name": "strategy",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint8",
                          "name": "version",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "deadline",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address",
                          "name": "vault",
                          "type": "address"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ILienToken.Stack[]",
                      "name": "stack",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "struct ILienToken.Lien",
                          "name": "lien",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "address",
                              "name": "vault",
                              "type": "address"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "strategyRoot",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "uint256",
                              "name": "collateralId",
                              "type": "uint256"
                            },
                            {
                              "internalType": "struct ILienToken.Details",
                              "name": "details",
                              "type": "tuple",
                              "components": [
                                {
                                  "internalType": "uint256",
                                  "name": "maxAmount",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rate",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "duration",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "maxPotentialDebt",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "liquidationInitialAsk",
                                  "type": "uint256"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "internalType": "struct ILienToken.Point",
                          "name": "point",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint88",
                              "name": "amount",
                              "type": "uint88"
                            },
                            {
                              "internalType": "uint8",
                              "name": "position",
                              "type": "uint8"
                            },
                            {
                              "internalType": "uint40",
                              "name": "last",
                              "type": "uint40"
                            },
                            {
                              "internalType": "uint40",
                              "name": "end",
                              "type": "uint40"
                            },
                            {
                              "internalType": "uint256",
                              "name": "lienId",
                              "type": "uint256"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "bytes",
                      "name": "nlrDetails",
                      "type": "bytes"
                    },
                    {
                      "internalType": "struct IAstariaRouter.MerkleData",
                      "name": "merkle",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "root",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32[]",
                          "name": "proof",
                          "type": "bytes32[]"
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint8",
                      "name": "v",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "r",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "s",
                      "type": "bytes32"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct ILienToken.Stack[]",
              "name": "stack",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct ILienToken.Lien",
                  "name": "lien",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "strategyRoot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "collateralId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct ILienToken.Details",
                      "name": "details",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "maxAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "rate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "duration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxPotentialDebt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "liquidationInitialAsk",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "struct ILienToken.Point",
                  "name": "point",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint88",
                      "name": "amount",
                      "type": "uint88"
                    },
                    {
                      "internalType": "uint8",
                      "name": "position",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint40",
                      "name": "last",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint40",
                      "name": "end",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lienId",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "buyoutLien",
          "outputs": [
            {
              "internalType": "struct ILienToken.Stack[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct ILienToken.Lien",
                  "name": "lien",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "strategyRoot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "collateralId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct ILienToken.Details",
                      "name": "details",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "maxAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "rate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "duration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxPotentialDebt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "liquidationInitialAsk",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "struct ILienToken.Point",
                  "name": "point",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint88",
                      "name": "amount",
                      "type": "uint88"
                    },
                    {
                      "internalType": "uint8",
                      "name": "position",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint40",
                      "name": "last",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint40",
                      "name": "end",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lienId",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct ILienToken.Stack",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct ILienToken.Lien",
                  "name": "lien",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "strategyRoot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "collateralId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct ILienToken.Details",
                      "name": "details",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "maxAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "rate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "duration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxPotentialDebt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "liquidationInitialAsk",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "struct ILienToken.Point",
                  "name": "point",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint88",
                      "name": "amount",
                      "type": "uint88"
                    },
                    {
                      "internalType": "uint8",
                      "name": "position",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint40",
                      "name": "last",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint40",
                      "name": "end",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lienId",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IAstariaRouter.Commitment",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenContract",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct IAstariaRouter.NewLienRequest",
                  "name": "lienRequest",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct IAstariaRouter.StrategyDetails",
                      "name": "strategy",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint8",
                          "name": "version",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "deadline",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address",
                          "name": "vault",
                          "type": "address"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ILienToken.Stack[]",
                      "name": "stack",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "struct ILienToken.Lien",
                          "name": "lien",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "address",
                              "name": "vault",
                              "type": "address"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "strategyRoot",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "uint256",
                              "name": "collateralId",
                              "type": "uint256"
                            },
                            {
                              "internalType": "struct ILienToken.Details",
                              "name": "details",
                              "type": "tuple",
                              "components": [
                                {
                                  "internalType": "uint256",
                                  "name": "maxAmount",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rate",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "duration",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "maxPotentialDebt",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "liquidationInitialAsk",
                                  "type": "uint256"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "internalType": "struct ILienToken.Point",
                          "name": "point",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint88",
                              "name": "amount",
                              "type": "uint88"
                            },
                            {
                              "internalType": "uint8",
                              "name": "position",
                              "type": "uint8"
                            },
                            {
                              "internalType": "uint40",
                              "name": "last",
                              "type": "uint40"
                            },
                            {
                              "internalType": "uint40",
                              "name": "end",
                              "type": "uint40"
                            },
                            {
                              "internalType": "uint256",
                              "name": "lienId",
                              "type": "uint256"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "bytes",
                      "name": "nlrDetails",
                      "type": "bytes"
                    },
                    {
                      "internalType": "struct IAstariaRouter.MerkleData",
                      "name": "merkle",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "root",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32[]",
                          "name": "proof",
                          "type": "bytes32[]"
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint8",
                      "name": "v",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "r",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "s",
                      "type": "bytes32"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "commitToLien",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "lienId",
              "type": "uint256"
            },
            {
              "internalType": "struct ILienToken.Stack[]",
              "name": "stack",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct ILienToken.Lien",
                  "name": "lien",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "strategyRoot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "collateralId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct ILienToken.Details",
                      "name": "details",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "maxAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "rate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "duration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxPotentialDebt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "liquidationInitialAsk",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "struct ILienToken.Point",
                  "name": "point",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint88",
                      "name": "amount",
                      "type": "uint88"
                    },
                    {
                      "internalType": "uint8",
                      "name": "position",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint40",
                      "name": "last",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint40",
                      "name": "end",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lienId",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "disableAllowList"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "domainSeparator",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "enableAllowList"
        },
        {
          "inputs": [
            {
              "internalType": "struct IAstariaRouter.StrategyDetails",
              "name": "strategy",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint8",
                  "name": "version",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "encodeStrategyData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getShutdown",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getStrategistNonce",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "incrementNonce"
        },
        {
          "inputs": [
            {
              "internalType": "struct IVaultImplementation.InitParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "delegate",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "allowListEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "address[]",
                  "name": "allowList",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "depositCap",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "init"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "modifyAllowList"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newCap",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyDepositCap"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "from_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId_",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data_",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "recipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegate_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDelegate"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "shutdown"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "buyoutLien(uint256,uint8,(address,uint256,((uint8,uint256,address),((address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint88,uint8,uint40,uint40,uint256))[],bytes,(bytes32,bytes32[]),uint256,uint8,bytes32,bytes32)),((address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint88,uint8,uint40,uint40,uint256))[])": {
            "params": {
              "collateralId": "The ID of the underlying CollateralToken.",
              "incomingTerms": "The loan terms of the new lien.",
              "position": "The position of the specified lien."
            }
          },
          "commitToLien((address,uint256,((uint8,uint256,address),((address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint88,uint8,uint40,uint40,uint256))[],bytes,(bytes32,bytes32[]),uint256,uint8,bytes32,bytes32)),address)": {
            "params": {
              "params": "Commitment data for the incoming lien request",
              "receiver": "The borrower receiving the loan."
            },
            "returns": {
              "lienId": "The id of the newly minted lien token."
            }
          },
          "modifyDepositCap(uint256)": {
            "params": {
              "newCap": "The deposit cap."
            }
          },
          "recipient()": {
            "returns": {
              "_0": "The address of the recipient."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "buyoutLien(uint256,uint8,(address,uint256,((uint8,uint256,address),((address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint88,uint8,uint40,uint40,uint256))[],bytes,(bytes32,bytes32[]),uint256,uint8,bytes32,bytes32)),((address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint88,uint8,uint40,uint40,uint256))[])": {
            "notice": "Buy optimized-out a lien to replace it with new terms."
          },
          "commitToLien((address,uint256,((uint8,uint256,address),((address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint88,uint8,uint40,uint40,uint256))[],bytes,(bytes32,bytes32[]),uint256,uint8,bytes32,bytes32)),address)": {
            "notice": "Pipeline for lifecycle of new loan origination. Origination consists of a few phases: pre-commitment validation, lien token issuance, strategist reward, and after commitment actions Starts by depositing collateral and take optimized-out a lien against it. Next, verifies the merkle proof for a loan commitment. Vault owners are then rewarded fees for successful loan origination."
          },
          "disableAllowList()": {
            "notice": "disable the allowList for the vault"
          },
          "enableAllowList()": {
            "notice": "enable the allowList for the vault"
          },
          "modifyDepositCap(uint256)": {
            "notice": "modify the deposit cap for the vault"
          },
          "onERC721Received(address,address,uint256,bytes)": {
            "notice": "receive hook for ERC721 tokens, nothing special done"
          },
          "recipient()": {
            "notice": "Retrieves the recipient of loan repayments. For PublicVaults (VAULT_TYPE 2), this is always the vault address. For PrivateVaults, retrieves the owner() of the vault."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@rari-capital/solmate/=lib/seaport/./lib/solmate/",
        ":auction/=lib/gpl/lib/auction-house/src/",
        ":clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        ":contracts/=lib/seaport/contracts/",
        ":core/=src/",
        ":ds-test/=lib/ds-test/src/",
        ":eip4626/=lib/foundry_eip-4626/src/",
        ":forge-std/=lib/forge-std/src/",
        ":foundry_eip-4626/=lib/foundry_eip-4626/src/",
        ":gpl/=lib/gpl/src/",
        ":murky/=lib/seaport/./lib/murky/src/",
        ":openzeppelin-contracts/=lib/seaport/lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/gpl/lib/openzeppelin-contracts/contracts/",
        ":seaport/=lib/seaport/contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Vault.sol": "Vault"
      },
      "libraries": {}
    },
    "sources": {
      "lib/clones-with-immutable-args/src/Clone.sol": {
        "keccak256": "0x958f183649832a994119e7484fea15a6b7b91c7e7b1ae4f3736104cd89ae7545",
        "urls": [
          "bzz-raw://2b4bbb61023cf315287406fee6086d2c6c5b85d6b1a141a8ee10295b663712bb",
          "dweb:/ipfs/QmaJP5pKF2WoBWsMCrAZssHhDZXvpufaWmg8oYfVgWMAHq"
        ],
        "license": "BSD"
      },
      "lib/gpl/src/ERC721.sol": {
        "keccak256": "0x2b62e15196c20edd4a0c97c39139ea70674f8659f056d50bc60748b1a646029d",
        "urls": [
          "bzz-raw://5bcfe08f6c97a611ca36c2a1009466db4c1021bef9297dffd7bca1b4c1fe56eb",
          "dweb:/ipfs/QmX6Ebmf6yVk7YtbTs1461zUG25Dp8D8qo4D8qoQunWmVT"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/gpl/src/interfaces/IERC4626RouterBase.sol": {
        "keccak256": "0xf73159f090c84e03a0a68c5cc78a0a65d71c4a27bcd5881b37a0036bb75355df",
        "urls": [
          "bzz-raw://2cea2a0802b9427bd14979aec2f869263480c138c0021c962c24eb8e650b63f4",
          "dweb:/ipfs/QmS3DbnkHmttGkcNKPvxrodHPYayUnK9Eug6yHU754gmWH"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/gpl/src/utils/SafeCastLib.sol": {
        "keccak256": "0xc2634e793ee22b9c9c2736dfe9b735b0c13cb6852629969d61d604e09b6d3dde",
        "urls": [
          "bzz-raw://4896559c7c10652c6cd8977b33a8876f00ee3e34d0e137fd2676220659088e7b",
          "dweb:/ipfs/QmcyK4JEj2mSgwikitnntSYYC84sWmpP1FFFxnMLkbgkMr"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/seaport/contracts/interfaces/ConduitControllerInterface.sol": {
        "keccak256": "0xb124e40645efdf5d92b48fd54eaeb0ba1d05fde62bf51e7684c1bc3bf5343388",
        "urls": [
          "bzz-raw://757b4b1edb39b78b94debeb877e68036c1181a5d20d0f299c497cecc903f147d",
          "dweb:/ipfs/QmeXsKmxsMXCxGTtcRAnyuRhtkQF4V4cfXukRYSpFwFoaF"
        ],
        "license": "MIT"
      },
      "lib/seaport/contracts/interfaces/ConsiderationInterface.sol": {
        "keccak256": "0x1c535d369a2eb5eb3a62783c770870274a07fbdc7c20d6f7dc75decc75930688",
        "urls": [
          "bzz-raw://b85c960a378c3f425a1653dd8d978f2915203dfd16ec9932e4dd7b4963c17240",
          "dweb:/ipfs/QmYADawT4zzRFkkEteLTHpXdp9nrVW7ag7CvKmvQS5kYHB"
        ],
        "license": "MIT"
      },
      "lib/seaport/contracts/lib/ConsiderationEnums.sol": {
        "keccak256": "0xe78faea2c9d9322ca557af34e8d576fe21dab9c995f0657d34ba6c4e94fe9c0f",
        "urls": [
          "bzz-raw://6ebef28980d88b7707013dd98658b22d4494755f59d0b93463dba1c377a62bbb",
          "dweb:/ipfs/QmRdfKbcuCYVB3rpTbS6peRY4XnhBxQRewbxpttA4Jv9ie"
        ],
        "license": "MIT"
      },
      "lib/seaport/contracts/lib/ConsiderationStructs.sol": {
        "keccak256": "0x1cf7b9e7d034197a5af36536ff8b8fea6041e8c66c1928e6d6d5e411c465b234",
        "urls": [
          "bzz-raw://369e5901a714935a54f68c1abd1f96e901d95b51a05897cfcf2eb9e28ef57896",
          "dweb:/ipfs/QmNM5XGK419cC2xn23qgB68gbR7qqbif44QBFwKax2SBpM"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/auth/Auth.sol": {
        "keccak256": "0x6e05238d59cd40172c04c1974eb8f1f6cef4fdc4b6553ef7844a7302b885f76c",
        "urls": [
          "bzz-raw://a9743c21ca0470d9082e4cf00aea53786868c977d40775e6954463658ebb50ac",
          "dweb:/ipfs/QmPFdyrLHUX1zSipTC2tcJ58EzxxPp2TTvCZx9KCgqZn2W"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/mixins/ERC4626.sol": {
        "keccak256": "0xa404f6f45bd53f24a90cc5ffe95e16b52e3f2dfd88f0d7a1edcb35f815919a7b",
        "urls": [
          "bzz-raw://9f01e32d713e05cc58c1563e9938a1c5e096b1da9f52c7ea8424f2317b94adc1",
          "dweb:/ipfs/QmVt5SsbA3kezM5pyovupN7iZLy6QVqY5qQRZKLFqxKJUs"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC721.sol": {
        "keccak256": "0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d",
        "urls": [
          "bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403",
          "dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/WETH.sol": {
        "keccak256": "0x343cf5f6b643864c5728fa9bf057c5708052402b22c5662decce94f5febff514",
        "urls": [
          "bzz-raw://dc3722cf992cc13ff0728660432092d8ae6851f500b24c0aa474c45f2e8c3f2d",
          "dweb:/ipfs/QmVq7veVaBKKdm4AKQiuCXMPGHPuCcPksm7LNuA2ihpN9U"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x5419f4dacaaf6e608653d71173558a14bf57e04d31f2abd54f974f7f4ea56b2d",
        "urls": [
          "bzz-raw://fea3de3bd66a3288487b0a1c81c04abb6e0936fdbbde9559be0fead95387c1c5",
          "dweb:/ipfs/QmVNj6szG6r8Ze2MQ3sAJGJaETwb4GkTYknohfSSP4Pp1S"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeCastLib.sol": {
        "keccak256": "0xb784a14411858036491124e677aecde6d500e695b7a70c74aa8f1001bda2ccab",
        "urls": [
          "bzz-raw://7610da561fe84b893cb46410acdf9e56c204029a21cb717c11cde33ed4354427",
          "dweb:/ipfs/QmQ7LyNz9V48ox4BgncCpvqq4LcDFwqz9q3CTrsrLmdPrk"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300",
        "urls": [
          "bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41",
          "dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/AstariaVaultBase.sol": {
        "keccak256": "0x549173d13802bb76aeba77185ef3428b41c5caefac5b3858403e0206cb2fd160",
        "urls": [
          "bzz-raw://bd3b26329716e2b33423aada5efde071c151cb2d497976dd914bc5b8de6f9b95",
          "dweb:/ipfs/QmWDtbuPhGSs3MCKF4rHAePKBptHs9eRx71LzoU3fCrfCz"
        ],
        "license": null
      },
      "src/ClearingHouse.sol": {
        "keccak256": "0xcb1e09c044675455a1e00743da9b02f3ac1b2cf43d24d5f4b0bc0d5bc2d0f3a4",
        "urls": [
          "bzz-raw://4297bf847414613728e9da4b0b0d670a244e451e4a1d0a14b10dfc20086cc2c9",
          "dweb:/ipfs/QmVyGbp6Co4uirLFdKXYaXM7AkFjP4hCDF9xiUvHqWMcSz"
        ],
        "license": "UNLICENSED"
      },
      "src/LienToken.sol": {
        "keccak256": "0x28b8d93f2315e5580a644fae8d3d4a19cd0564482e2c024ff2035ab97160d118",
        "urls": [
          "bzz-raw://2574f24821f3723d5a15c302f2ffdcd61ea4ccf1393be153ad8492393bfb01e1",
          "dweb:/ipfs/QmRV4UazQvPp5YGJDvnmB9G2qxxesbggxrNaMzKnarcAme"
        ],
        "license": "UNLICENSED"
      },
      "src/Vault.sol": {
        "keccak256": "0xb9554f85f456d163c2d6924e116c45705078a309e34d91fd0926a3a6968a9f35",
        "urls": [
          "bzz-raw://781a15d29bfb434e08d01bb40792e56f92cc3bc1d9aed1a5f51fd8a34be5c84b",
          "dweb:/ipfs/QmXzdaGmkgfiPacHcqTUyGzF1As8m4d1hZGe1hGuR9Zdut"
        ],
        "license": "UNLICENSED"
      },
      "src/VaultImplementation.sol": {
        "keccak256": "0xad9f071e7429f349ff7c49b1d2acd3700191033c5cb8178ab34f511650bcec32",
        "urls": [
          "bzz-raw://3b2331da9b41abad70b6eb24aee87c6a210521de6267bb9e3941711877d89b9a",
          "dweb:/ipfs/QmPSVeP33KghtJLDngfj8TAHeo7BT4nFH9YDzaPGpHrbHW"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IAstariaRouter.sol": {
        "keccak256": "0x5aeec48eef1461191a53d0a66f7bfcc2c4ed6a4051aa9eb51c41d850a782db1a",
        "urls": [
          "bzz-raw://cec04f5b7d7e8ae36ea73336acec33c3826180df9ea63165794798d9f2c27414",
          "dweb:/ipfs/QmQ8xJKNMhS6jbzy3WFcXHCQkq9PfQ3LffQJe5sKJ7DHUi"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IAstariaVaultBase.sol": {
        "keccak256": "0x9bac62367d57af33320f2e7c39ce6f206fdcb86d8455ad05403206db1242fc1c",
        "urls": [
          "bzz-raw://a762fd60febc1425be4c020ca1f7d3fe64d2c5f32f9c8ac0d6a4fb2218a0cbf0",
          "dweb:/ipfs/QmVoXAuBjLJ7qK5Cf7NVamv1aHn2DpjMbekbKRju4UoiVG"
        ],
        "license": null
      },
      "src/interfaces/IBeacon.sol": {
        "keccak256": "0x1dfb9ca353162c2bd9fef54d72659a652827edff3d5ddcef90010d9a59087379",
        "urls": [
          "bzz-raw://3e8b19a00a3d203f6e3724438581d14a2fcb78f13e63cf53733ed05f9f13ee22",
          "dweb:/ipfs/QmQscTJqw1iPkk8koaPvtv7KbJUbZvZKa53EE6Fdui1fBE"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/ICollateralToken.sol": {
        "keccak256": "0xa86499b8d1c19e6e31c7d3117319407b4b4cab1477f58e02ab779cc0680db2dd",
        "urls": [
          "bzz-raw://514710825450c39fc7e747319bed5f201305d9716ac75a3c0e7e3c55fb78acfb",
          "dweb:/ipfs/QmQQ1fxhDbfBNYAUwt81eTHQR6SzxHDjA1bnfDWWBGreKZ"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IERC1155.sol": {
        "keccak256": "0xe25553970ad5ce41eff41f09a537fe6acb57d0cd5acf30cca8071bbca1852ff2",
        "urls": [
          "bzz-raw://b3f8a6f908d805b7a07ebdc3abe20cf6a6225a81aa04a50a8d98a2255f4d8b4d",
          "dweb:/ipfs/QmVRFXeHwF3s1haZvHL5GzbCzGHxfRXbZRfUd6vYqgxt9a"
        ],
        "license": "MIT"
      },
      "src/interfaces/IERC165.sol": {
        "keccak256": "0x64e1d4f776a4bf02f7ab4187741c2e50c767bfa04f4ef1f920edba78c2918020",
        "urls": [
          "bzz-raw://cff6c09b4206cbf675fae7baa5e036802a16b1bad9a541db160858a5caa5b35c",
          "dweb:/ipfs/QmRCagsWpeQGomTbdHusJuNUPJnNB8HLHkB98FPU2s9Vc6"
        ],
        "license": "MIT"
      },
      "src/interfaces/IERC20.sol": {
        "keccak256": "0xf60c3588615e47906292265ebdc539f36e624cc166a7e338972e8f7479b3c58e",
        "urls": [
          "bzz-raw://d61baa7db1a5ec4126d6ab038d6975151bcb173437e51d4d141325fe99f4630c",
          "dweb:/ipfs/QmZ8mYs5xSjd3vNYZWjjBREpob2T84yu5kaHiFFXuVw1jj"
        ],
        "license": "MIT"
      },
      "src/interfaces/IERC20Metadata.sol": {
        "keccak256": "0x62d41e03a486abf749e251ba2193aab6839a784134393ae4bbbda4c1158ac719",
        "urls": [
          "bzz-raw://d202de8baf11c4241da55ccd8d478aa678eacdd605c4bd7737a58233aed8b1f4",
          "dweb:/ipfs/Qmc3mcavHSqfnhTTpGo3637i9sQ2h6xAx93CrZGvRNcpUV"
        ],
        "license": null
      },
      "src/interfaces/IERC4626.sol": {
        "keccak256": "0x9d349304814db66455d64a670d2097d15f31c7be256112771029b360b5e9be6e",
        "urls": [
          "bzz-raw://6bc90db889ec013610dd9b46c078bf966bf1ff5581eed358e6939aac82153623",
          "dweb:/ipfs/QmeKm3z1YEqaWH575ee5d2E2e5J1unuS5FuxAgk3Z1awJb"
        ],
        "license": "MIT"
      },
      "src/interfaces/IERC721.sol": {
        "keccak256": "0x117f31cd8994417850ae9cbdde9d160e3489438da9da529ccb3364e77094f5f2",
        "urls": [
          "bzz-raw://c5b7819472a2d9300ab01f30ce669842d3964139359eb2fcbbbfe2528caaf49e",
          "dweb:/ipfs/QmWUYVecpypq174bntvxSCKqc9UW14dECQQyu5ZfAF5ahd"
        ],
        "license": null
      },
      "src/interfaces/IFlashAction.sol": {
        "keccak256": "0x3da810acaaaa871c3a774278daccaf235b312bb87a30f31747a604edf03c5fad",
        "urls": [
          "bzz-raw://b286e0fe15c162e4c42ba4d101cc3571471d67b73177a41806c02e6c2f490403",
          "dweb:/ipfs/QmZ5doxRvrVjPsez1RSPUkNcFNsKVP77hYxENkDKGBKGTc"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/ILienToken.sol": {
        "keccak256": "0x03939fdaa03bf8d83d319d50c0867692b7f2263eff49359d4708186d2b86fbe2",
        "urls": [
          "bzz-raw://4db50888740110bd909bdac497f2835b111aeac61e8ba0f33b79385ff28b8389",
          "dweb:/ipfs/Qmc83YKTapvzrtbzsr3KiD3sKQR5sn8ehWzMapAioPYwH5"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IPublicVault.sol": {
        "keccak256": "0x801eae1b33e3b06296e34724c2e7a6c7f69f708516b1d4906a0265e39eaa1d50",
        "urls": [
          "bzz-raw://59a339b21f28ec3fde1100716d98e38efb8dc8f94506ed8624c5d220d1b90018",
          "dweb:/ipfs/QmNhhFYKuffzPfZXzLhkHj4mDuZxqp9Vu6C8MTcU5PYhu7"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IRouterBase.sol": {
        "keccak256": "0xd3b9d619ee9290b921ae4e5af10a6d27e86ca4d1b2bbfd3fd7de7e58590fe7d0",
        "urls": [
          "bzz-raw://340f9da95d25f28e5d59f26896167baa8b04c9091ba208ad39d08c30fde1dfb7",
          "dweb:/ipfs/QmZEDjZZw7ahYkJzc3wj2BD64nSpZqm4Y7rtHa4ucy8DB3"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IRoyaltyEngine.sol": {
        "keccak256": "0x3ce05d4eae4f2c83df25091fadb0a0ed775035d21176b8d6ee371dde86666a98",
        "urls": [
          "bzz-raw://918dcd595146dcda873ef000974215c69456ee2fd7211ad150c73a9f6d9ffc15",
          "dweb:/ipfs/QmPHFHtXijpebjP7RrnpBWuEmFSE8ZEcHa5RAFz3BkayzE"
        ],
        "license": "MIT"
      },
      "src/interfaces/ITokenBase.sol": {
        "keccak256": "0x08ef7300305216638c08433550a74b9b2a67b10815f1f417c8ad3fb9e0a470f1",
        "urls": [
          "bzz-raw://a1f6f8c126a30ddc08d73da72d58c37ef7eee6c284e1bca2b29ef6c038119ecd",
          "dweb:/ipfs/QmTcqNSW35nHEwu5Ta3agViP4XBqaQ3RSAGwPp3b3ifMkK"
        ],
        "license": null
      },
      "src/interfaces/ITransferProxy.sol": {
        "keccak256": "0x9397366f4f7772ca29948286fb778ddaa87bea64b75d9d6d5fa7deaa86c804e8",
        "urls": [
          "bzz-raw://2d09184e2aaf225923dd3fb3d5455f4901060c4743b37c5e0da11cdb3801fdf1",
          "dweb:/ipfs/QmfNYLZG4jXGK8rTwz2TnXUNNAakMwMYV7aWRJMjASKAHm"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IVaultImplementation.sol": {
        "keccak256": "0x7af906fe0c94160d02c1b0e7699fdc9c643c16ca205dfc725f4596fe8d5ea80e",
        "urls": [
          "bzz-raw://ccf0faf7f14d06b086536bda9db91459b98afb289240e2d81467917b6aaa3dc8",
          "dweb:/ipfs/QmfY9omAQE6BZa7qKEUuc7HcRj468JKooShmBV1eiQ4yRo"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/Base64.sol": {
        "keccak256": "0x22a9855252647e844b7dfd621163fbf6d7eaa4fbe5f57d13fdc7fe57f5622562",
        "urls": [
          "bzz-raw://bbfbbba46997b00dbe2a0a6416cb018f05eae3367dfced6bc4d5b5f5f16e1232",
          "dweb:/ipfs/QmboXmUuYC8MyVQ5uCCZsMNnu8oVpps9BBUcXSZNCscjiY"
        ],
        "license": null
      },
      "src/libraries/CollateralLookup.sol": {
        "keccak256": "0xbcb4de0cd01b158ccdc5e747ecb25c212ac614642f623ce9e4a8929d53b7cc23",
        "urls": [
          "bzz-raw://88d0927a6069c9dbaf34549910d441fab3b742aaff67093ed188b5024927fe37",
          "dweb:/ipfs/QmSBYoCcDwewyNDCNH3XZrPsgk6jzYpyQXtNikSqyaLbvf"
        ],
        "license": "UNLICENSED"
      },
      "src/utils/Pausable.sol": {
        "keccak256": "0xab33b35b84c72ab4461d6f339712e7b06bf9d882140823c51161b2b6f7be6d2d",
        "urls": [
          "bzz-raw://4add02c4f8ec8c7018f56678bd3a748f2b7a1883a2aaa38f397aa6f7a0f50f93",
          "dweb:/ipfs/QmYVdHE7D9rkNxA1PPQe1eyRDfGGM5TikVYJnuZqeQu6md"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Vault.sol",
    "id": 66896,
    "exportedSymbols": {
      "AstariaVaultBase": [
        59879
      ],
      "Auth": [
        54916
      ],
      "Authority": [
        54929
      ],
      "ERC20": [
        56223
      ],
      "ERC4626": [
        55755
      ],
      "FixedPointMathLib": [
        57064
      ],
      "IAstariaRouter": [
        69282
      ],
      "IERC165": [
        69788
      ],
      "IERC4626": [
        70061
      ],
      "ILienToken": [
        70649
      ],
      "ITokenBase": [
        70934
      ],
      "LienToken": [
        64717
      ],
      "SafeCastLib": [
        57321
      ],
      "SafeTransferLib": [
        57406
      ],
      "Vault": [
        66895
      ],
      "VaultImplementation": [
        67903
      ]
    },
    "nodeType": "SourceUnit",
    "src": "180:2742:136",
    "nodes": [
      {
        "id": 66669,
        "nodeType": "PragmaDirective",
        "src": "180:24:136",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 66672,
        "nodeType": "ImportDirective",
        "src": "206:54:136",
        "nodes": [],
        "absolutePath": "lib/solmate/src/auth/Auth.sol",
        "file": "solmate/auth/Auth.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66896,
        "sourceUnit": 54930,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66670,
              "name": "Auth",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54916,
              "src": "214:4:136",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 66671,
              "name": "Authority",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54929,
              "src": "220:9:136",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66674,
        "nodeType": "ImportDirective",
        "src": "261:47:136",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66896,
        "sourceUnit": 56224,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66673,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56223,
              "src": "269:5:136",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66676,
        "nodeType": "ImportDirective",
        "src": "309:51:136",
        "nodes": [],
        "absolutePath": "lib/solmate/src/mixins/ERC4626.sol",
        "file": "solmate/mixins/ERC4626.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66896,
        "sourceUnit": 55756,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66675,
              "name": "ERC4626",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55755,
              "src": "317:7:136",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66678,
        "nodeType": "ImportDirective",
        "src": "361:70:136",
        "nodes": [],
        "absolutePath": "lib/solmate/src/utils/FixedPointMathLib.sol",
        "file": "solmate/utils/FixedPointMathLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66896,
        "sourceUnit": 57065,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66677,
              "name": "FixedPointMathLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 57064,
              "src": "369:17:136",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66680,
        "nodeType": "ImportDirective",
        "src": "432:66:136",
        "nodes": [],
        "absolutePath": "lib/solmate/src/utils/SafeTransferLib.sol",
        "file": "solmate/utils/SafeTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66896,
        "sourceUnit": 57407,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66679,
              "name": "SafeTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 57406,
              "src": "440:15:136",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66682,
        "nodeType": "ImportDirective",
        "src": "499:58:136",
        "nodes": [],
        "absolutePath": "lib/solmate/src/utils/SafeCastLib.sol",
        "file": "solmate/utils/SafeCastLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66896,
        "sourceUnit": 57322,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66681,
              "name": "SafeCastLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 57321,
              "src": "507:11:136",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66684,
        "nodeType": "ImportDirective",
        "src": "559:52:136",
        "nodes": [],
        "absolutePath": "src/interfaces/IERC165.sol",
        "file": "core/interfaces/IERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66896,
        "sourceUnit": 69789,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66683,
              "name": "IERC165",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 69788,
              "src": "567:7:136",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66686,
        "nodeType": "ImportDirective",
        "src": "612:58:136",
        "nodes": [],
        "absolutePath": "src/interfaces/ITokenBase.sol",
        "file": "core/interfaces/ITokenBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66896,
        "sourceUnit": 70935,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66685,
              "name": "ITokenBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 70934,
              "src": "620:10:136",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66688,
        "nodeType": "ImportDirective",
        "src": "671:59:136",
        "nodes": [],
        "absolutePath": "src/AstariaVaultBase.sol",
        "file": "core/AstariaVaultBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66896,
        "sourceUnit": 59880,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66687,
              "name": "AstariaVaultBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 59879,
              "src": "679:16:136",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66690,
        "nodeType": "ImportDirective",
        "src": "732:66:136",
        "nodes": [],
        "absolutePath": "src/interfaces/IAstariaRouter.sol",
        "file": "core/interfaces/IAstariaRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66896,
        "sourceUnit": 69283,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66689,
              "name": "IAstariaRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 69282,
              "src": "740:14:136",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66692,
        "nodeType": "ImportDirective",
        "src": "799:58:136",
        "nodes": [],
        "absolutePath": "src/interfaces/ILienToken.sol",
        "file": "core/interfaces/ILienToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66896,
        "sourceUnit": 70650,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66691,
              "name": "ILienToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 70649,
              "src": "807:10:136",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66694,
        "nodeType": "ImportDirective",
        "src": "859:45:136",
        "nodes": [],
        "absolutePath": "src/LienToken.sol",
        "file": "core/LienToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66896,
        "sourceUnit": 64718,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66693,
              "name": "LienToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 64717,
              "src": "867:9:136",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66696,
        "nodeType": "ImportDirective",
        "src": "905:65:136",
        "nodes": [],
        "absolutePath": "src/VaultImplementation.sol",
        "file": "core/VaultImplementation.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66896,
        "sourceUnit": 67904,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66695,
              "name": "VaultImplementation",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 67903,
              "src": "913:19:136",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66698,
        "nodeType": "ImportDirective",
        "src": "971:54:136",
        "nodes": [],
        "absolutePath": "src/interfaces/IERC4626.sol",
        "file": "core/interfaces/IERC4626.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66896,
        "sourceUnit": 70062,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66697,
              "name": "IERC4626",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 70061,
              "src": "979:8:136",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66895,
        "nodeType": "ContractDefinition",
        "src": "1051:1870:136",
        "nodes": [
          {
            "id": 66707,
            "nodeType": "UsingForDirective",
            "src": "1111:32:136",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 66704,
              "name": "SafeTransferLib",
              "nameLocations": [
                "1117:15:136"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 57406,
              "src": "1117:15:136"
            },
            "typeName": {
              "id": 66706,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 66705,
                "name": "ERC20",
                "nameLocations": [
                  "1137:5:136"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 56223,
                "src": "1137:5:136"
              },
              "referencedDeclaration": 56223,
              "src": "1137:5:136",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$56223",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 66730,
            "nodeType": "FunctionDefinition",
            "src": "1147:211:136",
            "nodes": [],
            "body": {
              "id": 66729,
              "nodeType": "Block",
              "src": "1277:81:136",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4153542d5661756c742d",
                            "id": 66719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1314:12:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_6b4e44b280b3804a1b9b8579ff5e67ebab4da2e147b044328faf169505f5f1a8",
                              "typeString": "literal_string \"AST-Vault-\""
                            },
                            "value": "AST-Vault-"
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 66721,
                                      "name": "asset",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59836,
                                      "src": "1334:5:136",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                                        "typeString": "function () pure returns (address)"
                                      }
                                    },
                                    "id": 66722,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1334:7:136",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 66720,
                                  "name": "ERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 56223,
                                  "src": "1328:5:136",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC20_$56223_$",
                                    "typeString": "type(contract ERC20)"
                                  }
                                },
                                "id": 66723,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1328:14:136",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$56223",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "id": 66724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1343:6:136",
                              "memberName": "symbol",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 55858,
                              "src": "1328:21:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () view external returns (string memory)"
                              }
                            },
                            "id": 66725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1328:23:136",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_6b4e44b280b3804a1b9b8579ff5e67ebab4da2e147b044328faf169505f5f1a8",
                              "typeString": "literal_string \"AST-Vault-\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 66717,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1297:3:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 66718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1301:12:136",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1297:16:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 66726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1297:55:136",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 66716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1290:6:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 66715,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1290:6:136",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 66727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1290:63:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 66714,
                  "id": 66728,
                  "nodeType": "Return",
                  "src": "1283:70:136"
                }
              ]
            },
            "baseFunctions": [
              59788,
              66948
            ],
            "functionSelector": "06fdde03",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "1156:4:136",
            "overrides": {
              "id": 66711,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 66709,
                  "name": "AstariaVaultBase",
                  "nameLocations": [
                    "1208:16:136"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 59879,
                  "src": "1208:16:136"
                },
                {
                  "id": 66710,
                  "name": "VaultImplementation",
                  "nameLocations": [
                    "1226:19:136"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 67903,
                  "src": "1226:19:136"
                }
              ],
              "src": "1199:47:136"
            },
            "parameters": {
              "id": 66708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1160:2:136"
            },
            "returnParameters": {
              "id": 66714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66713,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66730,
                  "src": "1260:13:136",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 66712,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1260:6:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1259:15:136"
            },
            "scope": 66895,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 66756,
            "nodeType": "FunctionDefinition",
            "src": "1362:228:136",
            "nodes": [],
            "body": {
              "id": 66755,
              "nodeType": "Block",
              "src": "1494:96:136",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4153542d56",
                            "id": 66742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1537:7:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f05957a6d9189ef0c927096585306d95b190ebbb461aea18bc014e9e099c70f0",
                              "typeString": "literal_string \"AST-V\""
                            },
                            "value": "AST-V"
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 66743,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59826,
                              "src": "1546:5:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                                "typeString": "function () pure returns (address)"
                              }
                            },
                            "id": 66744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1546:7:136",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "2d",
                            "id": 66745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1555:3:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
                              "typeString": "literal_string \"-\""
                            },
                            "value": "-"
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 66747,
                                      "name": "asset",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59836,
                                      "src": "1566:5:136",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                                        "typeString": "function () pure returns (address)"
                                      }
                                    },
                                    "id": 66748,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1566:7:136",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 66746,
                                  "name": "ERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 56223,
                                  "src": "1560:5:136",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC20_$56223_$",
                                    "typeString": "type(contract ERC20)"
                                  }
                                },
                                "id": 66749,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1560:14:136",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$56223",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "id": 66750,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1575:6:136",
                              "memberName": "symbol",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 55858,
                              "src": "1560:21:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () view external returns (string memory)"
                              }
                            },
                            "id": 66751,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1560:23:136",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f05957a6d9189ef0c927096585306d95b190ebbb461aea18bc014e9e099c70f0",
                              "typeString": "literal_string \"AST-V\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
                              "typeString": "literal_string \"-\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 66740,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1520:3:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 66741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1524:12:136",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1520:16:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 66752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1520:64:136",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 66739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1513:6:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 66738,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1513:6:136",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 66753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1513:72:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 66737,
                  "id": 66754,
                  "nodeType": "Return",
                  "src": "1500:85:136"
                }
              ]
            },
            "baseFunctions": [
              59793,
              66954
            ],
            "functionSelector": "95d89b41",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "1371:6:136",
            "overrides": {
              "id": 66734,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 66732,
                  "name": "AstariaVaultBase",
                  "nameLocations": [
                    "1425:16:136"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 59879,
                  "src": "1425:16:136"
                },
                {
                  "id": 66733,
                  "name": "VaultImplementation",
                  "nameLocations": [
                    "1443:19:136"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 67903,
                  "src": "1443:19:136"
                }
              ],
              "src": "1416:47:136"
            },
            "parameters": {
              "id": 66731,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1377:2:136"
            },
            "returnParameters": {
              "id": 66737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66736,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66756,
                  "src": "1477:13:136",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 66735,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1477:6:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1476:15:136"
            },
            "scope": 66895,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 66768,
            "nodeType": "FunctionDefinition",
            "src": "1594:133:136",
            "nodes": [],
            "body": {
              "id": 66767,
              "nodeType": "Block",
              "src": "1704:23:136",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 66765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1717:5:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 66764,
                  "id": 66766,
                  "nodeType": "Return",
                  "src": "1710:12:136"
                }
              ]
            },
            "baseFunctions": [
              69787
            ],
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1603:17:136",
            "overrides": {
              "id": 66761,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 66760,
                  "name": "IERC165",
                  "nameLocations": [
                    "1674:7:136"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 69788,
                  "src": "1674:7:136"
                }
              ],
              "src": "1665:17:136"
            },
            "parameters": {
              "id": 66759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66758,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66768,
                  "src": "1621:6:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 66757,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1621:6:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1620:8:136"
            },
            "returnParameters": {
              "id": 66764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66763,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66768,
                  "src": "1696:4:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 66762,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1696:4:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1695:6:136"
            },
            "scope": 66895,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 66826,
            "nodeType": "FunctionDefinition",
            "src": "1731:361:136",
            "nodes": [],
            "body": {
              "id": 66825,
              "nodeType": "Block",
              "src": "1829:263:136",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    66779
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66779,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "1850:1:136",
                      "nodeType": "VariableDeclaration",
                      "scope": 66825,
                      "src": "1835:16:136",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VIData_$71180_storage_ptr",
                        "typeString": "struct IVaultImplementation.VIData"
                      },
                      "typeName": {
                        "id": 66778,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 66777,
                          "name": "VIData",
                          "nameLocations": [
                            "1835:6:136"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 71180,
                          "src": "1835:6:136"
                        },
                        "referencedDeclaration": 71180,
                        "src": "1835:6:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VIData_$71180_storage_ptr",
                          "typeString": "struct IVaultImplementation.VIData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66782,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 66780,
                      "name": "_loadVISlot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67036,
                      "src": "1854:11:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_VIData_$71180_storage_ptr_$",
                        "typeString": "function () pure returns (struct IVaultImplementation.VIData storage pointer)"
                      }
                    },
                    "id": 66781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1854:13:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VIData_$71180_storage_ptr",
                      "typeString": "struct IVaultImplementation.VIData storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1835:32:136"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 66803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 66784,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66779,
                              "src": "1888:1:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VIData_$71180_storage_ptr",
                                "typeString": "struct IVaultImplementation.VIData storage pointer"
                              }
                            },
                            "id": 66785,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1890:9:136",
                            "memberName": "allowList",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 71179,
                            "src": "1888:11:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 66788,
                          "indexExpression": {
                            "expression": {
                              "id": 66786,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1900:3:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 66787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1904:6:136",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1900:10:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1888:23:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 66801,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 66796,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 66789,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1924:3:136",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 66790,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1928:6:136",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1924:10:136",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 66793,
                                        "name": "ROUTER",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 59806,
                                        "src": "1946:6:136",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IAstariaRouter_$69282_$",
                                          "typeString": "function () pure returns (contract IAstariaRouter)"
                                        }
                                      },
                                      "id": 66794,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1946:8:136",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IAstariaRouter_$69282",
                                        "typeString": "contract IAstariaRouter"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IAstariaRouter_$69282",
                                        "typeString": "contract IAstariaRouter"
                                      }
                                    ],
                                    "id": 66792,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1938:7:136",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 66791,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1938:7:136",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 66795,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1938:17:136",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "1924:31:136",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 66797,
                                    "name": "s",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 66779,
                                    "src": "1959:1:136",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_VIData_$71180_storage_ptr",
                                      "typeString": "struct IVaultImplementation.VIData storage pointer"
                                    }
                                  },
                                  "id": 66798,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1961:9:136",
                                  "memberName": "allowList",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 71179,
                                  "src": "1959:11:136",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 66800,
                                "indexExpression": {
                                  "id": 66799,
                                  "name": "receiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 66772,
                                  "src": "1971:8:136",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1959:21:136",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1924:56:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 66802,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1923:58:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1888:93:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 66783,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1873:7:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 66804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1873:114:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66805,
                  "nodeType": "ExpressionStatement",
                  "src": "1873:114:136"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 66813,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2033:3:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 66814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2037:6:136",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2033:10:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 66812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2025:7:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 66811,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2025:7:136",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2025:19:136",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 66818,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2054:4:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vault_$66895",
                              "typeString": "contract Vault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Vault_$66895",
                              "typeString": "contract Vault"
                            }
                          ],
                          "id": 66817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2046:7:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 66816,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2046:7:136",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2046:13:136",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 66820,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66770,
                        "src": "2061:6:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 66807,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59836,
                              "src": "1999:5:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                                "typeString": "function () pure returns (address)"
                              }
                            },
                            "id": 66808,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1999:7:136",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 66806,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56223,
                          "src": "1993:5:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$56223_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 66809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1993:14:136",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$56223",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 66810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2008:16:136",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57365,
                      "src": "1993:31:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$56223_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$56223_$",
                        "typeString": "function (contract ERC20,address,address,uint256)"
                      }
                    },
                    "id": 66821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1993:75:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66822,
                  "nodeType": "ExpressionStatement",
                  "src": "1993:75:136"
                },
                {
                  "expression": {
                    "id": 66823,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 66770,
                    "src": "2081:6:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 66776,
                  "id": 66824,
                  "nodeType": "Return",
                  "src": "2074:13:136"
                }
              ]
            },
            "functionSelector": "6e553f65",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1740:7:136",
            "parameters": {
              "id": 66773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66770,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1756:6:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 66826,
                  "src": "1748:14:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66769,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1748:7:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66772,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "1772:8:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 66826,
                  "src": "1764:16:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66771,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1764:7:136",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1747:34:136"
            },
            "returnParameters": {
              "id": 66776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66775,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66826,
                  "src": "1818:7:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66774,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1818:7:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1817:9:136"
            },
            "scope": 66895,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 66857,
            "nodeType": "FunctionDefinition",
            "src": "2096:165:136",
            "nodes": [],
            "body": {
              "id": 66856,
              "nodeType": "Block",
              "src": "2139:122:136",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 66836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 66832,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2153:3:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 66833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2157:6:136",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2153:10:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 66834,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59826,
                            "src": "2167:5:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                              "typeString": "function () pure returns (address)"
                            }
                          },
                          "id": 66835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2167:7:136",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2153:21:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 66831,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2145:7:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 66837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2145:30:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66838,
                  "nodeType": "ExpressionStatement",
                  "src": "2145:30:136"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66846,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2221:4:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vault_$66895",
                              "typeString": "contract Vault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Vault_$66895",
                              "typeString": "contract Vault"
                            }
                          ],
                          "id": 66845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2213:7:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 66844,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2213:7:136",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2213:13:136",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 66850,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2236:3:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 66851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2240:6:136",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2236:10:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 66849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2228:7:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 66848,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2228:7:136",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2228:19:136",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 66853,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66828,
                        "src": "2249:6:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 66840,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59836,
                              "src": "2187:5:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                                "typeString": "function () pure returns (address)"
                              }
                            },
                            "id": 66841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2187:7:136",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 66839,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56223,
                          "src": "2181:5:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$56223_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 66842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2181:14:136",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$56223",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 66843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2196:16:136",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57365,
                      "src": "2181:31:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$56223_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$56223_$",
                        "typeString": "function (contract ERC20,address,address,uint256)"
                      }
                    },
                    "id": 66854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2181:75:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66855,
                  "nodeType": "ExpressionStatement",
                  "src": "2181:75:136"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "2105:8:136",
            "parameters": {
              "id": 66829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66828,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2122:6:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 66857,
                  "src": "2114:14:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66827,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2114:7:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2113:16:136"
            },
            "returnParameters": {
              "id": 66830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2139:0:136"
            },
            "scope": 66895,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66868,
            "nodeType": "FunctionDefinition",
            "src": "2265:205:136",
            "nodes": [],
            "body": {
              "id": 66867,
              "nodeType": "Block",
              "src": "2337:133:136",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 66863,
                          "name": "InvalidRequestReason",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71150,
                          "src": "2431:20:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_InvalidRequestReason_$71150_$",
                            "typeString": "type(enum IVaultImplementation.InvalidRequestReason)"
                          }
                        },
                        "id": 66864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2452:12:136",
                        "memberName": "NO_AUTHORITY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 71141,
                        "src": "2431:33:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_InvalidRequestReason_$71150",
                          "typeString": "enum IVaultImplementation.InvalidRequestReason"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_InvalidRequestReason_$71150",
                          "typeString": "enum IVaultImplementation.InvalidRequestReason"
                        }
                      ],
                      "id": 66862,
                      "name": "InvalidRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71155,
                      "src": "2416:14:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$_t_enum$_InvalidRequestReason_$71150_$returns$__$",
                        "typeString": "function (enum IVaultImplementation.InvalidRequestReason) pure"
                      }
                    },
                    "id": 66865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2416:49:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66866,
                  "nodeType": "RevertStatement",
                  "src": "2409:56:136"
                }
              ]
            },
            "baseFunctions": [
              67080
            ],
            "functionSelector": "834029ba",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "disableAllowList",
            "nameLocation": "2274:16:136",
            "overrides": {
              "id": 66860,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 66859,
                  "name": "VaultImplementation",
                  "nameLocations": [
                    "2316:19:136"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 67903,
                  "src": "2316:19:136"
                }
              ],
              "src": "2307:29:136"
            },
            "parameters": {
              "id": 66858,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2290:2:136"
            },
            "returnParameters": {
              "id": 66861,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2337:0:136"
            },
            "scope": 66895,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66879,
            "nodeType": "FunctionDefinition",
            "src": "2474:204:136",
            "nodes": [],
            "body": {
              "id": 66878,
              "nodeType": "Block",
              "src": "2545:133:136",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 66874,
                          "name": "InvalidRequestReason",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71150,
                          "src": "2639:20:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_InvalidRequestReason_$71150_$",
                            "typeString": "type(enum IVaultImplementation.InvalidRequestReason)"
                          }
                        },
                        "id": 66875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2660:12:136",
                        "memberName": "NO_AUTHORITY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 71141,
                        "src": "2639:33:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_InvalidRequestReason_$71150",
                          "typeString": "enum IVaultImplementation.InvalidRequestReason"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_InvalidRequestReason_$71150",
                          "typeString": "enum IVaultImplementation.InvalidRequestReason"
                        }
                      ],
                      "id": 66873,
                      "name": "InvalidRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71155,
                      "src": "2624:14:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$_t_enum$_InvalidRequestReason_$71150_$returns$__$",
                        "typeString": "function (enum IVaultImplementation.InvalidRequestReason) pure"
                      }
                    },
                    "id": 66876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2624:49:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66877,
                  "nodeType": "RevertStatement",
                  "src": "2617:56:136"
                }
              ]
            },
            "baseFunctions": [
              67099
            ],
            "functionSelector": "dc2fbaee",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enableAllowList",
            "nameLocation": "2483:15:136",
            "overrides": {
              "id": 66871,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 66870,
                  "name": "VaultImplementation",
                  "nameLocations": [
                    "2524:19:136"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 67903,
                  "src": "2524:19:136"
                }
              ],
              "src": "2515:29:136"
            },
            "parameters": {
              "id": 66869,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2498:2:136"
            },
            "returnParameters": {
              "id": 66872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2545:0:136"
            },
            "scope": 66895,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66894,
            "nodeType": "FunctionDefinition",
            "src": "2682:237:136",
            "nodes": [],
            "body": {
              "id": 66893,
              "nodeType": "Block",
              "src": "2780:139:136",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 66889,
                          "name": "InvalidRequestReason",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71150,
                          "src": "2880:20:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_InvalidRequestReason_$71150_$",
                            "typeString": "type(enum IVaultImplementation.InvalidRequestReason)"
                          }
                        },
                        "id": 66890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2901:12:136",
                        "memberName": "NO_AUTHORITY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 71141,
                        "src": "2880:33:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_InvalidRequestReason_$71150",
                          "typeString": "enum IVaultImplementation.InvalidRequestReason"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_InvalidRequestReason_$71150",
                          "typeString": "enum IVaultImplementation.InvalidRequestReason"
                        }
                      ],
                      "id": 66888,
                      "name": "InvalidRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71155,
                      "src": "2865:14:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$_t_enum$_InvalidRequestReason_$71150_$returns$__$",
                        "typeString": "function (enum IVaultImplementation.InvalidRequestReason) pure"
                      }
                    },
                    "id": 66891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2865:49:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66892,
                  "nodeType": "RevertStatement",
                  "src": "2858:56:136"
                }
              ]
            },
            "baseFunctions": [
              67061
            ],
            "functionSelector": "3177e0fe",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "modifyAllowList",
            "nameLocation": "2691:15:136",
            "overrides": {
              "id": 66886,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 66885,
                  "name": "VaultImplementation",
                  "nameLocations": [
                    "2757:19:136"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 67903,
                  "src": "2757:19:136"
                }
              ],
              "src": "2748:29:136"
            },
            "parameters": {
              "id": 66884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66881,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66894,
                  "src": "2707:7:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66880,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2707:7:136",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66883,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66894,
                  "src": "2716:4:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 66882,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2716:4:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2706:15:136"
            },
            "returnParameters": {
              "id": 66887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2780:0:136"
            },
            "scope": 66895,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 66700,
              "name": "AstariaVaultBase",
              "nameLocations": [
                "1069:16:136"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 59879,
              "src": "1069:16:136"
            },
            "id": 66701,
            "nodeType": "InheritanceSpecifier",
            "src": "1069:16:136"
          },
          {
            "baseName": {
              "id": 66702,
              "name": "VaultImplementation",
              "nameLocations": [
                "1087:19:136"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 67903,
              "src": "1087:19:136"
            },
            "id": 66703,
            "nodeType": "InheritanceSpecifier",
            "src": "1087:19:136"
          }
        ],
        "canonicalName": "Vault",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 66699,
          "nodeType": "StructuredDocumentation",
          "src": "1027:23:136",
          "text": " @title Vault"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          66895,
          67903,
          71283,
          69788,
          56787,
          59879,
          69319,
          70845,
          120
        ],
        "name": "Vault",
        "nameLocation": "1060:5:136",
        "scope": 66896,
        "usedErrors": [
          71155
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 136
}