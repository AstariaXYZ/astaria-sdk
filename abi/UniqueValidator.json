{
  "abi": [
    {
      "inputs": [],
      "name": "VERSION_TYPE",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "maxAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPotentialDebt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidationInitialAsk",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ILienToken.Details",
              "name": "lien",
              "type": "tuple"
            }
          ],
          "internalType": "struct IUniqueValidator.Details",
          "name": "details",
          "type": "tuple"
        }
      ],
      "name": "assembleLeaf",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "nlrDetails",
          "type": "bytes"
        }
      ],
      "name": "getLeafDetails",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "maxAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPotentialDebt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidationInitialAsk",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ILienToken.Details",
              "name": "lien",
              "type": "tuple"
            }
          ],
          "internalType": "struct IUniqueValidator.Details",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint8",
                  "name": "version",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                }
              ],
              "internalType": "struct IAstariaRouter.StrategyDetailsParam",
              "name": "strategy",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "collateralType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "strategyRoot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "collateralId",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "maxAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "rate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "duration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxPotentialDebt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "liquidationInitialAsk",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct ILienToken.Details",
                      "name": "details",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct ILienToken.Lien",
                  "name": "lien",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint88",
                      "name": "amount",
                      "type": "uint88"
                    },
                    {
                      "internalType": "uint40",
                      "name": "last",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint40",
                      "name": "end",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lienId",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ILienToken.Point",
                  "name": "point",
                  "type": "tuple"
                }
              ],
              "internalType": "struct ILienToken.Stack[]",
              "name": "stack",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes",
              "name": "nlrDetails",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "root",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "proof",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct IAstariaRouter.MerkleData",
              "name": "merkle",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct IAstariaRouter.NewLienRequest",
          "name": "params",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateralTokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "collateralTokenId",
          "type": "uint256"
        }
      ],
      "name": "validateAndParse",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "leaf",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "maxAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPotentialDebt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "liquidationInitialAsk",
              "type": "uint256"
            }
          ],
          "internalType": "struct ILienToken.Details",
          "name": "ld",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610bda806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806338fc401c1461005157806343fea054146100705780638ba47309146100905780638ccc5abc146100b1575b600080fd5b610059600181565b60405160ff90911681526020015b60405180910390f35b61008361007e3660046104b0565b6100d1565b60405161006791906104ed565b6100a361009e3660046108ca565b6100f3565b6040516100679291906109ec565b6100c46100bf366004610a32565b6102ca565b6040516100679190610aa3565b6100d96102f3565b818060200190518101906100ed9190610af1565b92915050565b60006101276040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b600061013687604001516100d1565b805190915060ff166001146101815760405162461bcd60e51b815260206004820152600c60248201526b696e76616c6964207479706560a01b60448201526064015b60405180910390fd5b60608101516001600160a01b0316156102085780606001516001600160a01b0316866001600160a01b0316146102085760405162461bcd60e51b815260206004820152602660248201527f696e76616c696420626f72726f7765722072657175657374696e6720636f6d6d6044820152651a5d1b595b9d60d21b6064820152608401610178565b846001600160a01b031681602001516001600160a01b0316146102665760405162461bcd60e51b81526020600482015260166024820152751a5b9d985b1a59081d1bdad95b8818dbdb9d1c9858dd60521b6044820152606401610178565b838160400151146102ac5760405162461bcd60e51b815260206004820152601060248201526f1a5b9d985b1a59081d1bdad95b881a5960821b6044820152606401610178565b60409096015180516020909101206080909601519596945050505050565b6060816040516020016102dd91906104ed565b6040516020818303038152906040529050919050565b6040518060a00160405280600060ff16815260200160006001600160a01b031681526020016000815260200160006001600160a01b031681526020016103616040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b905290565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff8111828210171561039f5761039f610366565b60405290565b6040805190810167ffffffffffffffff8111828210171561039f5761039f610366565b60405160c0810167ffffffffffffffff8111828210171561039f5761039f610366565b604051610100810167ffffffffffffffff8111828210171561039f5761039f610366565b604051601f8201601f1916810167ffffffffffffffff8111828210171561043857610438610366565b604052919050565b600082601f83011261045157600080fd5b813567ffffffffffffffff81111561046b5761046b610366565b61047e601f8201601f191660200161040f565b81815284602083860101111561049357600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156104c257600080fd5b813567ffffffffffffffff8111156104d957600080fd5b6104e584828501610440565b949350505050565b815160ff1681526020808301516001600160a01b039081168284015260408085015181850152606080860151909216828501526080948501518051868601529283015160a085015282015160c084015281015160e0830152909101516101008201526101200190565b60ff8116811461056557600080fd5b50565b803561057381610556565b919050565b6001600160a01b038116811461056557600080fd5b803561057381610578565b6000606082840312156105aa57600080fd5b6040516060810181811067ffffffffffffffff821117156105cd576105cd610366565b60405290508082356105de81610556565b81526020838101359082015260408301356105f881610578565b6040919091015292915050565b600067ffffffffffffffff82111561061f5761061f610366565b5060051b60200190565b600060a0828403121561063b57600080fd5b61064361037c565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015292915050565b803564ffffffffff8116811461057357600080fd5b60006080828403121561069e57600080fd5b6040516080810181811067ffffffffffffffff821117156106c1576106c1610366565b60405290508082356affffffffffffffffffffff811681146106e257600080fd5b81526106f060208401610677565b602082015261070160408401610677565b6040820152606083013560608201525092915050565b600082601f83011261072857600080fd5b8135602061073d61073883610605565b61040f565b8281526101c0928302850182019282820191908785111561075d57600080fd5b8387015b85811015610816578089038281121561077a5760008081fd5b6107826103a5565b610140808312156107935760008081fd5b61079b6103c8565b925083356107a881610556565b8352838801356107b781610578565b838901526040848101356107ca81610578565b90840152606084810135908401526080808501359084015260a06107f08d828701610629565b908401528282526108038c85830161068c565b8289015250855250928401928101610761565b5090979650505050505050565b60006040828403121561083557600080fd5b61083d6103a5565b90508135815260208083013567ffffffffffffffff81111561085e57600080fd5b8301601f8101851361086f57600080fd5b803561087d61073882610605565b81815260059190911b8201830190838101908783111561089c57600080fd5b928401925b828410156108ba578335825292840192908401906108a1565b8085870152505050505092915050565b600080600080608085870312156108e057600080fd5b843567ffffffffffffffff808211156108f857600080fd5b90860190610140828903121561090d57600080fd5b6109156103eb565b61091f8984610598565b815260608301358281111561093357600080fd5b61093f8a828601610717565b60208301525060808301358281111561095757600080fd5b6109638a828601610440565b60408301525060a08301358281111561097b57600080fd5b6109878a828601610823565b60608301525060c083013560808201526109a360e08401610568565b60a082015261010083013560c08201526101209092013560e08301525093506109ce6020860161058d565b92506109dc6040860161058d565b9396929550929360600135925050565b82815260c08101610a2b602083018480518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b9392505050565b60006101208284031215610a4557600080fd5b610a4d61037c565b8235610a5881610556565b81526020830135610a6881610578565b6020820152604083810135908201526060830135610a8581610578565b6060820152610a978460808501610629565b60808201529392505050565b600060208083528351808285015260005b81811015610ad057858101830151858201604001528201610ab4565b506000604082860101526040601f19601f8301168501019250505092915050565b6000818303610120811215610b0557600080fd5b610b0d61037c565b8351610b1881610556565b81526020840151610b2881610578565b6020820152604084810151908201526060840151610b4581610578565b606082015260a0607f1983011215610b5c57600080fd5b610b6461037c565b608085810151825260a0860151602083015260c0860151604083015260e0860151606083015261010090950151858201529381019390935250909291505056fea264697066735822122061e2965becfa1e02aa15477bf856a35f5bf92eb4818aecd8a5faa113c8c52e8e64736f6c63430008110033",
    "sourceMap": "1402:1146:187:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806338fc401c1461005157806343fea054146100705780638ba47309146100905780638ccc5abc146100b1575b600080fd5b610059600181565b60405160ff90911681526020015b60405180910390f35b61008361007e3660046104b0565b6100d1565b60405161006791906104ed565b6100a361009e3660046108ca565b6100f3565b6040516100679291906109ec565b6100c46100bf366004610a32565b6102ca565b6040516100679190610aa3565b6100d96102f3565b818060200190518101906100ed9190610af1565b92915050565b60006101276040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b600061013687604001516100d1565b805190915060ff166001146101815760405162461bcd60e51b815260206004820152600c60248201526b696e76616c6964207479706560a01b60448201526064015b60405180910390fd5b60608101516001600160a01b0316156102085780606001516001600160a01b0316866001600160a01b0316146102085760405162461bcd60e51b815260206004820152602660248201527f696e76616c696420626f72726f7765722072657175657374696e6720636f6d6d6044820152651a5d1b595b9d60d21b6064820152608401610178565b846001600160a01b031681602001516001600160a01b0316146102665760405162461bcd60e51b81526020600482015260166024820152751a5b9d985b1a59081d1bdad95b8818dbdb9d1c9858dd60521b6044820152606401610178565b838160400151146102ac5760405162461bcd60e51b815260206004820152601060248201526f1a5b9d985b1a59081d1bdad95b881a5960821b6044820152606401610178565b60409096015180516020909101206080909601519596945050505050565b6060816040516020016102dd91906104ed565b6040516020818303038152906040529050919050565b6040518060a00160405280600060ff16815260200160006001600160a01b031681526020016000815260200160006001600160a01b031681526020016103616040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b905290565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff8111828210171561039f5761039f610366565b60405290565b6040805190810167ffffffffffffffff8111828210171561039f5761039f610366565b60405160c0810167ffffffffffffffff8111828210171561039f5761039f610366565b604051610100810167ffffffffffffffff8111828210171561039f5761039f610366565b604051601f8201601f1916810167ffffffffffffffff8111828210171561043857610438610366565b604052919050565b600082601f83011261045157600080fd5b813567ffffffffffffffff81111561046b5761046b610366565b61047e601f8201601f191660200161040f565b81815284602083860101111561049357600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156104c257600080fd5b813567ffffffffffffffff8111156104d957600080fd5b6104e584828501610440565b949350505050565b815160ff1681526020808301516001600160a01b039081168284015260408085015181850152606080860151909216828501526080948501518051868601529283015160a085015282015160c084015281015160e0830152909101516101008201526101200190565b60ff8116811461056557600080fd5b50565b803561057381610556565b919050565b6001600160a01b038116811461056557600080fd5b803561057381610578565b6000606082840312156105aa57600080fd5b6040516060810181811067ffffffffffffffff821117156105cd576105cd610366565b60405290508082356105de81610556565b81526020838101359082015260408301356105f881610578565b6040919091015292915050565b600067ffffffffffffffff82111561061f5761061f610366565b5060051b60200190565b600060a0828403121561063b57600080fd5b61064361037c565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015292915050565b803564ffffffffff8116811461057357600080fd5b60006080828403121561069e57600080fd5b6040516080810181811067ffffffffffffffff821117156106c1576106c1610366565b60405290508082356affffffffffffffffffffff811681146106e257600080fd5b81526106f060208401610677565b602082015261070160408401610677565b6040820152606083013560608201525092915050565b600082601f83011261072857600080fd5b8135602061073d61073883610605565b61040f565b8281526101c0928302850182019282820191908785111561075d57600080fd5b8387015b85811015610816578089038281121561077a5760008081fd5b6107826103a5565b610140808312156107935760008081fd5b61079b6103c8565b925083356107a881610556565b8352838801356107b781610578565b838901526040848101356107ca81610578565b90840152606084810135908401526080808501359084015260a06107f08d828701610629565b908401528282526108038c85830161068c565b8289015250855250928401928101610761565b5090979650505050505050565b60006040828403121561083557600080fd5b61083d6103a5565b90508135815260208083013567ffffffffffffffff81111561085e57600080fd5b8301601f8101851361086f57600080fd5b803561087d61073882610605565b81815260059190911b8201830190838101908783111561089c57600080fd5b928401925b828410156108ba578335825292840192908401906108a1565b8085870152505050505092915050565b600080600080608085870312156108e057600080fd5b843567ffffffffffffffff808211156108f857600080fd5b90860190610140828903121561090d57600080fd5b6109156103eb565b61091f8984610598565b815260608301358281111561093357600080fd5b61093f8a828601610717565b60208301525060808301358281111561095757600080fd5b6109638a828601610440565b60408301525060a08301358281111561097b57600080fd5b6109878a828601610823565b60608301525060c083013560808201526109a360e08401610568565b60a082015261010083013560c08201526101209092013560e08301525093506109ce6020860161058d565b92506109dc6040860161058d565b9396929550929360600135925050565b82815260c08101610a2b602083018480518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b9392505050565b60006101208284031215610a4557600080fd5b610a4d61037c565b8235610a5881610556565b81526020830135610a6881610578565b6020820152604083810135908201526060830135610a8581610578565b6060820152610a978460808501610629565b60808201529392505050565b600060208083528351808285015260005b81811015610ad057858101830151858201604001528201610ab4565b506000604082860101526040601f19601f8301168501019250505092915050565b6000818303610120811215610b0557600080fd5b610b0d61037c565b8351610b1881610556565b81526020840151610b2881610578565b6020820152604084810151908201526060840151610b4581610578565b606082015260a0607f1983011215610b5c57600080fd5b610b6461037c565b608085810151825260a0860151602083015260c0860151604083015260e0860151606083015261010090950151858201529381019390935250909291505056fea264697066735822122061e2965becfa1e02aa15477bf856a35f5bf92eb4818aecd8a5faa113c8c52e8e64736f6c63430008110033",
    "sourceMap": "1402:1146:187:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1451:45;;1494:1;1451:45;;;;;186:4:199;174:17;;;156:36;;144:2;129:18;1451:45:187;;;;;;;;1501:151;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1792:754::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1656:132::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1501:151::-;1583:14;;:::i;:::-;1625:10;1614:33;;;;;;;;;;;;:::i;:::-;1607:40;1501:151;-1:-1:-1;;1501:151:187:o;1792:754::-;2009:12;2023:28;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2023:28:187;2061:17;2081:33;2096:6;:17;;;2081:14;:33::i;:::-;2124:10;;2061:53;;-1:-1:-1;2124:26:187;;1494:1;2124:26;2120:69;;2160:22;;-1:-1:-1;;;2160:22:187;;13792:2:199;2160:22:187;;;13774:21:199;13831:2;13811:18;;;13804:30;-1:-1:-1;;;13850:18:199;;;13843:42;13902:18;;2160:22:187;;;;;;;;2120:69;2199:11;;;;-1:-1:-1;;;;;2199:25:187;;2195:144;;2263:2;:11;;;-1:-1:-1;;;;;2251:23:187;:8;-1:-1:-1;;;;;2251:23:187;;2234:98;;;;-1:-1:-1;;;2234:98:187;;14133:2:199;2234:98:187;;;14115:21:199;14172:2;14152:18;;;14145:30;14211:34;14191:18;;;14184:62;-1:-1:-1;;;14262:18:199;;;14255:36;14308:19;;2234:98:187;13931:402:199;2234:98:187;2365:23;-1:-1:-1;;;;;2353:35:187;:2;:8;;;-1:-1:-1;;;;;2353:35:187;;2345:70;;;;-1:-1:-1;;;2345:70:187;;14540:2:199;2345:70:187;;;14522:21:199;14579:2;14559:18;;;14552:30;-1:-1:-1;;;14598:18:199;;;14591:52;14660:18;;2345:70:187;14338:346:199;2345:70:187;2444:17;2430:2;:10;;;:31;2422:60;;;;-1:-1:-1;;;2422:60:187;;14891:2:199;2422:60:187;;;14873:21:199;14930:2;14910:18;;;14903:30;-1:-1:-1;;;14949:18:199;;;14942:46;15005:18;;2422:60:187;14689:340:199;2422:60:187;2505:17;;;;;2495:28;;;;;;;2534:7;;;;;2495:28;;1792:754;-1:-1:-1;;;;;1792:754:187:o;1656:132::-;1735:12;1775:7;1764:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;1757:26;;1656:132;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;203:127:199:-;264:10;259:3;255:20;252:1;245:31;295:4;292:1;285:15;319:4;316:1;309:15;335:253;407:2;401:9;449:4;437:17;;484:18;469:34;;505:22;;;466:62;463:88;;;531:18;;:::i;:::-;567:2;560:22;335:253;:::o;593:257::-;665:4;659:11;;;697:17;;744:18;729:34;;765:22;;;726:62;723:88;;;791:18;;:::i;855:253::-;927:2;921:9;969:4;957:17;;1004:18;989:34;;1025:22;;;986:62;983:88;;;1051:18;;:::i;1113:255::-;1185:2;1179:9;1227:6;1215:19;;1264:18;1249:34;;1285:22;;;1246:62;1243:88;;;1311:18;;:::i;1373:275::-;1444:2;1438:9;1509:2;1490:13;;-1:-1:-1;;1486:27:199;1474:40;;1544:18;1529:34;;1565:22;;;1526:62;1523:88;;;1591:18;;:::i;:::-;1627:2;1620:22;1373:275;;-1:-1:-1;1373:275:199:o;1653:530::-;1695:5;1748:3;1741:4;1733:6;1729:17;1725:27;1715:55;;1766:1;1763;1756:12;1715:55;1802:6;1789:20;1828:18;1824:2;1821:26;1818:52;;;1850:18;;:::i;:::-;1894:55;1937:2;1918:13;;-1:-1:-1;;1914:27:199;1943:4;1910:38;1894:55;:::i;:::-;1974:2;1965:7;1958:19;2020:3;2013:4;2008:2;2000:6;1996:15;1992:26;1989:35;1986:55;;;2037:1;2034;2027:12;1986:55;2102:2;2095:4;2087:6;2083:17;2076:4;2067:7;2063:18;2050:55;2150:1;2125:16;;;2143:4;2121:27;2114:38;;;;2129:7;1653:530;-1:-1:-1;;;1653:530:199:o;2188:320::-;2256:6;2309:2;2297:9;2288:7;2284:23;2280:32;2277:52;;;2325:1;2322;2315:12;2277:52;2365:9;2352:23;2398:18;2390:6;2387:30;2384:50;;;2430:1;2427;2420:12;2384:50;2453:49;2494:7;2485:6;2474:9;2470:22;2453:49;:::i;:::-;2443:59;2188:320;-1:-1:-1;;;;2188:320:199:o;2834:661::-;3055:13;;3070:4;3051:24;3033:43;;3123:4;3111:17;;;3105:24;-1:-1:-1;;;;;3205:21:199;;;3183:20;;;3176:51;3283:4;3271:17;;;3265:24;3243:20;;;3236:54;3350:4;3338:17;;;3332:24;3328:33;;;3306:20;;;3299:63;3411:4;3399:17;;;3393:24;2586:12;;3468:20;;;2574:25;2637:16;;;2631:23;3156:3;2615:14;;2608:47;2693:16;;2687:23;2671:14;;;2664:47;2749:16;;2743:23;2727:14;;;2720:47;2805:16;;;2799:23;2783:14;;;2776:47;3020:3;3005:19;;2834:661::o;3500:114::-;3584:4;3577:5;3573:16;3566:5;3563:27;3553:55;;3604:1;3601;3594:12;3553:55;3500:114;:::o;3619:130::-;3685:20;;3714:29;3685:20;3714:29;:::i;:::-;3619:130;;;:::o;3754:131::-;-1:-1:-1;;;;;3829:31:199;;3819:42;;3809:70;;3875:1;3872;3865:12;3890:134;3958:20;;3987:31;3958:20;3987:31;:::i;4029:695::-;4096:5;4144:4;4132:9;4127:3;4123:19;4119:30;4116:50;;;4162:1;4159;4152:12;4116:50;4195:2;4189:9;4237:4;4229:6;4225:17;4308:6;4296:10;4293:22;4272:18;4260:10;4257:34;4254:62;4251:88;;;4319:18;;:::i;:::-;4355:2;4348:22;4388:6;-1:-1:-1;4388:6:199;4418:23;;4450:31;4418:23;4450:31;:::i;:::-;4490:23;;4574:2;4559:18;;;4546:32;4529:15;;;4522:57;4631:2;4616:18;;4603:32;4644:33;4603:32;4644:33;:::i;:::-;4705:2;4693:15;;;;4686:32;4029:695;;-1:-1:-1;;4029:695:199:o;4729:188::-;4794:4;4827:18;4819:6;4816:30;4813:56;;;4849:18;;:::i;:::-;-1:-1:-1;4894:1:199;4890:14;4906:4;4886:25;;4729:188::o;4922:479::-;4976:5;5024:4;5012:9;5007:3;5003:19;4999:30;4996:50;;;5042:1;5039;5032:12;4996:50;5064:22;;:::i;:::-;5055:31;;5122:9;5109:23;5102:5;5095:38;5193:2;5182:9;5178:18;5165:32;5160:2;5153:5;5149:14;5142:56;5258:2;5247:9;5243:18;5230:32;5225:2;5218:5;5214:14;5207:56;5323:2;5312:9;5308:18;5295:32;5290:2;5283:5;5279:14;5272:56;5389:3;5378:9;5374:19;5361:33;5355:3;5348:5;5344:15;5337:58;4922:479;;;;:::o;5406:165::-;5473:20;;5533:12;5522:24;;5512:35;;5502:63;;5561:1;5558;5551:12;5576:731;5628:5;5676:4;5664:9;5659:3;5655:19;5651:30;5648:50;;;5694:1;5691;5684:12;5648:50;5727:2;5721:9;5769:4;5761:6;5757:17;5840:6;5828:10;5825:22;5804:18;5792:10;5789:34;5786:62;5783:88;;;5851:18;;:::i;:::-;5887:2;5880:22;5920:6;-1:-1:-1;5920:6:199;5950:23;;6017:24;6004:38;;5992:51;;5982:79;;6057:1;6054;6047:12;5982:79;6070:23;;6126:37;6159:2;6144:18;;6126:37;:::i;:::-;6121:2;6113:6;6109:15;6102:62;6197:37;6230:2;6219:9;6215:18;6197:37;:::i;:::-;6192:2;6184:6;6180:15;6173:62;6296:2;6285:9;6281:18;6268:32;6263:2;6255:6;6251:15;6244:57;;5576:731;;;;:::o;6312:1932::-;6371:5;6424:3;6417:4;6409:6;6405:17;6401:27;6391:55;;6442:1;6439;6432:12;6391:55;6478:6;6465:20;6504:4;6528:65;6544:48;6589:2;6544:48;:::i;:::-;6528:65;:::i;:::-;6627:15;;;6689:6;6734:11;;;6722:24;;6718:33;;;6658:12;;;;6615:3;6763:15;;;6760:35;;;6791:1;6788;6781:12;6760:35;6827:2;6819:6;6815:15;6839:1376;6855:6;6850:3;6847:15;6839:1376;;;6928:3;6923;6919:13;6956:2;6952;6948:11;6945:101;;;7000:1;7029:2;7025;7018:14;6945:101;7072:22;;:::i;:::-;7117:6;7147:2;7143;7139:11;7136:101;;;7191:1;7220:2;7216;7209:14;7136:101;7265:22;;:::i;:::-;7250:37;;7328:3;7315:17;7345:31;7368:7;7345:31;:::i;:::-;7389:24;;7454:12;;;7441:26;7480:33;7441:26;7480:33;:::i;:::-;7533:16;;;7526:33;7582:4;7627:12;;;7614:26;7653:33;7614:26;7653:33;:::i;:::-;7706:16;;;7699:33;7755:2;7808:12;;;7795:26;7777:16;;;7770:52;7846:3;7901:13;;;7888:27;7869:17;;;7862:54;7940:3;7982:45;8023:3;8008:13;;;7982:45;:::i;:::-;7963:17;;;7956:72;8041:22;;;8099:42;8137:3;8123:12;;;8099:42;:::i;:::-;8083:14;;;8076:66;-1:-1:-1;8155:18:199;;-1:-1:-1;8193:12:199;;;;6872;;6839:1376;;;-1:-1:-1;8233:5:199;;6312:1932;-1:-1:-1;;;;;;;6312:1932:199:o;8249:968::-;8306:5;8354:4;8342:9;8337:3;8333:19;8329:30;8326:50;;;8372:1;8369;8362:12;8326:50;8394:22;;:::i;:::-;8385:31;;8452:9;8439:23;8432:5;8425:38;8482:2;8535;8524:9;8520:18;8507:32;8562:18;8554:6;8551:30;8548:50;;;8594:1;8591;8584:12;8548:50;8617:22;;8670:4;8662:13;;8658:23;-1:-1:-1;8648:51:199;;8695:1;8692;8685:12;8648:51;8731:2;8718:16;8754:65;8770:48;8815:2;8770:48;:::i;8754:65::-;8853:15;;;8935:1;8931:10;;;;8923:19;;8919:28;;;8884:12;;;;8959:15;;;8956:35;;;8987:1;8984;8977:12;8956:35;9011:11;;;;9031:142;9047:6;9042:3;9039:15;9031:142;;;9113:17;;9101:30;;9064:12;;;;9151;;;;9031:142;;;9205:5;9200:2;9193:5;9189:14;9182:29;;;;;;8249:968;;;;:::o;9222:1558::-;9341:6;9349;9357;9365;9418:3;9406:9;9397:7;9393:23;9389:33;9386:53;;;9435:1;9432;9425:12;9386:53;9475:9;9462:23;9504:18;9545:2;9537:6;9534:14;9531:34;;;9561:1;9558;9551:12;9531:34;9584:22;;;;9640:6;9622:16;;;9618:29;9615:49;;;9660:1;9657;9650:12;9615:49;9686:22;;:::i;:::-;9731:51;9774:7;9770:2;9731:51;:::i;:::-;9724:5;9717:66;9829:2;9825;9821:11;9808:25;9858:2;9848:8;9845:16;9842:36;;;9874:1;9871;9864:12;9842:36;9912:61;9965:7;9954:8;9950:2;9946:17;9912:61;:::i;:::-;9905:4;9898:5;9894:16;9887:87;;10020:3;10016:2;10012:12;9999:26;10050:2;10040:8;10037:16;10034:36;;;10066:1;10063;10056:12;10034:36;10104:44;10140:7;10129:8;10125:2;10121:17;10104:44;:::i;:::-;10097:4;10090:5;10086:16;10079:70;;10195:3;10191:2;10187:12;10174:26;10225:2;10215:8;10212:16;10209:36;;;10241:1;10238;10231:12;10209:36;10277:56;10325:7;10314:8;10310:2;10306:17;10277:56;:::i;:::-;10272:2;10265:5;10261:14;10254:80;;10388:3;10384:2;10380:12;10367:26;10361:3;10354:5;10350:15;10343:51;10427:30;10452:3;10448:2;10444:12;10427:30;:::i;:::-;10421:3;10410:15;;10403:55;10512:6;10504:15;;10491:29;10485:3;10474:15;;10467:54;10575:3;10567:12;;;10554:26;10548:3;10537:15;;10530:51;-1:-1:-1;10414:5:199;-1:-1:-1;10624:40:199;10658:4;10643:20;;10624:40;:::i;:::-;10614:50;;10683:40;10717:4;10706:9;10702:20;10683:40;:::i;:::-;9222:1558;;;;-1:-1:-1;10673:50:199;;10770:2;10755:18;10742:32;;-1:-1:-1;;9222:1558:199:o;10785:320::-;11012:25;;;10999:3;10984:19;;11046:53;11095:2;11080:18;;11072:6;2592:5;2586:12;2581:3;2574:25;2648:4;2641:5;2637:16;2631:23;2624:4;2619:3;2615:14;2608:47;2704:4;2697:5;2693:16;2687:23;2680:4;2675:3;2671:14;2664:47;2760:4;2753:5;2749:16;2743:23;2736:4;2731:3;2727:14;2720:47;2816:4;2809:5;2805:16;2799:23;2792:4;2787:3;2783:14;2776:47;;;2513:316;11046:53;10785:320;;;;;:::o;11110:781::-;11195:6;11248:3;11236:9;11227:7;11223:23;11219:33;11216:53;;;11265:1;11262;11255:12;11216:53;11291:22;;:::i;:::-;11350:9;11337:23;11369:31;11392:7;11369:31;:::i;:::-;11409:22;;11483:2;11468:18;;11455:32;11496:33;11455:32;11496:33;:::i;:::-;11556:2;11545:14;;11538:31;11629:2;11614:18;;;11601:32;11585:14;;;11578:56;11686:2;11671:18;;11658:32;11699:33;11658:32;11699:33;:::i;:::-;11759:2;11748:14;;11741:31;11805:55;11852:7;11846:3;11831:19;;11805:55;:::i;:::-;11799:3;11788:15;;11781:80;11792:5;11110:781;-1:-1:-1;;;11110:781:199:o;11896:546::-;12006:4;12035:2;12064;12053:9;12046:21;12096:6;12090:13;12139:6;12134:2;12123:9;12119:18;12112:34;12164:1;12174:140;12188:6;12185:1;12182:13;12174:140;;;12283:14;;;12279:23;;12273:30;12249:17;;;12268:2;12245:26;12238:66;12203:10;;12174:140;;;12178:3;12363:1;12358:2;12349:6;12338:9;12334:22;12330:31;12323:42;12433:2;12426;12422:7;12417:2;12409:6;12405:15;12401:29;12390:9;12386:45;12382:54;12374:62;;;;11896:546;;;;:::o;12447:1138::-;12543:6;12587:9;12578:7;12574:23;12617:3;12613:2;12609:12;12606:32;;;12634:1;12631;12624:12;12606:32;12660:22;;:::i;:::-;12712:9;12706:16;12731:31;12754:7;12731:31;:::i;:::-;12771:22;;12838:2;12823:18;;12817:25;12851:33;12817:25;12851:33;:::i;:::-;12911:2;12900:14;;12893:31;12977:2;12962:18;;;12956:25;12940:14;;;12933:49;13027:2;13012:18;;13006:25;13040:33;13006:25;13040:33;:::i;:::-;13100:2;13089:14;;13082:31;13148:4;-1:-1:-1;;13129:17:199;;13125:28;13122:48;;;13166:1;13163;13156:12;13122:48;13194:22;;:::i;:::-;13262:3;13247:19;;;13241:26;13225:43;;13323:4;13308:20;;13302:27;13297:2;13284:16;;13277:53;13385:3;13370:19;;13364:26;13359:2;13346:16;;13339:52;13446:3;13431:19;;13425:26;13420:2;13407:16;;13400:52;13508:3;13493:19;;;13487:26;13468:17;;;13461:53;13530:15;;;13523:32;;;;-1:-1:-1;13534:5:199;;12447:1138;-1:-1:-1;;12447:1138:199:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "VERSION_TYPE()": "38fc401c",
    "assembleLeaf((uint8,address,uint256,address,(uint256,uint256,uint256,uint256,uint256)))": "8ccc5abc",
    "getLeafDetails(bytes)": "43fea054",
    "validateAndParse(((uint8,uint256,address),((uint8,address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint88,uint40,uint40,uint256))[],bytes,(bytes32,bytes32[]),uint256,uint8,bytes32,bytes32),address,address,uint256)": "8ba47309"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"VERSION_TYPE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPotentialDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationInitialAsk\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Details\",\"name\":\"lien\",\"type\":\"tuple\"}],\"internalType\":\"struct IUniqueValidator.Details\",\"name\":\"details\",\"type\":\"tuple\"}],\"name\":\"assembleLeaf\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"nlrDetails\",\"type\":\"bytes\"}],\"name\":\"getLeafDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPotentialDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationInitialAsk\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Details\",\"name\":\"lien\",\"type\":\"tuple\"}],\"internalType\":\"struct IUniqueValidator.Details\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"internalType\":\"struct IAstariaRouter.StrategyDetailsParam\",\"name\":\"strategy\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"collateralType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"strategyRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPotentialDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationInitialAsk\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Details\",\"name\":\"details\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Lien\",\"name\":\"lien\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint88\",\"name\":\"amount\",\"type\":\"uint88\"},{\"internalType\":\"uint40\",\"name\":\"last\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"},{\"internalType\":\"uint256\",\"name\":\"lienId\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Point\",\"name\":\"point\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Stack[]\",\"name\":\"stack\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"nlrDetails\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IAstariaRouter.MerkleData\",\"name\":\"merkle\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IAstariaRouter.NewLienRequest\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralTokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateralTokenId\",\"type\":\"uint256\"}],\"name\":\"validateAndParse\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"leaf\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPotentialDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationInitialAsk\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Details\",\"name\":\"ld\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/strategies/UniqueValidator.sol\":\"UniqueValidator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@rari-capital/solmate/=lib/seaport/lib/solmate/\",\":auction/=lib/gpl/lib/auction-house/src/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":contracts/=lib/seaport/contracts/\",\":core/=src/\",\":ds-test/=lib/ds-test/src/\",\":eip4626/=lib/foundry_eip-4626/src/\",\":forge-std/=lib/forge-std/src/\",\":gpl/=lib/gpl/src/\",\":murky/=lib/seaport/lib/murky/src/\",\":openzeppelin-contracts/=lib/seaport/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/gpl/lib/openzeppelin-contracts/contracts/\",\":seaport/=lib/seaport/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/clones-with-immutable-args/src/Clone.sol\":{\"keccak256\":\"0x958f183649832a994119e7484fea15a6b7b91c7e7b1ae4f3736104cd89ae7545\",\"license\":\"BSD\",\"urls\":[\"bzz-raw://2b4bbb61023cf315287406fee6086d2c6c5b85d6b1a141a8ee10295b663712bb\",\"dweb:/ipfs/QmaJP5pKF2WoBWsMCrAZssHhDZXvpufaWmg8oYfVgWMAHq\"]},\"lib/gpl/src/interfaces/IERC4626RouterBase.sol\":{\"keccak256\":\"0x6f7c86753bfe824117a9008e512b21c64a6d137fe6f27eeeac7e56f662fb315b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e7d41e37c21829a77e82bdeaf9eb2c541b63d415a932e29b42ee3da5c6c4faab\",\"dweb:/ipfs/Qmbq3zDAPWhMQgLvDEx6GLHqb3FPq2MPcJwin7UZ3EZmR1\"]},\"lib/seaport/contracts/interfaces/AmountDerivationErrors.sol\":{\"keccak256\":\"0xd7296f4958294009bd696a8034ed5b1c6562f753f3767869e83c20a9203e21e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34adcf58fdcd88234ab19f671b34007cc8badac09e08d20874bfa9a0cf2334c\",\"dweb:/ipfs/QmZDkz5Enfzxr8oM31wYWYRaYtfJXRhCjMT6AHqfoyAz8C\"]},\"lib/seaport/contracts/interfaces/ConduitControllerInterface.sol\":{\"keccak256\":\"0xb124e40645efdf5d92b48fd54eaeb0ba1d05fde62bf51e7684c1bc3bf5343388\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://757b4b1edb39b78b94debeb877e68036c1181a5d20d0f299c497cecc903f147d\",\"dweb:/ipfs/QmeXsKmxsMXCxGTtcRAnyuRhtkQF4V4cfXukRYSpFwFoaF\"]},\"lib/seaport/contracts/interfaces/ConsiderationInterface.sol\":{\"keccak256\":\"0xe32b9e62b72fc6f5fa63615ebb55315d3380438955a68b41e5ef600192f72318\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d50227c809d935f07f688a080d176d7d27ee889babf72c8d04651a6001ab8be\",\"dweb:/ipfs/QmQXbe4sMgT4jxHuVcXHqTbmCDTSVSWFnvF96dUb4GcqCK\"]},\"lib/seaport/contracts/lib/AmountDeriver.sol\":{\"keccak256\":\"0x09ffa18201a01c0462c80073bfc7be84819c510560e8b60e26e254043c37c23a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4166f42b5c9135304b06c906b8ccca51a34ac2bbfbbc8b3905f2ccaf1f620699\",\"dweb:/ipfs/QmXUaraYSzBjJggsDbfM5DpGVTSyhovS7Cd1MvuYXRGuux\"]},\"lib/seaport/contracts/lib/ConsiderationConstants.sol\":{\"keccak256\":\"0x848fdf7cbbc4b4aa6fffdb45edd07ca91fe1ddd6592a90482a26cd49daa6ff74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a407e28fcb18999a57032fb719c4e649cda74a34c9a7a5600ce738316ac56b7\",\"dweb:/ipfs/QmZ26ahXcFn8J2ws6WLbzcMQYP8SHDzLiqFQ5uXMvHmKek\"]},\"lib/seaport/contracts/lib/ConsiderationEnums.sol\":{\"keccak256\":\"0x6b56e9359b63d216790ef3141a462c2a3f2e6948f6b73dee1f493953ffe5478e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58e4ab31ad102f497270d9cf3bf22b0c058846968233528ede623a97d2b0ce21\",\"dweb:/ipfs/QmUvmZDtspEtiPjqdiMx9jDXWcaY8hLttZnga4YMZ5ve4J\"]},\"lib/seaport/contracts/lib/ConsiderationStructs.sol\":{\"keccak256\":\"0x1cf7b9e7d034197a5af36536ff8b8fea6041e8c66c1928e6d6d5e411c465b234\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://369e5901a714935a54f68c1abd1f96e901d95b51a05897cfcf2eb9e28ef57896\",\"dweb:/ipfs/QmNM5XGK419cC2xn23qgB68gbR7qqbif44QBFwKax2SBpM\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/tokens/ERC721.sol\":{\"keccak256\":\"0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403\",\"dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK\"]},\"lib/solmate/src/tokens/WETH.sol\":{\"keccak256\":\"0x343cf5f6b643864c5728fa9bf057c5708052402b22c5662decce94f5febff514\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://dc3722cf992cc13ff0728660432092d8ae6851f500b24c0aa474c45f2e8c3f2d\",\"dweb:/ipfs/QmVq7veVaBKKdm4AKQiuCXMPGHPuCcPksm7LNuA2ihpN9U\"]},\"lib/solmate/src/utils/Bytes32AddressLib.sol\":{\"keccak256\":\"0xe709c9f2c6fb8bfe1158fa31967c0a2109844c52079fe4e327baec82fb87acb6\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9633ab7c471e653dfb37c78b6475db47924c9ee731118545b5bc28aad97f2434\",\"dweb:/ipfs/Qmbt9gLb3hrs21nQxwSiG1ciE56Y73LLt1iPDfnmkcz27E\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41\",\"dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L\"]},\"src/ClearingHouse.sol\":{\"keccak256\":\"0x54be1aa0a45ead27f58d0d638f38c6e3c0fcb318333e81c973c30fbadc565427\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e23ca02427a4458e6534f314882be7395f63e2bbe89edc1204a3921775d5a7d5\",\"dweb:/ipfs/QmS2o7yTKWfv2qxGxjurQUhawac7voQ7CJ5K3uvsn4ozYS\"]},\"src/interfaces/IAstariaRouter.sol\":{\"keccak256\":\"0x4da64031c3b687916f1b488960e2cfb586e9fcdd7e3447b77e35d416d63d2b47\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://983e9fac5607387504e40319c5b9d6cf9fb3b20b89af1b4ff940b9760bdd4be3\",\"dweb:/ipfs/QmYZGEEAwRw9Jc4U7hpTWajRAAcnc5hYFnjvnApcsC3Kiy\"]},\"src/interfaces/IBeacon.sol\":{\"keccak256\":\"0x60542a4b2250ecf9e980f8a8a87903cb66f4a93185426ca445545af977a5bef6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://924d9a07203f64c67b418e5f81deab3fa647113b25b685bf6ef3d361eaf70722\",\"dweb:/ipfs/QmanmpmD9MsczFJdB24jkYFCycrZKZtdFBKXPEssRYQARA\"]},\"src/interfaces/ICollateralToken.sol\":{\"keccak256\":\"0x66b5389be5fabcad2155208eff28578f12edd21d0c5c105b06e0ff77191f3f68\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1b5a73440fa94aee669a279368c8da86989e0060afdf0972f3fc7ca02a6d950d\",\"dweb:/ipfs/QmY5GAho5ZkX1EpiCmz7urxNNCMgPZ6axG6aMC5az47B9c\"]},\"src/interfaces/IERC1155.sol\":{\"keccak256\":\"0x89e4758c3753584b1c79105475e438d304339d78155cb6a19c83337710816e75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61e1f1c992ebeb519d0d8bc222fb56a289ae86cf5cfeb1c0c2176a4b86334821\",\"dweb:/ipfs/QmRXdTgVGob85CaUpQvAQMefLkSpL13Z3xroS1dVTnwTrH\"]},\"src/interfaces/IERC165.sol\":{\"keccak256\":\"0x651fde20fe0c48a0d6f66e6a1dbf9796a431bb41691874ac526e46498243694b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://252b4f3c1150c8338cc9c0e76a54aed0901dff6f795a5e90ce3d05bde30eca44\",\"dweb:/ipfs/QmZgHPxjgSgFfCoX7uLP2yHzwh6nR5ieWfmAJPQaB8j2EW\"]},\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0x1c9080caa0261f88d06071b0e71d35b82599697d36635e40957696b5e4e9f9a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://324101da8a5f46a121ccd78b328deea5669b9f46928659295a1ce1f384795607\",\"dweb:/ipfs/QmaX3c9PrMK99rsV9W74ERABgU3GpRYSFq1fYed1pU2U76\"]},\"src/interfaces/IERC20Metadata.sol\":{\"keccak256\":\"0xf85faa19ef3e47c41d37b8d05d16e3d505cf48c463bcfbd2deddb8e270a53f13\",\"urls\":[\"bzz-raw://f8ea588e4f44d6a05745992905ede61f12a830d7044a73d5fa9f9915d4116961\",\"dweb:/ipfs/QmWHVqEStcMGiCDjgwYRfrHQnfqLwBxCSgMPnE8GeYGEPq\"]},\"src/interfaces/IERC4626.sol\":{\"keccak256\":\"0xec9f0eb1356b603d2563b64f90082118fdb0a9ae960e41fe6127cc8ca9d5021c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfb98dad6b7f98b23315a0322d34a9cbb6966133cfcbe937fce4f5c659a7e48d\",\"dweb:/ipfs/QmXrt8E11QnR1Ygrg7znL64gB2btcAbrafbyPHLGn7k9yC\"]},\"src/interfaces/IERC721.sol\":{\"keccak256\":\"0x587f5c9003c06c069931f6f535e3fb421898cd83083c92af7e81414f29041627\",\"urls\":[\"bzz-raw://30b18d4ec5d36004ea05164666fb1902c59c0574962a3e846ebfec0c98772a96\",\"dweb:/ipfs/QmZS3o4GGvmJjnervZMPq7VRXEjtrMo4KTk2Hfku8TjrFX\"]},\"src/interfaces/IERC721Receiver.sol\":{\"keccak256\":\"0xa62494f6023849683f26fc0a19c703719cbfb31778984d90bcdcc35e34d135a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2d8bd4190bab30ec06a27c8e7b60e87047ec4160cb644ba6439128317bdb56e\",\"dweb:/ipfs/QmS1evua87uLAzDpaZcoKEnAQcAm22gRmYfQEavAfgTWbh\"]},\"src/interfaces/IFlashAction.sol\":{\"keccak256\":\"0xeacfd67f36fc859683297a9ad81b6201ecdcd5820d13b3f6f8f765b0f7f089fd\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f479a0cf791c99a46e036b47ac186d66c82ae779ec87a15c48fe2e6463855539\",\"dweb:/ipfs/QmctNHmesNAArGgqy9XbJAvQ5b1Sxuc6xu2DJJBPRkf2Bp\"]},\"src/interfaces/ILienToken.sol\":{\"keccak256\":\"0x901ce3558a4b9d8aa5371277e0a10f460ee8825c4615bc4646b89037fee4641b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ed52de1d44666b6da962b51c7c7fc7bec09b8ed514b15ad7b4a57cbabaa07c0d\",\"dweb:/ipfs/QmT4tnuqeAEcpapM7LN4GgDAGeX8TuWn5FfZC7gLZu4dwC\"]},\"src/interfaces/IStrategyValidator.sol\":{\"keccak256\":\"0xe7441253272bb6f73ef5e1acfbea3ac0af04583a795be6d293e8027770e06f9c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c9b6ae6dd345f9d1c777322cca751d0fdfba38684036ff99199317140a543598\",\"dweb:/ipfs/QmenrzX26uJKUiQdKkJ62oM5R81nBXEnD9VsqaY7BX9cq8\"]},\"src/interfaces/ITransferProxy.sol\":{\"keccak256\":\"0xf9ed41cdf923fad284f27675ade24260124598394732ed2cbc35d41673dfa41b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://88e0e387a685254c09605859f4127639cd5cc6f253270cea538241cb830cf003\",\"dweb:/ipfs/QmdvhzgxwbHWA5ozAU37QfXPHZxuv6yvtf9B1CqdLcS6o9\"]},\"src/strategies/UniqueValidator.sol\":{\"keccak256\":\"0xd2ca5a419b2c2c671961db8b0d375b0903e60591f971485fed20faf37dbf01d9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2319572a4c308755ac560175b604747ff49256033b2944d5eaacf70441ee84e7\",\"dweb:/ipfs/QmYUhULGsfpKXws9uZpdLmW8xhanHsBp4g4CZ2xfiMDyy3\"]},\"src/utils/Pausable.sol\":{\"keccak256\":\"0x1eac95a60676b3c8bc3f1a03b5e9fd3e64e1bdfe32776971453d64998b05a983\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4f6f4a0b1d2bce898bf40195514a581b47b5f16a96025ec8eac75850563f726\",\"dweb:/ipfs/QmZoL2mSw2uoRic2AfXZ8utFxUHkmyChdrJnJj3RrjYNfT\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "VERSION_TYPE",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IUniqueValidator.Details",
              "name": "details",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint8",
                  "name": "version",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "struct ILienToken.Details",
                  "name": "lien",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "maxAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "rate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxPotentialDebt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidationInitialAsk",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "assembleLeaf",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "nlrDetails",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getLeafDetails",
          "outputs": [
            {
              "internalType": "struct IUniqueValidator.Details",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint8",
                  "name": "version",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "struct ILienToken.Details",
                  "name": "lien",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "maxAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "rate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxPotentialDebt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidationInitialAsk",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IAstariaRouter.NewLienRequest",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IAstariaRouter.StrategyDetailsParam",
                  "name": "strategy",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "version",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct ILienToken.Stack[]",
                  "name": "stack",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct ILienToken.Lien",
                      "name": "lien",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint8",
                          "name": "collateralType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "vault",
                          "type": "address"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "strategyRoot",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "collateralId",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct ILienToken.Details",
                          "name": "details",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "maxAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rate",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "duration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "maxPotentialDebt",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "liquidationInitialAsk",
                              "type": "uint256"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "struct ILienToken.Point",
                      "name": "point",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint88",
                          "name": "amount",
                          "type": "uint88"
                        },
                        {
                          "internalType": "uint40",
                          "name": "last",
                          "type": "uint40"
                        },
                        {
                          "internalType": "uint40",
                          "name": "end",
                          "type": "uint40"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lienId",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "nlrDetails",
                  "type": "bytes"
                },
                {
                  "internalType": "struct IAstariaRouter.MerkleData",
                  "name": "merkle",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "root",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collateralTokenContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "collateralTokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "validateAndParse",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "leaf",
              "type": "bytes32"
            },
            {
              "internalType": "struct ILienToken.Details",
              "name": "ld",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "maxAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPotentialDebt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidationInitialAsk",
                  "type": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@rari-capital/solmate/=lib/seaport/lib/solmate/",
        ":auction/=lib/gpl/lib/auction-house/src/",
        ":clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        ":contracts/=lib/seaport/contracts/",
        ":core/=src/",
        ":ds-test/=lib/ds-test/src/",
        ":eip4626/=lib/foundry_eip-4626/src/",
        ":forge-std/=lib/forge-std/src/",
        ":gpl/=lib/gpl/src/",
        ":murky/=lib/seaport/lib/murky/src/",
        ":openzeppelin-contracts/=lib/seaport/lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/gpl/lib/openzeppelin-contracts/contracts/",
        ":seaport/=lib/seaport/contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/strategies/UniqueValidator.sol": "UniqueValidator"
      },
      "libraries": {}
    },
    "sources": {
      "lib/clones-with-immutable-args/src/Clone.sol": {
        "keccak256": "0x958f183649832a994119e7484fea15a6b7b91c7e7b1ae4f3736104cd89ae7545",
        "urls": [
          "bzz-raw://2b4bbb61023cf315287406fee6086d2c6c5b85d6b1a141a8ee10295b663712bb",
          "dweb:/ipfs/QmaJP5pKF2WoBWsMCrAZssHhDZXvpufaWmg8oYfVgWMAHq"
        ],
        "license": "BSD"
      },
      "lib/gpl/src/interfaces/IERC4626RouterBase.sol": {
        "keccak256": "0x6f7c86753bfe824117a9008e512b21c64a6d137fe6f27eeeac7e56f662fb315b",
        "urls": [
          "bzz-raw://e7d41e37c21829a77e82bdeaf9eb2c541b63d415a932e29b42ee3da5c6c4faab",
          "dweb:/ipfs/Qmbq3zDAPWhMQgLvDEx6GLHqb3FPq2MPcJwin7UZ3EZmR1"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/seaport/contracts/interfaces/AmountDerivationErrors.sol": {
        "keccak256": "0xd7296f4958294009bd696a8034ed5b1c6562f753f3767869e83c20a9203e21e0",
        "urls": [
          "bzz-raw://b34adcf58fdcd88234ab19f671b34007cc8badac09e08d20874bfa9a0cf2334c",
          "dweb:/ipfs/QmZDkz5Enfzxr8oM31wYWYRaYtfJXRhCjMT6AHqfoyAz8C"
        ],
        "license": "MIT"
      },
      "lib/seaport/contracts/interfaces/ConduitControllerInterface.sol": {
        "keccak256": "0xb124e40645efdf5d92b48fd54eaeb0ba1d05fde62bf51e7684c1bc3bf5343388",
        "urls": [
          "bzz-raw://757b4b1edb39b78b94debeb877e68036c1181a5d20d0f299c497cecc903f147d",
          "dweb:/ipfs/QmeXsKmxsMXCxGTtcRAnyuRhtkQF4V4cfXukRYSpFwFoaF"
        ],
        "license": "MIT"
      },
      "lib/seaport/contracts/interfaces/ConsiderationInterface.sol": {
        "keccak256": "0xe32b9e62b72fc6f5fa63615ebb55315d3380438955a68b41e5ef600192f72318",
        "urls": [
          "bzz-raw://1d50227c809d935f07f688a080d176d7d27ee889babf72c8d04651a6001ab8be",
          "dweb:/ipfs/QmQXbe4sMgT4jxHuVcXHqTbmCDTSVSWFnvF96dUb4GcqCK"
        ],
        "license": "MIT"
      },
      "lib/seaport/contracts/lib/AmountDeriver.sol": {
        "keccak256": "0x09ffa18201a01c0462c80073bfc7be84819c510560e8b60e26e254043c37c23a",
        "urls": [
          "bzz-raw://4166f42b5c9135304b06c906b8ccca51a34ac2bbfbbc8b3905f2ccaf1f620699",
          "dweb:/ipfs/QmXUaraYSzBjJggsDbfM5DpGVTSyhovS7Cd1MvuYXRGuux"
        ],
        "license": "MIT"
      },
      "lib/seaport/contracts/lib/ConsiderationConstants.sol": {
        "keccak256": "0x848fdf7cbbc4b4aa6fffdb45edd07ca91fe1ddd6592a90482a26cd49daa6ff74",
        "urls": [
          "bzz-raw://3a407e28fcb18999a57032fb719c4e649cda74a34c9a7a5600ce738316ac56b7",
          "dweb:/ipfs/QmZ26ahXcFn8J2ws6WLbzcMQYP8SHDzLiqFQ5uXMvHmKek"
        ],
        "license": "MIT"
      },
      "lib/seaport/contracts/lib/ConsiderationEnums.sol": {
        "keccak256": "0x6b56e9359b63d216790ef3141a462c2a3f2e6948f6b73dee1f493953ffe5478e",
        "urls": [
          "bzz-raw://58e4ab31ad102f497270d9cf3bf22b0c058846968233528ede623a97d2b0ce21",
          "dweb:/ipfs/QmUvmZDtspEtiPjqdiMx9jDXWcaY8hLttZnga4YMZ5ve4J"
        ],
        "license": "MIT"
      },
      "lib/seaport/contracts/lib/ConsiderationStructs.sol": {
        "keccak256": "0x1cf7b9e7d034197a5af36536ff8b8fea6041e8c66c1928e6d6d5e411c465b234",
        "urls": [
          "bzz-raw://369e5901a714935a54f68c1abd1f96e901d95b51a05897cfcf2eb9e28ef57896",
          "dweb:/ipfs/QmNM5XGK419cC2xn23qgB68gbR7qqbif44QBFwKax2SBpM"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC721.sol": {
        "keccak256": "0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d",
        "urls": [
          "bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403",
          "dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/WETH.sol": {
        "keccak256": "0x343cf5f6b643864c5728fa9bf057c5708052402b22c5662decce94f5febff514",
        "urls": [
          "bzz-raw://dc3722cf992cc13ff0728660432092d8ae6851f500b24c0aa474c45f2e8c3f2d",
          "dweb:/ipfs/QmVq7veVaBKKdm4AKQiuCXMPGHPuCcPksm7LNuA2ihpN9U"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/Bytes32AddressLib.sol": {
        "keccak256": "0xe709c9f2c6fb8bfe1158fa31967c0a2109844c52079fe4e327baec82fb87acb6",
        "urls": [
          "bzz-raw://9633ab7c471e653dfb37c78b6475db47924c9ee731118545b5bc28aad97f2434",
          "dweb:/ipfs/Qmbt9gLb3hrs21nQxwSiG1ciE56Y73LLt1iPDfnmkcz27E"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300",
        "urls": [
          "bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41",
          "dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/ClearingHouse.sol": {
        "keccak256": "0x54be1aa0a45ead27f58d0d638f38c6e3c0fcb318333e81c973c30fbadc565427",
        "urls": [
          "bzz-raw://e23ca02427a4458e6534f314882be7395f63e2bbe89edc1204a3921775d5a7d5",
          "dweb:/ipfs/QmS2o7yTKWfv2qxGxjurQUhawac7voQ7CJ5K3uvsn4ozYS"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IAstariaRouter.sol": {
        "keccak256": "0x4da64031c3b687916f1b488960e2cfb586e9fcdd7e3447b77e35d416d63d2b47",
        "urls": [
          "bzz-raw://983e9fac5607387504e40319c5b9d6cf9fb3b20b89af1b4ff940b9760bdd4be3",
          "dweb:/ipfs/QmYZGEEAwRw9Jc4U7hpTWajRAAcnc5hYFnjvnApcsC3Kiy"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IBeacon.sol": {
        "keccak256": "0x60542a4b2250ecf9e980f8a8a87903cb66f4a93185426ca445545af977a5bef6",
        "urls": [
          "bzz-raw://924d9a07203f64c67b418e5f81deab3fa647113b25b685bf6ef3d361eaf70722",
          "dweb:/ipfs/QmanmpmD9MsczFJdB24jkYFCycrZKZtdFBKXPEssRYQARA"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/ICollateralToken.sol": {
        "keccak256": "0x66b5389be5fabcad2155208eff28578f12edd21d0c5c105b06e0ff77191f3f68",
        "urls": [
          "bzz-raw://1b5a73440fa94aee669a279368c8da86989e0060afdf0972f3fc7ca02a6d950d",
          "dweb:/ipfs/QmY5GAho5ZkX1EpiCmz7urxNNCMgPZ6axG6aMC5az47B9c"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IERC1155.sol": {
        "keccak256": "0x89e4758c3753584b1c79105475e438d304339d78155cb6a19c83337710816e75",
        "urls": [
          "bzz-raw://61e1f1c992ebeb519d0d8bc222fb56a289ae86cf5cfeb1c0c2176a4b86334821",
          "dweb:/ipfs/QmRXdTgVGob85CaUpQvAQMefLkSpL13Z3xroS1dVTnwTrH"
        ],
        "license": "MIT"
      },
      "src/interfaces/IERC165.sol": {
        "keccak256": "0x651fde20fe0c48a0d6f66e6a1dbf9796a431bb41691874ac526e46498243694b",
        "urls": [
          "bzz-raw://252b4f3c1150c8338cc9c0e76a54aed0901dff6f795a5e90ce3d05bde30eca44",
          "dweb:/ipfs/QmZgHPxjgSgFfCoX7uLP2yHzwh6nR5ieWfmAJPQaB8j2EW"
        ],
        "license": "MIT"
      },
      "src/interfaces/IERC20.sol": {
        "keccak256": "0x1c9080caa0261f88d06071b0e71d35b82599697d36635e40957696b5e4e9f9a8",
        "urls": [
          "bzz-raw://324101da8a5f46a121ccd78b328deea5669b9f46928659295a1ce1f384795607",
          "dweb:/ipfs/QmaX3c9PrMK99rsV9W74ERABgU3GpRYSFq1fYed1pU2U76"
        ],
        "license": "MIT"
      },
      "src/interfaces/IERC20Metadata.sol": {
        "keccak256": "0xf85faa19ef3e47c41d37b8d05d16e3d505cf48c463bcfbd2deddb8e270a53f13",
        "urls": [
          "bzz-raw://f8ea588e4f44d6a05745992905ede61f12a830d7044a73d5fa9f9915d4116961",
          "dweb:/ipfs/QmWHVqEStcMGiCDjgwYRfrHQnfqLwBxCSgMPnE8GeYGEPq"
        ],
        "license": null
      },
      "src/interfaces/IERC4626.sol": {
        "keccak256": "0xec9f0eb1356b603d2563b64f90082118fdb0a9ae960e41fe6127cc8ca9d5021c",
        "urls": [
          "bzz-raw://dfb98dad6b7f98b23315a0322d34a9cbb6966133cfcbe937fce4f5c659a7e48d",
          "dweb:/ipfs/QmXrt8E11QnR1Ygrg7znL64gB2btcAbrafbyPHLGn7k9yC"
        ],
        "license": "MIT"
      },
      "src/interfaces/IERC721.sol": {
        "keccak256": "0x587f5c9003c06c069931f6f535e3fb421898cd83083c92af7e81414f29041627",
        "urls": [
          "bzz-raw://30b18d4ec5d36004ea05164666fb1902c59c0574962a3e846ebfec0c98772a96",
          "dweb:/ipfs/QmZS3o4GGvmJjnervZMPq7VRXEjtrMo4KTk2Hfku8TjrFX"
        ],
        "license": null
      },
      "src/interfaces/IERC721Receiver.sol": {
        "keccak256": "0xa62494f6023849683f26fc0a19c703719cbfb31778984d90bcdcc35e34d135a4",
        "urls": [
          "bzz-raw://e2d8bd4190bab30ec06a27c8e7b60e87047ec4160cb644ba6439128317bdb56e",
          "dweb:/ipfs/QmS1evua87uLAzDpaZcoKEnAQcAm22gRmYfQEavAfgTWbh"
        ],
        "license": "MIT"
      },
      "src/interfaces/IFlashAction.sol": {
        "keccak256": "0xeacfd67f36fc859683297a9ad81b6201ecdcd5820d13b3f6f8f765b0f7f089fd",
        "urls": [
          "bzz-raw://f479a0cf791c99a46e036b47ac186d66c82ae779ec87a15c48fe2e6463855539",
          "dweb:/ipfs/QmctNHmesNAArGgqy9XbJAvQ5b1Sxuc6xu2DJJBPRkf2Bp"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/ILienToken.sol": {
        "keccak256": "0x901ce3558a4b9d8aa5371277e0a10f460ee8825c4615bc4646b89037fee4641b",
        "urls": [
          "bzz-raw://ed52de1d44666b6da962b51c7c7fc7bec09b8ed514b15ad7b4a57cbabaa07c0d",
          "dweb:/ipfs/QmT4tnuqeAEcpapM7LN4GgDAGeX8TuWn5FfZC7gLZu4dwC"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IStrategyValidator.sol": {
        "keccak256": "0xe7441253272bb6f73ef5e1acfbea3ac0af04583a795be6d293e8027770e06f9c",
        "urls": [
          "bzz-raw://c9b6ae6dd345f9d1c777322cca751d0fdfba38684036ff99199317140a543598",
          "dweb:/ipfs/QmenrzX26uJKUiQdKkJ62oM5R81nBXEnD9VsqaY7BX9cq8"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/ITransferProxy.sol": {
        "keccak256": "0xf9ed41cdf923fad284f27675ade24260124598394732ed2cbc35d41673dfa41b",
        "urls": [
          "bzz-raw://88e0e387a685254c09605859f4127639cd5cc6f253270cea538241cb830cf003",
          "dweb:/ipfs/QmdvhzgxwbHWA5ozAU37QfXPHZxuv6yvtf9B1CqdLcS6o9"
        ],
        "license": "BUSL-1.1"
      },
      "src/strategies/UniqueValidator.sol": {
        "keccak256": "0xd2ca5a419b2c2c671961db8b0d375b0903e60591f971485fed20faf37dbf01d9",
        "urls": [
          "bzz-raw://2319572a4c308755ac560175b604747ff49256033b2944d5eaacf70441ee84e7",
          "dweb:/ipfs/QmYUhULGsfpKXws9uZpdLmW8xhanHsBp4g4CZ2xfiMDyy3"
        ],
        "license": "BUSL-1.1"
      },
      "src/utils/Pausable.sol": {
        "keccak256": "0x1eac95a60676b3c8bc3f1a03b5e9fd3e64e1bdfe32776971453d64998b05a983",
        "urls": [
          "bzz-raw://d4f6f4a0b1d2bce898bf40195514a581b47b5f16a96025ec8eac75850563f726",
          "dweb:/ipfs/QmZoL2mSw2uoRic2AfXZ8utFxUHkmyChdrJnJj3RrjYNfT"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/strategies/UniqueValidator.sol",
    "id": 78242,
    "exportedSymbols": {
      "ERC721": [
        60924
      ],
      "IAstariaRouter": [
        74031
      ],
      "ILienToken": [
        75365
      ],
      "IStrategyValidator": [
        75613
      ],
      "IUniqueValidator": [
        78120
      ],
      "UniqueValidator": [
        78241
      ]
    },
    "nodeType": "SourceUnit",
    "src": "936:1613:187",
    "nodes": [
      {
        "id": 78097,
        "nodeType": "PragmaDirective",
        "src": "936:24:187",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 78099,
        "nodeType": "ImportDirective",
        "src": "962:49:187",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC721.sol",
        "file": "solmate/tokens/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78242,
        "sourceUnit": 60945,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78098,
              "name": "ERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 60924,
              "src": "970:6:187",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78101,
        "nodeType": "ImportDirective",
        "src": "1013:66:187",
        "nodes": [],
        "absolutePath": "src/interfaces/IAstariaRouter.sol",
        "file": "core/interfaces/IAstariaRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78242,
        "sourceUnit": 74032,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78100,
              "name": "IAstariaRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 74031,
              "src": "1021:14:187",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78103,
        "nodeType": "ImportDirective",
        "src": "1080:58:187",
        "nodes": [],
        "absolutePath": "src/interfaces/ILienToken.sol",
        "file": "core/interfaces/ILienToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78242,
        "sourceUnit": 75366,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78102,
              "name": "ILienToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 75365,
              "src": "1088:10:187",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78105,
        "nodeType": "ImportDirective",
        "src": "1139:74:187",
        "nodes": [],
        "absolutePath": "src/interfaces/IStrategyValidator.sol",
        "file": "core/interfaces/IStrategyValidator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78242,
        "sourceUnit": 75614,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78104,
              "name": "IStrategyValidator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 75613,
              "src": "1147:18:187",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78120,
        "nodeType": "ContractDefinition",
        "src": "1215:185:187",
        "nodes": [
          {
            "id": 78119,
            "nodeType": "StructDefinition",
            "src": "1268:130:187",
            "nodes": [],
            "canonicalName": "IUniqueValidator.Details",
            "members": [
              {
                "constant": false,
                "id": 78109,
                "mutability": "mutable",
                "name": "version",
                "nameLocation": "1295:7:187",
                "nodeType": "VariableDeclaration",
                "scope": 78119,
                "src": "1289:13:187",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 78108,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1289:5:187",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78111,
                "mutability": "mutable",
                "name": "token",
                "nameLocation": "1316:5:187",
                "nodeType": "VariableDeclaration",
                "scope": 78119,
                "src": "1308:13:187",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 78110,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1308:7:187",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78113,
                "mutability": "mutable",
                "name": "tokenId",
                "nameLocation": "1335:7:187",
                "nodeType": "VariableDeclaration",
                "scope": 78119,
                "src": "1327:15:187",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 78112,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1327:7:187",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78115,
                "mutability": "mutable",
                "name": "borrower",
                "nameLocation": "1356:8:187",
                "nodeType": "VariableDeclaration",
                "scope": 78119,
                "src": "1348:16:187",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 78114,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1348:7:187",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78118,
                "mutability": "mutable",
                "name": "lien",
                "nameLocation": "1389:4:187",
                "nodeType": "VariableDeclaration",
                "scope": 78119,
                "src": "1370:23:187",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Details_$74964_storage_ptr",
                  "typeString": "struct ILienToken.Details"
                },
                "typeName": {
                  "id": 78117,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 78116,
                    "name": "ILienToken.Details",
                    "nameLocations": [
                      "1370:10:187",
                      "1381:7:187"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 74964,
                    "src": "1370:18:187"
                  },
                  "referencedDeclaration": 74964,
                  "src": "1370:18:187",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Details_$74964_storage_ptr",
                    "typeString": "struct ILienToken.Details"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Details",
            "nameLocation": "1275:7:187",
            "scope": 78120,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 78106,
              "name": "IStrategyValidator",
              "nameLocations": [
                "1245:18:187"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 75613,
              "src": "1245:18:187"
            },
            "id": 78107,
            "nodeType": "InheritanceSpecifier",
            "src": "1245:18:187"
          }
        ],
        "canonicalName": "IUniqueValidator",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          78120,
          75613
        ],
        "name": "IUniqueValidator",
        "nameLocation": "1225:16:187",
        "scope": 78242,
        "usedErrors": []
      },
      {
        "id": 78241,
        "nodeType": "ContractDefinition",
        "src": "1402:1146:187",
        "nodes": [
          {
            "id": 78128,
            "nodeType": "VariableDeclaration",
            "src": "1451:45:187",
            "nodes": [],
            "constant": true,
            "functionSelector": "38fc401c",
            "mutability": "constant",
            "name": "VERSION_TYPE",
            "nameLocation": "1473:12:187",
            "scope": 78241,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 78123,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1451:5:187",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "31",
                  "id": 78126,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1494:1:187",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  },
                  "value": "1"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  }
                ],
                "id": 78125,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1488:5:187",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_uint8_$",
                  "typeString": "type(uint8)"
                },
                "typeName": {
                  "id": 78124,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1488:5:187",
                  "typeDescriptions": {}
                }
              },
              "id": 78127,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1488:8:187",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "id": 78144,
            "nodeType": "FunctionDefinition",
            "src": "1501:151:187",
            "nodes": [],
            "body": {
              "id": 78143,
              "nodeType": "Block",
              "src": "1601:51:187",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78138,
                        "name": "nlrDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78130,
                        "src": "1625:10:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 78139,
                            "name": "Details",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78119,
                            "src": "1638:7:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Details_$78119_storage_ptr_$",
                              "typeString": "type(struct IUniqueValidator.Details storage pointer)"
                            }
                          }
                        ],
                        "id": 78140,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1637:9:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Details_$78119_storage_ptr_$",
                          "typeString": "type(struct IUniqueValidator.Details storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_Details_$78119_storage_ptr_$",
                          "typeString": "type(struct IUniqueValidator.Details storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 78136,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1614:3:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 78137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1618:6:187",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1614:10:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 78141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1614:33:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Details_$78119_memory_ptr",
                      "typeString": "struct IUniqueValidator.Details memory"
                    }
                  },
                  "functionReturnParameters": 78135,
                  "id": 78142,
                  "nodeType": "Return",
                  "src": "1607:40:187"
                }
              ]
            },
            "functionSelector": "43fea054",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLeafDetails",
            "nameLocation": "1510:14:187",
            "parameters": {
              "id": 78131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78130,
                  "mutability": "mutable",
                  "name": "nlrDetails",
                  "nameLocation": "1538:10:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 78144,
                  "src": "1525:23:187",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 78129,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1525:5:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1524:25:187"
            },
            "returnParameters": {
              "id": 78135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78134,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 78144,
                  "src": "1583:14:187",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Details_$78119_memory_ptr",
                    "typeString": "struct IUniqueValidator.Details"
                  },
                  "typeName": {
                    "id": 78133,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 78132,
                      "name": "Details",
                      "nameLocations": [
                        "1583:7:187"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78119,
                      "src": "1583:7:187"
                    },
                    "referencedDeclaration": 78119,
                    "src": "1583:7:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Details_$78119_storage_ptr",
                      "typeString": "struct IUniqueValidator.Details"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1582:16:187"
            },
            "scope": 78241,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 78158,
            "nodeType": "FunctionDefinition",
            "src": "1656:132:187",
            "nodes": [],
            "body": {
              "id": 78157,
              "nodeType": "Block",
              "src": "1751:37:187",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78154,
                        "name": "details",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78147,
                        "src": "1775:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Details_$78119_memory_ptr",
                          "typeString": "struct IUniqueValidator.Details memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Details_$78119_memory_ptr",
                          "typeString": "struct IUniqueValidator.Details memory"
                        }
                      ],
                      "expression": {
                        "id": 78152,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1764:3:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 78153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1768:6:187",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "1764:10:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 78155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1764:19:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 78151,
                  "id": 78156,
                  "nodeType": "Return",
                  "src": "1757:26:187"
                }
              ]
            },
            "functionSelector": "8ccc5abc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assembleLeaf",
            "nameLocation": "1665:12:187",
            "parameters": {
              "id": 78148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78147,
                  "mutability": "mutable",
                  "name": "details",
                  "nameLocation": "1693:7:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 78158,
                  "src": "1678:22:187",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Details_$78119_memory_ptr",
                    "typeString": "struct IUniqueValidator.Details"
                  },
                  "typeName": {
                    "id": 78146,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 78145,
                      "name": "Details",
                      "nameLocations": [
                        "1678:7:187"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78119,
                      "src": "1678:7:187"
                    },
                    "referencedDeclaration": 78119,
                    "src": "1678:7:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Details_$78119_storage_ptr",
                      "typeString": "struct IUniqueValidator.Details"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1677:24:187"
            },
            "returnParameters": {
              "id": 78151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78150,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 78158,
                  "src": "1735:12:187",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 78149,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1735:5:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1734:14:187"
            },
            "scope": 78241,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 78240,
            "nodeType": "FunctionDefinition",
            "src": "1792:754:187",
            "nodes": [],
            "body": {
              "id": 78239,
              "nodeType": "Block",
              "src": "2055:491:187",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    78178
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78178,
                      "mutability": "mutable",
                      "name": "cd",
                      "nameLocation": "2076:2:187",
                      "nodeType": "VariableDeclaration",
                      "scope": 78239,
                      "src": "2061:17:187",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Details_$78119_memory_ptr",
                        "typeString": "struct IUniqueValidator.Details"
                      },
                      "typeName": {
                        "id": 78177,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 78176,
                          "name": "Details",
                          "nameLocations": [
                            "2061:7:187"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 78119,
                          "src": "2061:7:187"
                        },
                        "referencedDeclaration": 78119,
                        "src": "2061:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Details_$78119_storage_ptr",
                          "typeString": "struct IUniqueValidator.Details"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78183,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 78180,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78161,
                          "src": "2096:6:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NewLienRequest_$73715_memory_ptr",
                            "typeString": "struct IAstariaRouter.NewLienRequest memory"
                          }
                        },
                        "id": 78181,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2103:10:187",
                        "memberName": "nlrDetails",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 73703,
                        "src": "2096:17:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 78179,
                      "name": "getLeafDetails",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78144,
                      "src": "2081:14:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_Details_$78119_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (struct IUniqueValidator.Details memory)"
                      }
                    },
                    "id": 78182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2081:33:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Details_$78119_memory_ptr",
                      "typeString": "struct IUniqueValidator.Details memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2061:53:187"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 78187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 78184,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78178,
                        "src": "2124:2:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Details_$78119_memory_ptr",
                          "typeString": "struct IUniqueValidator.Details memory"
                        }
                      },
                      "id": 78185,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2127:7:187",
                      "memberName": "version",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78109,
                      "src": "2124:10:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 78186,
                      "name": "VERSION_TYPE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78128,
                      "src": "2138:12:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2124:26:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 78193,
                  "nodeType": "IfStatement",
                  "src": "2120:69:187",
                  "trueBody": {
                    "id": 78192,
                    "nodeType": "Block",
                    "src": "2152:37:187",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "696e76616c69642074797065",
                              "id": 78189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2167:14:187",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_25a13ab76ae7f784e05405a38d958f58f7fabf725ba77c806ef4a8ef700ae804",
                                "typeString": "literal_string \"invalid type\""
                              },
                              "value": "invalid type"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_25a13ab76ae7f784e05405a38d958f58f7fabf725ba77c806ef4a8ef700ae804",
                                "typeString": "literal_string \"invalid type\""
                              }
                            ],
                            "id": 78188,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "2160:6:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 78190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2160:22:187",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 78191,
                        "nodeType": "ExpressionStatement",
                        "src": "2160:22:187"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 78200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 78194,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78178,
                        "src": "2199:2:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Details_$78119_memory_ptr",
                          "typeString": "struct IUniqueValidator.Details memory"
                        }
                      },
                      "id": 78195,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2202:8:187",
                      "memberName": "borrower",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78115,
                      "src": "2199:11:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 78198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2222:1:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 78197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2214:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 78196,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2214:7:187",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 78199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2214:10:187",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2199:25:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 78210,
                  "nodeType": "IfStatement",
                  "src": "2195:144:187",
                  "trueBody": {
                    "id": 78209,
                    "nodeType": "Block",
                    "src": "2226:113:187",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 78205,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 78202,
                                "name": "borrower",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78163,
                                "src": "2251:8:187",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 78203,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78178,
                                  "src": "2263:2:187",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Details_$78119_memory_ptr",
                                    "typeString": "struct IUniqueValidator.Details memory"
                                  }
                                },
                                "id": 78204,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2266:8:187",
                                "memberName": "borrower",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 78115,
                                "src": "2263:11:187",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2251:23:187",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "696e76616c696420626f72726f7765722072657175657374696e6720636f6d6d69746d656e74",
                              "id": 78206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2284:40:187",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bac81b58826c93627d00aa94119257f86ef185f711c7410886ce2319823272ec",
                                "typeString": "literal_string \"invalid borrower requesting commitment\""
                              },
                              "value": "invalid borrower requesting commitment"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bac81b58826c93627d00aa94119257f86ef185f711c7410886ce2319823272ec",
                                "typeString": "literal_string \"invalid borrower requesting commitment\""
                              }
                            ],
                            "id": 78201,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2234:7:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 78207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2234:98:187",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 78208,
                        "nodeType": "ExpressionStatement",
                        "src": "2234:98:187"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 78215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 78212,
                            "name": "cd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78178,
                            "src": "2353:2:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Details_$78119_memory_ptr",
                              "typeString": "struct IUniqueValidator.Details memory"
                            }
                          },
                          "id": 78213,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2356:5:187",
                          "memberName": "token",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78111,
                          "src": "2353:8:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 78214,
                          "name": "collateralTokenContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78165,
                          "src": "2365:23:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2353:35:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420746f6b656e20636f6e7472616374",
                        "id": 78216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2390:24:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12d8f563d7725499b01f59fd8c90ab268f7cfd658778ddec1cf6f9410e959cd5",
                          "typeString": "literal_string \"invalid token contract\""
                        },
                        "value": "invalid token contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_12d8f563d7725499b01f59fd8c90ab268f7cfd658778ddec1cf6f9410e959cd5",
                          "typeString": "literal_string \"invalid token contract\""
                        }
                      ],
                      "id": 78211,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2345:7:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 78217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2345:70:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78218,
                  "nodeType": "ExpressionStatement",
                  "src": "2345:70:187"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 78223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 78220,
                            "name": "cd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78178,
                            "src": "2430:2:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Details_$78119_memory_ptr",
                              "typeString": "struct IUniqueValidator.Details memory"
                            }
                          },
                          "id": 78221,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2433:7:187",
                          "memberName": "tokenId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78113,
                          "src": "2430:10:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 78222,
                          "name": "collateralTokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78167,
                          "src": "2444:17:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2430:31:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420746f6b656e206964",
                        "id": 78224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2463:18:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ff7372f546bd544915bd6691f075d55a5bec238cf1ec58a3d30ca7c70009510",
                          "typeString": "literal_string \"invalid token id\""
                        },
                        "value": "invalid token id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ff7372f546bd544915bd6691f075d55a5bec238cf1ec58a3d30ca7c70009510",
                          "typeString": "literal_string \"invalid token id\""
                        }
                      ],
                      "id": 78219,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2422:7:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 78225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2422:60:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78226,
                  "nodeType": "ExpressionStatement",
                  "src": "2422:60:187"
                },
                {
                  "expression": {
                    "id": 78232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78227,
                      "name": "leaf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78171,
                      "src": "2488:4:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 78229,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78161,
                            "src": "2505:6:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NewLienRequest_$73715_memory_ptr",
                              "typeString": "struct IAstariaRouter.NewLienRequest memory"
                            }
                          },
                          "id": 78230,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2512:10:187",
                          "memberName": "nlrDetails",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73703,
                          "src": "2505:17:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 78228,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "2495:9:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 78231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2495:28:187",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2488:35:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 78233,
                  "nodeType": "ExpressionStatement",
                  "src": "2488:35:187"
                },
                {
                  "expression": {
                    "id": 78237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78234,
                      "name": "ld",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78174,
                      "src": "2529:2:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Details_$74964_memory_ptr",
                        "typeString": "struct ILienToken.Details memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 78235,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78178,
                        "src": "2534:2:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Details_$78119_memory_ptr",
                          "typeString": "struct IUniqueValidator.Details memory"
                        }
                      },
                      "id": 78236,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2537:4:187",
                      "memberName": "lien",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78118,
                      "src": "2534:7:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Details_$74964_memory_ptr",
                        "typeString": "struct ILienToken.Details memory"
                      }
                    },
                    "src": "2529:12:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Details_$74964_memory_ptr",
                      "typeString": "struct ILienToken.Details memory"
                    }
                  },
                  "id": 78238,
                  "nodeType": "ExpressionStatement",
                  "src": "2529:12:187"
                }
              ]
            },
            "baseFunctions": [
              75612
            ],
            "functionSelector": "8ba47309",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateAndParse",
            "nameLocation": "1801:16:187",
            "overrides": {
              "id": 78169,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1987:8:187"
            },
            "parameters": {
              "id": 78168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78161,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "1860:6:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 78240,
                  "src": "1823:43:187",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NewLienRequest_$73715_memory_ptr",
                    "typeString": "struct IAstariaRouter.NewLienRequest"
                  },
                  "typeName": {
                    "id": 78160,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 78159,
                      "name": "IAstariaRouter.NewLienRequest",
                      "nameLocations": [
                        "1823:14:187",
                        "1838:14:187"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 73715,
                      "src": "1823:29:187"
                    },
                    "referencedDeclaration": 73715,
                    "src": "1823:29:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NewLienRequest_$73715_storage_ptr",
                      "typeString": "struct IAstariaRouter.NewLienRequest"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78163,
                  "mutability": "mutable",
                  "name": "borrower",
                  "nameLocation": "1880:8:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 78240,
                  "src": "1872:16:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78162,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1872:7:187",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78165,
                  "mutability": "mutable",
                  "name": "collateralTokenContract",
                  "nameLocation": "1902:23:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 78240,
                  "src": "1894:31:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1894:7:187",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78167,
                  "mutability": "mutable",
                  "name": "collateralTokenId",
                  "nameLocation": "1939:17:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 78240,
                  "src": "1931:25:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1931:7:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1817:143:187"
            },
            "returnParameters": {
              "id": 78175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78171,
                  "mutability": "mutable",
                  "name": "leaf",
                  "nameLocation": "2017:4:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 78240,
                  "src": "2009:12:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 78170,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2009:7:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78174,
                  "mutability": "mutable",
                  "name": "ld",
                  "nameLocation": "2049:2:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 78240,
                  "src": "2023:28:187",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Details_$74964_memory_ptr",
                    "typeString": "struct ILienToken.Details"
                  },
                  "typeName": {
                    "id": 78173,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 78172,
                      "name": "ILienToken.Details",
                      "nameLocations": [
                        "2023:10:187",
                        "2034:7:187"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 74964,
                      "src": "2023:18:187"
                    },
                    "referencedDeclaration": 74964,
                    "src": "2023:18:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Details_$74964_storage_ptr",
                      "typeString": "struct ILienToken.Details"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2008:44:187"
            },
            "scope": 78241,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 78121,
              "name": "IUniqueValidator",
              "nameLocations": [
                "1430:16:187"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 78120,
              "src": "1430:16:187"
            },
            "id": 78122,
            "nodeType": "InheritanceSpecifier",
            "src": "1430:16:187"
          }
        ],
        "canonicalName": "UniqueValidator",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          78241,
          78120,
          75613
        ],
        "name": "UniqueValidator",
        "nameLocation": "1411:15:187",
        "scope": 78242,
        "usedErrors": []
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 187
}