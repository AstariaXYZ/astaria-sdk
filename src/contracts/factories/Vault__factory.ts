/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../common'
import type { Vault, VaultInterface } from '../Vault'

const _abi = [
  {
    inputs: [
      {
        internalType: 'enum IVaultImplementation.InvalidRequestReason',
        name: 'reason',
        type: 'uint8',
      },
    ],
    name: 'InvalidRequest',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    name: 'AllowListEnabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    name: 'AllowListUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'DelegateUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'nonce',
        type: 'uint256',
      },
    ],
    name: 'IncrementNonce',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'nonce',
        type: 'uint256',
      },
    ],
    name: 'NonceUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [],
    name: 'VaultShutdown',
    type: 'event',
  },
  {
    inputs: [],
    name: 'COLLATERAL_TOKEN',
    outputs: [
      {
        internalType: 'contract ICollateralToken',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'EPOCH_LENGTH',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'IMPL_TYPE',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ROUTER',
    outputs: [
      {
        internalType: 'contract IAstariaRouter',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'START',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'STRATEGY_TYPEHASH',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'VAULT_FEE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'asset',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint8',
                name: 'collateralType',
                type: 'uint8',
              },
              {
                internalType: 'address',
                name: 'token',
                type: 'address',
              },
              {
                internalType: 'address',
                name: 'vault',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'strategyRoot',
                type: 'bytes32',
              },
              {
                internalType: 'uint256',
                name: 'collateralId',
                type: 'uint256',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'maxAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'rate',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'duration',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'maxPotentialDebt',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'liquidationInitialAsk',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ILienToken.Details',
                name: 'details',
                type: 'tuple',
              },
            ],
            internalType: 'struct ILienToken.Lien',
            name: 'lien',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint88',
                name: 'amount',
                type: 'uint88',
              },
              {
                internalType: 'uint40',
                name: 'last',
                type: 'uint40',
              },
              {
                internalType: 'uint40',
                name: 'end',
                type: 'uint40',
              },
              {
                internalType: 'uint256',
                name: 'lienId',
                type: 'uint256',
              },
            ],
            internalType: 'struct ILienToken.Point',
            name: 'point',
            type: 'tuple',
          },
        ],
        internalType: 'struct ILienToken.Stack[]',
        name: 'stack',
        type: 'tuple[]',
      },
      {
        internalType: 'uint8',
        name: 'position',
        type: 'uint8',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'tokenContract',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'tokenId',
            type: 'uint256',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint8',
                    name: 'version',
                    type: 'uint8',
                  },
                  {
                    internalType: 'uint256',
                    name: 'deadline',
                    type: 'uint256',
                  },
                  {
                    internalType: 'address',
                    name: 'vault',
                    type: 'address',
                  },
                ],
                internalType: 'struct IAstariaRouter.StrategyDetailsParam',
                name: 'strategy',
                type: 'tuple',
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: 'uint8',
                        name: 'collateralType',
                        type: 'uint8',
                      },
                      {
                        internalType: 'address',
                        name: 'token',
                        type: 'address',
                      },
                      {
                        internalType: 'address',
                        name: 'vault',
                        type: 'address',
                      },
                      {
                        internalType: 'bytes32',
                        name: 'strategyRoot',
                        type: 'bytes32',
                      },
                      {
                        internalType: 'uint256',
                        name: 'collateralId',
                        type: 'uint256',
                      },
                      {
                        components: [
                          {
                            internalType: 'uint256',
                            name: 'maxAmount',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'rate',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'duration',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'maxPotentialDebt',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'liquidationInitialAsk',
                            type: 'uint256',
                          },
                        ],
                        internalType: 'struct ILienToken.Details',
                        name: 'details',
                        type: 'tuple',
                      },
                    ],
                    internalType: 'struct ILienToken.Lien',
                    name: 'lien',
                    type: 'tuple',
                  },
                  {
                    components: [
                      {
                        internalType: 'uint88',
                        name: 'amount',
                        type: 'uint88',
                      },
                      {
                        internalType: 'uint40',
                        name: 'last',
                        type: 'uint40',
                      },
                      {
                        internalType: 'uint40',
                        name: 'end',
                        type: 'uint40',
                      },
                      {
                        internalType: 'uint256',
                        name: 'lienId',
                        type: 'uint256',
                      },
                    ],
                    internalType: 'struct ILienToken.Point',
                    name: 'point',
                    type: 'tuple',
                  },
                ],
                internalType: 'struct ILienToken.Stack[]',
                name: 'stack',
                type: 'tuple[]',
              },
              {
                internalType: 'bytes',
                name: 'nlrDetails',
                type: 'bytes',
              },
              {
                components: [
                  {
                    internalType: 'bytes32',
                    name: 'root',
                    type: 'bytes32',
                  },
                  {
                    internalType: 'bytes32[]',
                    name: 'proof',
                    type: 'bytes32[]',
                  },
                ],
                internalType: 'struct IAstariaRouter.MerkleData',
                name: 'merkle',
                type: 'tuple',
              },
              {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
              },
              {
                internalType: 'uint8',
                name: 'v',
                type: 'uint8',
              },
              {
                internalType: 'bytes32',
                name: 'r',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32',
                name: 's',
                type: 'bytes32',
              },
            ],
            internalType: 'struct IAstariaRouter.NewLienRequest',
            name: 'lienRequest',
            type: 'tuple',
          },
        ],
        internalType: 'struct IAstariaRouter.Commitment',
        name: 'incomingTerms',
        type: 'tuple',
      },
    ],
    name: 'buyoutLien',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint8',
                name: 'collateralType',
                type: 'uint8',
              },
              {
                internalType: 'address',
                name: 'token',
                type: 'address',
              },
              {
                internalType: 'address',
                name: 'vault',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'strategyRoot',
                type: 'bytes32',
              },
              {
                internalType: 'uint256',
                name: 'collateralId',
                type: 'uint256',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'maxAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'rate',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'duration',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'maxPotentialDebt',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'liquidationInitialAsk',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ILienToken.Details',
                name: 'details',
                type: 'tuple',
              },
            ],
            internalType: 'struct ILienToken.Lien',
            name: 'lien',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint88',
                name: 'amount',
                type: 'uint88',
              },
              {
                internalType: 'uint40',
                name: 'last',
                type: 'uint40',
              },
              {
                internalType: 'uint40',
                name: 'end',
                type: 'uint40',
              },
              {
                internalType: 'uint256',
                name: 'lienId',
                type: 'uint256',
              },
            ],
            internalType: 'struct ILienToken.Point',
            name: 'point',
            type: 'tuple',
          },
        ],
        internalType: 'struct ILienToken.Stack[]',
        name: '',
        type: 'tuple[]',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'uint8',
                name: 'collateralType',
                type: 'uint8',
              },
              {
                internalType: 'address',
                name: 'token',
                type: 'address',
              },
              {
                internalType: 'address',
                name: 'vault',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'strategyRoot',
                type: 'bytes32',
              },
              {
                internalType: 'uint256',
                name: 'collateralId',
                type: 'uint256',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'maxAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'rate',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'duration',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'maxPotentialDebt',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'liquidationInitialAsk',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ILienToken.Details',
                name: 'details',
                type: 'tuple',
              },
            ],
            internalType: 'struct ILienToken.Lien',
            name: 'lien',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint88',
                name: 'amount',
                type: 'uint88',
              },
              {
                internalType: 'uint40',
                name: 'last',
                type: 'uint40',
              },
              {
                internalType: 'uint40',
                name: 'end',
                type: 'uint40',
              },
              {
                internalType: 'uint256',
                name: 'lienId',
                type: 'uint256',
              },
            ],
            internalType: 'struct ILienToken.Point',
            name: 'point',
            type: 'tuple',
          },
        ],
        internalType: 'struct ILienToken.Stack',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'tokenContract',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'tokenId',
            type: 'uint256',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint8',
                    name: 'version',
                    type: 'uint8',
                  },
                  {
                    internalType: 'uint256',
                    name: 'deadline',
                    type: 'uint256',
                  },
                  {
                    internalType: 'address',
                    name: 'vault',
                    type: 'address',
                  },
                ],
                internalType: 'struct IAstariaRouter.StrategyDetailsParam',
                name: 'strategy',
                type: 'tuple',
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: 'uint8',
                        name: 'collateralType',
                        type: 'uint8',
                      },
                      {
                        internalType: 'address',
                        name: 'token',
                        type: 'address',
                      },
                      {
                        internalType: 'address',
                        name: 'vault',
                        type: 'address',
                      },
                      {
                        internalType: 'bytes32',
                        name: 'strategyRoot',
                        type: 'bytes32',
                      },
                      {
                        internalType: 'uint256',
                        name: 'collateralId',
                        type: 'uint256',
                      },
                      {
                        components: [
                          {
                            internalType: 'uint256',
                            name: 'maxAmount',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'rate',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'duration',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'maxPotentialDebt',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'liquidationInitialAsk',
                            type: 'uint256',
                          },
                        ],
                        internalType: 'struct ILienToken.Details',
                        name: 'details',
                        type: 'tuple',
                      },
                    ],
                    internalType: 'struct ILienToken.Lien',
                    name: 'lien',
                    type: 'tuple',
                  },
                  {
                    components: [
                      {
                        internalType: 'uint88',
                        name: 'amount',
                        type: 'uint88',
                      },
                      {
                        internalType: 'uint40',
                        name: 'last',
                        type: 'uint40',
                      },
                      {
                        internalType: 'uint40',
                        name: 'end',
                        type: 'uint40',
                      },
                      {
                        internalType: 'uint256',
                        name: 'lienId',
                        type: 'uint256',
                      },
                    ],
                    internalType: 'struct ILienToken.Point',
                    name: 'point',
                    type: 'tuple',
                  },
                ],
                internalType: 'struct ILienToken.Stack[]',
                name: 'stack',
                type: 'tuple[]',
              },
              {
                internalType: 'bytes',
                name: 'nlrDetails',
                type: 'bytes',
              },
              {
                components: [
                  {
                    internalType: 'bytes32',
                    name: 'root',
                    type: 'bytes32',
                  },
                  {
                    internalType: 'bytes32[]',
                    name: 'proof',
                    type: 'bytes32[]',
                  },
                ],
                internalType: 'struct IAstariaRouter.MerkleData',
                name: 'merkle',
                type: 'tuple',
              },
              {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
              },
              {
                internalType: 'uint8',
                name: 'v',
                type: 'uint8',
              },
              {
                internalType: 'bytes32',
                name: 'r',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32',
                name: 's',
                type: 'bytes32',
              },
            ],
            internalType: 'struct IAstariaRouter.NewLienRequest',
            name: 'lienRequest',
            type: 'tuple',
          },
        ],
        internalType: 'struct IAstariaRouter.Commitment',
        name: 'params',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: 'commitToLien',
    outputs: [
      {
        internalType: 'uint256',
        name: 'lienId',
        type: 'uint256',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'uint8',
                name: 'collateralType',
                type: 'uint8',
              },
              {
                internalType: 'address',
                name: 'token',
                type: 'address',
              },
              {
                internalType: 'address',
                name: 'vault',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'strategyRoot',
                type: 'bytes32',
              },
              {
                internalType: 'uint256',
                name: 'collateralId',
                type: 'uint256',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'maxAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'rate',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'duration',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'maxPotentialDebt',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'liquidationInitialAsk',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ILienToken.Details',
                name: 'details',
                type: 'tuple',
              },
            ],
            internalType: 'struct ILienToken.Lien',
            name: 'lien',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint88',
                name: 'amount',
                type: 'uint88',
              },
              {
                internalType: 'uint40',
                name: 'last',
                type: 'uint40',
              },
              {
                internalType: 'uint40',
                name: 'end',
                type: 'uint40',
              },
              {
                internalType: 'uint256',
                name: 'lienId',
                type: 'uint256',
              },
            ],
            internalType: 'struct ILienToken.Point',
            name: 'point',
            type: 'tuple',
          },
        ],
        internalType: 'struct ILienToken.Stack[]',
        name: 'stack',
        type: 'tuple[]',
      },
      {
        internalType: 'uint256',
        name: 'payout',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: 'deposit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'disableAllowList',
    outputs: [],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'domainSeparator',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enableAllowList',
    outputs: [],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint8',
            name: 'version',
            type: 'uint8',
          },
          {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'vault',
            type: 'address',
          },
        ],
        internalType: 'struct IAstariaRouter.StrategyDetailsParam',
        name: 'strategy',
        type: 'tuple',
      },
      {
        internalType: 'bytes32',
        name: 'root',
        type: 'bytes32',
      },
    ],
    name: 'encodeStrategyData',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getShutdown',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getStrategistNonce',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'incrementNonce',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'delegate',
            type: 'address',
          },
          {
            internalType: 'bool',
            name: 'allowListEnabled',
            type: 'bool',
          },
          {
            internalType: 'address[]',
            name: 'allowList',
            type: 'address[]',
          },
          {
            internalType: 'uint256',
            name: 'depositCap',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVaultImplementation.InitParams',
        name: 'params',
        type: 'tuple',
      },
    ],
    name: 'init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    name: 'modifyAllowList',
    outputs: [],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'newCap',
        type: 'uint256',
      },
    ],
    name: 'modifyDepositCap',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'onERC721Received',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'recipient',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'delegate_',
        type: 'address',
      },
    ],
    name: 'setDelegate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'shutdown',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const

const _bytecode =
  '0x608060405234801561001057600080fd5b50612b32806100206000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c806366d003ac11610104578063c0e9b053116100a2578063dc2fbaee11610071578063dc2fbaee14610381578063f5f1f1a7146103e6578063f698da25146103ee578063fc0e74d1146103f657600080fd5b8063c0e9b053146103a9578063c237c703146103b1578063ca5eb5e1146103cb578063cb58189d146103de57600080fd5b80638da5cb5b116100de5780638da5cb5b1461038957806395d89b4114610391578063ac4746ab14610399578063ba9a061a146103a157600080fd5b806366d003ac146103665780636e553f651461036e578063834029ba1461038157600080fd5b80633177e0fe1161017c578063474a1e541161014b578063474a1e54146103025780634880d1981461031557806351ab5c4914610337578063627cdcb91461035e57600080fd5b80633177e0fe146102b457806332fe7b26146102c757806338d52e0f146102e75780633c96ce12146102ef57600080fd5b8063150b7a02116101b8578063150b7a021461023e5780632917e097146102765780632e1a7d4d1461028957806330040e771461029e57600080fd5b806301ffc9a7146101df57806306fdde0314610208578063133321d21461021d575b600080fd5b6101f36101ed3660046119ef565b50600090565b60405190151581526020015b60405180910390f35b6102106103fe565b6040516101ff9190611a69565b61023061022b366004611ab3565b610491565b6040516101ff929190611c64565b61025d61024c366004611c9d565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016101ff565b610210610284366004611d3b565b61091a565b61029c610297366004611d66565b61093d565b005b6102a6610984565b6040519081526020016101ff565b61029c6102c2366004611d8d565b610997565b6102cf6109b3565b6040516001600160a01b0390911681526020016101ff565b6102cf6109c4565b61029c6102fd366004611d66565b6109d0565b61029c610310366004611dc6565b610a2b565b610328610323366004611e00565b610b8a565b6040516101ff93929190611e46565b6102a67f679f3933bd13bd2e4ec6e9cde341ede07736ad7b635428a8a211e9cccb4393b081565b61029c610ca4565b6102cf610d62565b6102a661037c366004611e6f565b610d83565b61029c610997565b6102cf610de9565b610210610df5565b6102a6610e7d565b6102a6610e89565b6101f3610e95565b6103b9610eab565b60405160ff90911681526020016101ff565b61029c6103d9366004611e94565b610eb7565b6102a6610f89565b6102cf610f95565b6102a6611000565b61029c61107f565b60606104086109c4565b6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610445573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261046d9190810190611f85565b60405160200161047d9190612018565b604051602081830303815290604052905090565b606061049b611935565b6104a36109b3565b6001600160a01b0316635c975abb6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610504919061204a565b1561052e57600860405163eac08f1960e01b81526004016105259190612067565b60405180910390fd5b6105366110eb565b6001015460ff161561055e57600760405163eac08f1960e01b81526004016105259190612067565b60006105686109b3565b6001600160a01b03166341700b976040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c9919061208f565b9050600080826001600160a01b03166365b95e0a8a8a8a60ff168181106105f2576105f26120ac565b90506101c002016040518263ffffffff1660e01b815260040161061591906121d8565b6040805180830381865afa158015610631573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065591906121e7565b915091506106616109c4565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156106a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cb919061220b565b8111156106ee57600460405163eac08f1960e01b81526004016105259190612067565b6106ff866106fa610d62565b611119565b61078461070a6109b3565b6001600160a01b03166396d6401d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610747573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076b919061208f565b826107746109c4565b6001600160a01b03169190611476565b826001600160a01b0316635b2ed28760405180604001604052808a60ff16815260200160405180608001604052808781526020016107c0610d62565b6001600160a01b031681526020016107d66109b3565b6001600160a01b031663349d947b8d60006040518363ffffffff1660e01b81526004016108049291906124fa565b610140604051808303816000875af1158015610824573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084891906125f9565b81526020018e8e808060200260200160405190810160405280939291908181526020016000905b8282101561089c5761088d6101c08302860136819003810190612677565b8152602001906001019061086f565b50505050508152508152506040518263ffffffff1660e01b81526004016108c39190612763565b6000604051808303816000875af11580156108e2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261090a91908101906128e8565b9450945050505094509492505050565b606060006109266110eb565b90506109338185856114f3565b9150505b92915050565b610945610de9565b6001600160a01b0316336001600160a01b03161461096257600080fd5b6109813033836109706109c4565b6001600160a01b03169291906115be565b50565b600061098e6110eb565b60020154905090565b600060405163eac08f1960e01b81526004016105259190612067565b60006109bf6000611648565b905090565b60006109bf6029611648565b6109d8610de9565b6001600160a01b0316336001600160a01b0316146109f557600080fd5b6109fe8161166d565b610a066110eb565b80546affffffffffffffffffffff19166001600160581b039290921691909117905550565b610a336109b3565b6001600160a01b0316336001600160a01b031614610a5057600080fd5b6000610a5a6110eb565b90506000610a6b6020840184611e94565b6001600160a01b031614610aad57610a866020830183611e94565b81546001600160a01b0391909116600160581b02600160581b600160f81b03199091161781555b610aba826060013561166d565b81546affffffffffffffffffffff19166001600160581b0391909116178155610ae96040830160208401612937565b15610b865780546001600160f81b0316600160f81b17815560005b610b116040840184612954565b9050811015610b84576001600383016000610b2f6040870187612954565b85818110610b3f57610b3f6120ac565b9050602002016020810190610b549190611e94565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055600101610b04565b505b5050565b600060606000610b986109b3565b6001600160a01b0316635c975abb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf9919061204a565b15610c1a57600860405163eac08f1960e01b81526004016105259190612067565b610c226110eb565b6001015460ff1615610c4a57600760405163eac08f1960e01b81526004016105259190612067565b6000610c568686611683565b82519397509195509093509150610c9c908490610c75906001906129b3565b81518110610c8557610c856120ac565b602002602001015160200151604001518583610b84565b509250925092565b6000610cae6110eb565b9050610cb8610de9565b6001600160a01b0316336001600160a01b031614158015610cea57508054600160581b90046001600160a01b03163314155b15610d0b57600060405163eac08f1960e01b81526004016105259190612067565b600281018054906000610d1d836129c6565b91905055507fc6f316165836b9a9ca658ba2e3bbf32b3acff9aca1956fc77393fb506d26b0d68160020154604051610d5791815260200190565b60405180910390a150565b60006001610d6e610eab565b60ff1603610d7b57503090565b6109bf610de9565b600080610d8e6110eb565b33600090815260038201602052604090205490915060ff168015610dca5750610db5610de9565b6001600160a01b0316836001600160a01b0316145b610dd357600080fd5b610de13330866109706109c4565b509192915050565b60006109bf6015611648565b6060610dff610de9565b610e076109c4565b6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610e44573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e6c9190810190611f85565b60405160200161047d9291906129df565b60006109bf605d61175f565b60006109bf603d61175f565b6000610e9f6110eb565b6001015460ff16919050565b60006109bf6014611781565b610ebf610de9565b6001600160a01b0316336001600160a01b031614610edc57600080fd5b6000610ee66110eb565b8054600160581b600160f81b031916600160581b6001600160a01b0385169081029190911782556040519081529091507fbf313af507f7586dc28510c0974f0196ee356634bf104cf3ab61a28a2616c1549060200160405180910390a1604080516001600160a01b0384168152600160208201527f73121574a4eadb4cfdeb2ba56a6a88067b03edd1f0a0dfcac0a5a95682a24367910160405180910390a15050565b60006109bf607d61175f565b6000610f9f6109b3565b6001600160a01b031663f5f1f1a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fdc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bf919061208f565b604080517f2aef22f9d7df5f9d21c56d14029233f3fdaa91917727e1eb68e504d27072d6cd60208201527f044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d9181019190915246606082015230608082015260009060a00160405160208183030381529060405280519060200120905090565b611087610de9565b6001600160a01b0316336001600160a01b0316146110a457600080fd5b60016110ae6110eb565b600101805460ff19169115159190911790556040517f43849b84f1a1ce86ba1205cd8a5d4fa1563bca4b169db452674f94b4b6ddaa6990600090a1565b60008061093760017f8db05f23e24c991e45d8dd3599daf8e419ee5ab93565cf65b18905286a24ec146129b3565b60006111466020840180359061112f9086611e94565b6001600160a01b03166000526020526034600c2090565b90506000611152610f95565b6040516331a9108f60e11b8152600481018490529091506000906001600160a01b03831690636352211e90602401602060405180830381865afa15801561119d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c1919061208f565b60405163020604bf60e21b8152600481018590529091506000906001600160a01b0384169063081812fc90602401602060405180830381865afa15801561120c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611230919061208f565b9050336001600160a01b0383161480159061125d5750816001600160a01b0316856001600160a01b031614155b801561127b5750806001600160a01b0316856001600160a01b031614155b80156112f4575060405163e985e9c560e01b81526001600160a01b03838116600483015233602483015284169063e985e9c590604401602060405180830381865afa1580156112ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f2919061204a565b155b1561131557600060405163eac08f1960e01b81526004016105259190612067565b600061131f6110eb565b9050600060016113578361133660408c018c612a2f565b61134360408d018d612a2f565b6113519060a0810190612a50565b356114f3565b805160209091012061136c60408b018b612a2f565b61137e9061010081019060e001612a66565b61138b60408c018c612a2f565b610100013561139d60408d018d612a2f565b6040805160008152602081018083529590955260ff9093169284019290925260608301526101200135608082015260a0016020604051602081039080840390855afa1580156113f0573d6000803e3d6000fd5b505050602060405103519050611404610de9565b6001600160a01b0316816001600160a01b031614158015611439575081546001600160a01b03828116600160581b9092041614155b8061144b57506001600160a01b038116155b1561146c57600160405163eac08f1960e01b81526004016105259190612067565b5050505050505050565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806114ed5760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b6044820152606401610525565b50505050565b606060007f679f3933bd13bd2e4ec6e9cde341ede07736ad7b635428a8a211e9cccb4393b0856002015485602001358560405160200161154c949392919093845260208401929092526040830152606082015260800190565b60408051601f1981840301815291905280516020909101209050601960f81b600160f81b611578611000565b6040516001600160f81b031993841660208201529290911660218301526022820152604281018290526062016040516020818303038152906040529150505b9392505050565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806116415760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606401610525565b5050505050565b60008061165f600119368181013560f01c90030190565b929092013560601c92915050565b6000600160581b821061167f57600080fd5b5090565b600060606000806116948686611119565b61169c6109b3565b6001600160a01b03166345be6867876116b3610d62565b6040518363ffffffff1660e01b81526004016116d0929190612a83565b6000604051808303816000875af11580156116ef573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526117179190810190612aad565b9195509350915061173761172e6040880188612a2f565b60c001356117a6565b905061175685826117466109c4565b6001600160a01b031691906118bd565b92959194509250565b600080611776600119368181013560f01c90030190565b929092013592915050565b600080611798600119368181013560f01c90030190565b929092013560f81c92915050565b6000806117b16109b3565b6001600160a01b031663017e7e586040518163ffffffff1660e01b81526004016020604051808303816000875af11580156117f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611814919061208f565b90506001600160a01b03811615801590610de15760006118326109b3565b6001600160a01b0316630f0245ad866040518263ffffffff1660e01b815260040161185f91815260200190565b602060405180830381865afa15801561187c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118a0919061220b565b905080850394506118b483826117466109c4565b50509192915050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806114ed5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606401610525565b6040518060400160405280611948611977565b81526040805160808101825260008082526020828101829052928201819052606082015291015290565b905290565b6040518060c00160405280600060ff16815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008019168152602001600081526020016119726040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b600060208284031215611a0157600080fd5b81356001600160e01b0319811681146115b757600080fd5b60005b83811015611a34578181015183820152602001611a1c565b50506000910152565b60008151808452611a55816020860160208601611a19565b601f01601f19169290920160200192915050565b6020815260006115b76020830184611a3d565b60ff8116811461098157600080fd5b8035611a9681611a7c565b919050565b600060608284031215611aad57600080fd5b50919050565b60008060008060608587031215611ac957600080fd5b84356001600160401b0380821115611ae057600080fd5b818701915087601f830112611af457600080fd5b813581811115611b0357600080fd5b8860206101c083028501011115611b1957600080fd5b60208301965080955050611b2f60208801611a8b565b93506040870135915080821115611b4557600080fd5b50611b5287828801611a9b565b91505092959194509250565b805160ff1682526020808201516001600160a01b039081168285015260408084015190911681850152606080840151818601526080808501518187015260a0948501518051958701959095529284015160c08601529083015160e0850152820151610100840152015161012090910152565b611bdb828251611b5e565b60209081015180516001600160581b03166101408401529081015164ffffffffff908116610160840152604082015116610180830152606001516101a090910152565b600081518084526020808501945080840160005b83811015611c5957611c45878351611bd0565b6101c0969096019590820190600101611c32565b509495945050505050565b60006101e0808352611c7881840186611c1e565b9150506115b76020830184611bd0565b6001600160a01b038116811461098157600080fd5b600080600080600060808688031215611cb557600080fd5b8535611cc081611c88565b94506020860135611cd081611c88565b93506040860135925060608601356001600160401b0380821115611cf357600080fd5b818801915088601f830112611d0757600080fd5b813581811115611d1657600080fd5b896020828501011115611d2857600080fd5b9699959850939650602001949392505050565b60008060808385031215611d4e57600080fd5b611d588484611a9b565b946060939093013593505050565b600060208284031215611d7857600080fd5b5035919050565b801515811461098157600080fd5b60008060408385031215611da057600080fd5b8235611dab81611c88565b91506020830135611dbb81611d7f565b809150509250929050565b600060208284031215611dd857600080fd5b81356001600160401b03811115611dee57600080fd5b8201608081850312156115b757600080fd5b60008060408385031215611e1357600080fd5b82356001600160401b03811115611e2957600080fd5b611e3585828601611a9b565b9250506020830135611dbb81611c88565b838152606060208201526000611e5f6060830185611c1e565b9050826040830152949350505050565b60008060408385031215611e8257600080fd5b823591506020830135611dbb81611c88565b600060208284031215611ea657600080fd5b81356115b781611c88565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715611ee957611ee9611eb1565b60405290565b604051608081016001600160401b0381118282101715611ee957611ee9611eb1565b604080519081016001600160401b0381118282101715611ee957611ee9611eb1565b60405160a081016001600160401b0381118282101715611ee957611ee9611eb1565b604051601f8201601f191681016001600160401b0381118282101715611f7d57611f7d611eb1565b604052919050565b600060208284031215611f9757600080fd5b81516001600160401b0380821115611fae57600080fd5b818401915084601f830112611fc257600080fd5b815181811115611fd457611fd4611eb1565b611fe7601f8201601f1916602001611f55565b9150808252856020828501011115611ffe57600080fd5b61200f816020840160208601611a19565b50949350505050565b694153542d5661756c742d60b01b81526000825161203d81600a850160208701611a19565b91909101600a0192915050565b60006020828403121561205c57600080fd5b81516115b781611d7f565b602081016009831061208957634e487b7160e01b600052602160045260246000fd5b91905290565b6000602082840312156120a157600080fd5b81516115b781611c88565b634e487b7160e01b600052603260045260246000fd5b6001600160581b038116811461098157600080fd5b64ffffffffff8116811461098157600080fd5b80356120f5816120c2565b6001600160581b03168252602081013561210e816120d7565b64ffffffffff908116602084015260408201359061212b826120d7565b166040830152606090810135910152565b803561214781611a7c565b60ff168252602081013561215a81611c88565b6001600160a01b03908116602084015260408201359061217982611c88565b166040830152606081810135908301526080808201359083015260a0808201359083015260c0808201359083015260e0808201359083015261010080820135908301526101208082013590830152610140610b848184018284016120ea565b6101c08101610937828461213c565b600080604083850312156121fa57600080fd5b505080516020909101519092909150565b60006020828403121561221d57600080fd5b5051919050565b6000808335601e1984360301811261223b57600080fd5b83016020810192503590506001600160401b0381111561225a57600080fd5b6101c08102360382131561226d57600080fd5b9250929050565b81835260208301925060008160005b848110156122a957612295868361213c565b6101c0958601959190910190600101612283565b5093949350505050565b6000808335601e198436030181126122ca57600080fd5b83016020810192503590506001600160401b038111156122e957600080fd5b80360382131561226d57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008235603e1983360301811261233757600080fd5b90910192915050565b8035825260006020820135601e1983360301811261235d57600080fd5b82016020810190356001600160401b0381111561237957600080fd5b8060051b80360383131561238c57600080fd5b60406020870181905286018290526001600160fb1b038211156123ae57600080fd5b8083606088013794909401606001949350505050565b600081356123d181611c88565b6001600160a01b039081168452602083810135908501526040830135903684900361013e1901821261240257600080fd5b6060604086015290830190813561241881611a7c565b60ff16606086015260208201356080860152604082013561243881611c88565b1660a085015261244b6060820182612224565b6101408060c08801526124636101a088018385612274565b925061247260808501856122b3565b9250605f19808986030160e08a015261248c8585846122f8565b945061249b60a0870187612321565b935061010091508089860301828a0152506124b68484612340565b9350610120925060c0850135838901526124d260e08601611a8b565b60ff811689840152508401356101608801525090910135610180909401939093525090919050565b60408152600061250d60408301856123c4565b90508260208301529392505050565b600081830361014081121561253057600080fd5b612538611ec7565b9150825161254581611a7c565b8252602083015161255581611c88565b6020830152604083015161256881611c88565b6040830152606083810151908301526080808401519083015260a0609f198201121561259357600080fd5b5060405160a081018181106001600160401b03821117156125b6576125b6611eb1565b806040525060a0830151815260c0830151602082015260e08301516040820152610100830151606082015261012083015160808201528060a08301525092915050565b6000610140828403121561260c57600080fd5b6115b7838361251c565b60006080828403121561262857600080fd5b612630611eef565b9050813561263d816120c2565b8152602082013561264d816120d7565b60208201526040820135612660816120d7565b806040830152506060820135606082015292915050565b60008183036101c081121561268b57600080fd5b612693611f11565b610140808312156126a357600080fd5b6126ab611ec7565b85356126b681611a7c565b815260208601356126c681611c88565b602082015260408601356126d981611c88565b6040820152606086810135908201526080808701359082015260a0609f198501121561270457600080fd5b61270c611f33565b935060a0860135845260c0860135602085015260e08601356040850152610100860135606085015261012086013560808501528360a08201528083525061275586828701612616565b602083015250949350505050565b6020815260ff8251166020820152600060208301516040808401528051606084015260018060a01b03602082015116608084015260408101516127a960a0850182611b5e565b50606001516101a06101e0840152610933610200840182611c1e565b60008183036101c08112156127d957600080fd5b6127e1611f11565b91506127ed848461251c565b8252608061013f198201121561280257600080fd5b5061280b611eef565b61014083015161281a816120c2565b815261016083015161282b816120d7565b602082015261018083015161283f816120d7565b806040830152506101a083015160608201528060208301525092915050565b600082601f83011261286f57600080fd5b815160206001600160401b0382111561288a5761288a611eb1565b612898818360051b01611f55565b8281526101c092830285018201928282019190878511156128b857600080fd5b8387015b858110156128db576128ce89826127c5565b84529284019281016128bc565b5090979650505050505050565b6000806101e083850312156128fc57600080fd5b82516001600160401b0381111561291257600080fd5b61291e8582860161285e565b92505061292e84602085016127c5565b90509250929050565b60006020828403121561294957600080fd5b81356115b781611d7f565b6000808335601e1984360301811261296b57600080fd5b8301803591506001600160401b0382111561298557600080fd5b6020019150600581901b360382131561226d57600080fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156109375761093761299d565b6000600182016129d8576129d861299d565b5060010190565b6420a9aa16ab60d91b81526bffffffffffffffffffffffff198360601b166005820152602d60f81b601982015260008251612a2181601a850160208701611a19565b91909101601a019392505050565b6000823561013e19833603018112612a4657600080fd5b9190910192915050565b60008235603e19833603018112612a4657600080fd5b600060208284031215612a7857600080fd5b81356115b781611a7c565b604081526000612a9660408301856123c4565b905060018060a01b03831660208301529392505050565b600080600060608486031215612ac257600080fd5b8351925060208401516001600160401b03811115612adf57600080fd5b612aeb8682870161285e565b92505060408401519050925092509256fea26469706673582212207f5328c7e9e791ccbc6d68fb0a06d2bfe6cb1bc41511a8280d6af8c3add6597d64736f6c63430008110033'

type VaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: VaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class Vault__factory extends ContractFactory {
  constructor(...args: VaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Vault> {
    return super.deploy(overrides || {}) as Promise<Vault>
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): Vault {
    return super.attach(address) as Vault
  }
  override connect(signer: Signer): Vault__factory {
    return super.connect(signer) as Vault__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): VaultInterface {
    return new utils.Interface(_abi) as VaultInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Vault {
    return new Contract(address, _abi, signerOrProvider) as Vault
  }
}
