/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../common'
import type { Vault, VaultInterface } from '../Vault'

const _abi = [
  {
    inputs: [
      {
        internalType: 'enum IVaultImplementation.InvalidRequestReason',
        name: 'reason',
        type: 'uint8',
      },
    ],
    name: 'InvalidRequest',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint32',
        name: 'nonce',
        type: 'uint32',
      },
    ],
    name: 'IncrementNonce',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint32',
        name: 'nonce',
        type: 'uint32',
      },
    ],
    name: 'NonceUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [],
    name: 'VaultShutdown',
    type: 'event',
  },
  {
    inputs: [],
    name: 'COLLATERAL_TOKEN',
    outputs: [
      {
        internalType: 'contract ICollateralToken',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'EPOCH_LENGTH',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'IMPL_TYPE',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ROUTER',
    outputs: [
      {
        internalType: 'contract IAstariaRouter',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'START',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'STRATEGY_TYPEHASH',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'VAULT_FEE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'asset',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'collateralId',
        type: 'uint256',
      },
      {
        internalType: 'uint8',
        name: 'position',
        type: 'uint8',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'tokenContract',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'tokenId',
            type: 'uint256',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint8',
                    name: 'version',
                    type: 'uint8',
                  },
                  {
                    internalType: 'uint256',
                    name: 'deadline',
                    type: 'uint256',
                  },
                  {
                    internalType: 'address',
                    name: 'vault',
                    type: 'address',
                  },
                ],
                internalType: 'struct IAstariaRouter.StrategyDetails',
                name: 'strategy',
                type: 'tuple',
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: 'address',
                        name: 'token',
                        type: 'address',
                      },
                      {
                        internalType: 'address',
                        name: 'vault',
                        type: 'address',
                      },
                      {
                        internalType: 'bytes32',
                        name: 'strategyRoot',
                        type: 'bytes32',
                      },
                      {
                        internalType: 'uint256',
                        name: 'collateralId',
                        type: 'uint256',
                      },
                      {
                        components: [
                          {
                            internalType: 'uint256',
                            name: 'maxAmount',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'rate',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'duration',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'maxPotentialDebt',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'liquidationInitialAsk',
                            type: 'uint256',
                          },
                        ],
                        internalType: 'struct ILienToken.Details',
                        name: 'details',
                        type: 'tuple',
                      },
                    ],
                    internalType: 'struct ILienToken.Lien',
                    name: 'lien',
                    type: 'tuple',
                  },
                  {
                    components: [
                      {
                        internalType: 'uint88',
                        name: 'amount',
                        type: 'uint88',
                      },
                      {
                        internalType: 'uint8',
                        name: 'position',
                        type: 'uint8',
                      },
                      {
                        internalType: 'uint40',
                        name: 'last',
                        type: 'uint40',
                      },
                      {
                        internalType: 'uint40',
                        name: 'end',
                        type: 'uint40',
                      },
                      {
                        internalType: 'uint256',
                        name: 'lienId',
                        type: 'uint256',
                      },
                    ],
                    internalType: 'struct ILienToken.Point',
                    name: 'point',
                    type: 'tuple',
                  },
                ],
                internalType: 'struct ILienToken.Stack[]',
                name: 'stack',
                type: 'tuple[]',
              },
              {
                internalType: 'bytes',
                name: 'nlrDetails',
                type: 'bytes',
              },
              {
                components: [
                  {
                    internalType: 'bytes32',
                    name: 'root',
                    type: 'bytes32',
                  },
                  {
                    internalType: 'bytes32[]',
                    name: 'proof',
                    type: 'bytes32[]',
                  },
                ],
                internalType: 'struct IAstariaRouter.MerkleData',
                name: 'merkle',
                type: 'tuple',
              },
              {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
              },
              {
                internalType: 'uint8',
                name: 'v',
                type: 'uint8',
              },
              {
                internalType: 'bytes32',
                name: 'r',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32',
                name: 's',
                type: 'bytes32',
              },
            ],
            internalType: 'struct IAstariaRouter.NewLienRequest',
            name: 'lienRequest',
            type: 'tuple',
          },
        ],
        internalType: 'struct IAstariaRouter.Commitment',
        name: 'incomingTerms',
        type: 'tuple',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'token',
                type: 'address',
              },
              {
                internalType: 'address',
                name: 'vault',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'strategyRoot',
                type: 'bytes32',
              },
              {
                internalType: 'uint256',
                name: 'collateralId',
                type: 'uint256',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'maxAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'rate',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'duration',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'maxPotentialDebt',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'liquidationInitialAsk',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ILienToken.Details',
                name: 'details',
                type: 'tuple',
              },
            ],
            internalType: 'struct ILienToken.Lien',
            name: 'lien',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint88',
                name: 'amount',
                type: 'uint88',
              },
              {
                internalType: 'uint8',
                name: 'position',
                type: 'uint8',
              },
              {
                internalType: 'uint40',
                name: 'last',
                type: 'uint40',
              },
              {
                internalType: 'uint40',
                name: 'end',
                type: 'uint40',
              },
              {
                internalType: 'uint256',
                name: 'lienId',
                type: 'uint256',
              },
            ],
            internalType: 'struct ILienToken.Point',
            name: 'point',
            type: 'tuple',
          },
        ],
        internalType: 'struct ILienToken.Stack[]',
        name: 'stack',
        type: 'tuple[]',
      },
    ],
    name: 'buyoutLien',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'token',
                type: 'address',
              },
              {
                internalType: 'address',
                name: 'vault',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'strategyRoot',
                type: 'bytes32',
              },
              {
                internalType: 'uint256',
                name: 'collateralId',
                type: 'uint256',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'maxAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'rate',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'duration',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'maxPotentialDebt',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'liquidationInitialAsk',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ILienToken.Details',
                name: 'details',
                type: 'tuple',
              },
            ],
            internalType: 'struct ILienToken.Lien',
            name: 'lien',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint88',
                name: 'amount',
                type: 'uint88',
              },
              {
                internalType: 'uint8',
                name: 'position',
                type: 'uint8',
              },
              {
                internalType: 'uint40',
                name: 'last',
                type: 'uint40',
              },
              {
                internalType: 'uint40',
                name: 'end',
                type: 'uint40',
              },
              {
                internalType: 'uint256',
                name: 'lienId',
                type: 'uint256',
              },
            ],
            internalType: 'struct ILienToken.Point',
            name: 'point',
            type: 'tuple',
          },
        ],
        internalType: 'struct ILienToken.Stack[]',
        name: '',
        type: 'tuple[]',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'token',
                type: 'address',
              },
              {
                internalType: 'address',
                name: 'vault',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'strategyRoot',
                type: 'bytes32',
              },
              {
                internalType: 'uint256',
                name: 'collateralId',
                type: 'uint256',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'maxAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'rate',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'duration',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'maxPotentialDebt',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'liquidationInitialAsk',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ILienToken.Details',
                name: 'details',
                type: 'tuple',
              },
            ],
            internalType: 'struct ILienToken.Lien',
            name: 'lien',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint88',
                name: 'amount',
                type: 'uint88',
              },
              {
                internalType: 'uint8',
                name: 'position',
                type: 'uint8',
              },
              {
                internalType: 'uint40',
                name: 'last',
                type: 'uint40',
              },
              {
                internalType: 'uint40',
                name: 'end',
                type: 'uint40',
              },
              {
                internalType: 'uint256',
                name: 'lienId',
                type: 'uint256',
              },
            ],
            internalType: 'struct ILienToken.Point',
            name: 'point',
            type: 'tuple',
          },
        ],
        internalType: 'struct ILienToken.Stack',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'tokenContract',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'tokenId',
            type: 'uint256',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint8',
                    name: 'version',
                    type: 'uint8',
                  },
                  {
                    internalType: 'uint256',
                    name: 'deadline',
                    type: 'uint256',
                  },
                  {
                    internalType: 'address',
                    name: 'vault',
                    type: 'address',
                  },
                ],
                internalType: 'struct IAstariaRouter.StrategyDetails',
                name: 'strategy',
                type: 'tuple',
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: 'address',
                        name: 'token',
                        type: 'address',
                      },
                      {
                        internalType: 'address',
                        name: 'vault',
                        type: 'address',
                      },
                      {
                        internalType: 'bytes32',
                        name: 'strategyRoot',
                        type: 'bytes32',
                      },
                      {
                        internalType: 'uint256',
                        name: 'collateralId',
                        type: 'uint256',
                      },
                      {
                        components: [
                          {
                            internalType: 'uint256',
                            name: 'maxAmount',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'rate',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'duration',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'maxPotentialDebt',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'liquidationInitialAsk',
                            type: 'uint256',
                          },
                        ],
                        internalType: 'struct ILienToken.Details',
                        name: 'details',
                        type: 'tuple',
                      },
                    ],
                    internalType: 'struct ILienToken.Lien',
                    name: 'lien',
                    type: 'tuple',
                  },
                  {
                    components: [
                      {
                        internalType: 'uint88',
                        name: 'amount',
                        type: 'uint88',
                      },
                      {
                        internalType: 'uint8',
                        name: 'position',
                        type: 'uint8',
                      },
                      {
                        internalType: 'uint40',
                        name: 'last',
                        type: 'uint40',
                      },
                      {
                        internalType: 'uint40',
                        name: 'end',
                        type: 'uint40',
                      },
                      {
                        internalType: 'uint256',
                        name: 'lienId',
                        type: 'uint256',
                      },
                    ],
                    internalType: 'struct ILienToken.Point',
                    name: 'point',
                    type: 'tuple',
                  },
                ],
                internalType: 'struct ILienToken.Stack[]',
                name: 'stack',
                type: 'tuple[]',
              },
              {
                internalType: 'bytes',
                name: 'nlrDetails',
                type: 'bytes',
              },
              {
                components: [
                  {
                    internalType: 'bytes32',
                    name: 'root',
                    type: 'bytes32',
                  },
                  {
                    internalType: 'bytes32[]',
                    name: 'proof',
                    type: 'bytes32[]',
                  },
                ],
                internalType: 'struct IAstariaRouter.MerkleData',
                name: 'merkle',
                type: 'tuple',
              },
              {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
              },
              {
                internalType: 'uint8',
                name: 'v',
                type: 'uint8',
              },
              {
                internalType: 'bytes32',
                name: 'r',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32',
                name: 's',
                type: 'bytes32',
              },
            ],
            internalType: 'struct IAstariaRouter.NewLienRequest',
            name: 'lienRequest',
            type: 'tuple',
          },
        ],
        internalType: 'struct IAstariaRouter.Commitment',
        name: 'params',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: 'commitToLien',
    outputs: [
      {
        internalType: 'uint256',
        name: 'lienId',
        type: 'uint256',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'token',
                type: 'address',
              },
              {
                internalType: 'address',
                name: 'vault',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'strategyRoot',
                type: 'bytes32',
              },
              {
                internalType: 'uint256',
                name: 'collateralId',
                type: 'uint256',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'maxAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'rate',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'duration',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'maxPotentialDebt',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'liquidationInitialAsk',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ILienToken.Details',
                name: 'details',
                type: 'tuple',
              },
            ],
            internalType: 'struct ILienToken.Lien',
            name: 'lien',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint88',
                name: 'amount',
                type: 'uint88',
              },
              {
                internalType: 'uint8',
                name: 'position',
                type: 'uint8',
              },
              {
                internalType: 'uint40',
                name: 'last',
                type: 'uint40',
              },
              {
                internalType: 'uint40',
                name: 'end',
                type: 'uint40',
              },
              {
                internalType: 'uint256',
                name: 'lienId',
                type: 'uint256',
              },
            ],
            internalType: 'struct ILienToken.Point',
            name: 'point',
            type: 'tuple',
          },
        ],
        internalType: 'struct ILienToken.Stack[]',
        name: 'stack',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: 'deposit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'disableAllowList',
    outputs: [],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'domainSeparator',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enableAllowList',
    outputs: [],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint8',
            name: 'version',
            type: 'uint8',
          },
          {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'vault',
            type: 'address',
          },
        ],
        internalType: 'struct IAstariaRouter.StrategyDetails',
        name: 'strategy',
        type: 'tuple',
      },
      {
        internalType: 'bytes32',
        name: 'root',
        type: 'bytes32',
      },
    ],
    name: 'encodeStrategyData',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getShutdown',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getStrategistNonce',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'incrementNonce',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'delegate',
            type: 'address',
          },
          {
            internalType: 'bool',
            name: 'allowListEnabled',
            type: 'bool',
          },
          {
            internalType: 'address[]',
            name: 'allowList',
            type: 'address[]',
          },
          {
            internalType: 'uint256',
            name: 'depositCap',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVaultImplementation.InitParams',
        name: 'params',
        type: 'tuple',
      },
    ],
    name: 'init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    name: 'modifyAllowList',
    outputs: [],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'newCap',
        type: 'uint256',
      },
    ],
    name: 'modifyDepositCap',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator_',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'from_',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId_',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data_',
        type: 'bytes',
      },
    ],
    name: 'onERC721Received',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'recipient',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'delegate_',
        type: 'address',
      },
    ],
    name: 'setDelegate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'shutdown',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const

const _bytecode =
  '0x608060405234801561001057600080fd5b50613298806100206000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80636e553f6511610104578063c237c703116100a2578063dc2fbaee11610071578063dc2fbaee1461037c578063f5f1f1a714610419578063f698da2514610421578063fc0e74d11461042957600080fd5b8063c237c703146103c3578063ca5eb5e1146103dd578063cb58189d146103f0578063d4208b73146103f857600080fd5b806395d89b41116100de57806395d89b411461038c578063ac4746ab14610394578063ba9a061a1461039c578063c0e9b053146103a457600080fd5b80636e553f6514610369578063834029ba1461037c5780638da5cb5b1461038457600080fd5b80633177e0fe1161017c578063474a1e541161014b578063474a1e541461031157806351ab5c4914610324578063627cdcb91461035957806366d003ac1461036157600080fd5b80633177e0fe146102c357806332fe7b26146102d657806338d52e0f146102f65780633c96ce12146102fe57600080fd5b80632917e097116101b85780632917e097146102555780632d7342c0146102685780632e1a7d4d1461028957806330040e771461029e57600080fd5b806301ffc9a7146101df57806306fdde0314610208578063150b7a021461021d575b600080fd5b6101f36101ed366004611cbd565b50600090565b60405190151581526020015b60405180910390f35b610210610431565b6040516101ff9190611d37565b61023c61022b366004611d5f565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016101ff565b610210610263366004611e15565b6104c4565b61027b610276366004611e5f565b6104ea565b6040516101ff929190612003565b61029c610297366004612027565b610b30565b005b6000805160206132438339815191525460405163ffffffff90911681526020016101ff565b61029c6102d136600461204e565b610b77565b6102de610b93565b6040516001600160a01b0390911681526020016101ff565b6102de610ba4565b61029c61030c366004612027565b610bb0565b61029c61031f366004612087565b610c1f565b61034b7f679f3933bd13bd2e4ec6e9cde341ede07736ad7b635428a8a211e9cccb4393b081565b6040519081526020016101ff565b61029c610d96565b6102de610e67565b61034b6103773660046120c1565b610e88565b61029c610b77565b6102de610f31565b610210610f3d565b61034b610fc5565b61034b610fd1565b60008051602061322383398151915254600160a81b900460ff166101f3565b6103cb610fdd565b60405160ff90911681526020016101ff565b61029c6103eb3660046120e6565b610fe9565b61034b61108b565b61040b610406366004612103565b611097565b6040516101ff929190612149565b6102de6111c1565b61034b61122c565b61029c6112ab565b606061043b610ba4565b6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610478573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104a09190810190612266565b6040516020016104b091906122e1565b604051602081830303815290604052905090565b60606000805160206132438339815191526104e081858561131b565b9150505b92915050565b60606104f4611c06565b6104fc610b93565b6001600160a01b0316635c975abb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610539573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055d9190612313565b1561058757600860405163eac08f1960e01b815260040161057e9190612330565b60405180910390fd5b60008051602061322383398151915254600160a81b900460ff16156105c257600760405163eac08f1960e01b815260040161057e9190612330565b6000806105cd610b93565b6001600160a01b03166341700b976040518163ffffffff1660e01b8152600401602060405180830381865afa15801561060a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062e9190612358565b6001600160a01b03166352335c8d87878b60ff1681811061065157610651612375565b90506101c002016040518263ffffffff1660e01b815260040161067491906124a5565b6040805180830381865afa158015610690573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b491906124b4565b915091506106c0610ba4565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610706573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072a91906124d8565b81111561074d57600460405163eac08f1960e01b815260040161057e9190612330565b61075e87610759610e67565b6113f2565b6107e3610769610b93565b6001600160a01b03166396d6401d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ca9190612358565b826107d3610ba4565b6001600160a01b03169190611812565b60006107ed610b93565b6001600160a01b03166341700b976040518163ffffffff1660e01b8152600401602060405180830381865afa15801561082a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084e9190612358565b905030610859610e67565b6001600160a01b0316141580156108f45750806001600160a01b031663e985e9c530610883610e67565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa1580156108ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f29190612313565b155b1561097157806001600160a01b031663a22cb465610910610e67565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260016024820152604401600060405180830381600087803b15801561095857600080fd5b505af115801561096c573d6000803e3d6000fd5b505050505b806001600160a01b0316639b9761fb60405180606001604052808b61099590612815565b81526020018c60ff1681526020016040518060a001604052808f81526020018d80604001906109c49190612934565b60c0013581526020016109d5610e67565b6001600160a01b031681526020016109eb610b93565b6001600160a01b031663f44794ca8f60006040518363ffffffff1660e01b8152600401610a19929190612c2b565b610120604051808303816000875af1158015610a39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5d9190612cf7565b81526020018c8c808060200260200160405190810160405280939291908181526020016000905b82821015610ab157610aa26101c08302860136819003810190612d14565b81526020019060010190610a84565b50505050508152508152506040518263ffffffff1660e01b8152600401610ad89190612dd8565b6000604051808303816000875af1158015610af7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b1f919081019061300c565b945094505050509550959350505050565b610b38610f31565b6001600160a01b0316336001600160a01b031614610b5557600080fd5b610b74303383610b63610ba4565b6001600160a01b031692919061188f565b50565b600060405163eac08f1960e01b815260040161057e9190612330565b6000610b9f6000611919565b905090565b6000610b9f6029611919565b610bb8610f31565b6001600160a01b0316336001600160a01b031614610bd557600080fd5b610bde8161193e565b60008051602061324383398151915280546001600160581b0392909216640100000000026effffffffffffffffffffff000000001990921691909117905550565b610c27610b93565b6001600160a01b0316336001600160a01b031614610c4457600080fd5b6000805160206132438339815191526000610c6260208401846120e6565b6001600160a01b031614610ca057610c7d60208301836120e6565b6001820180546001600160a01b0319166001600160a01b03929092169190911790555b610cad826060013561193e565b81546001600160581b0391909116640100000000026effffffffffffffffffffff0000000019909116178155610ce9604083016020840161305b565b15610d925760018101805460ff60a01b1916600160a01b17905560005b610d136040840184613078565b9050811015610d90576001600283016000610d316040870187613078565b85818110610d4157610d41612375565b9050602002016020810190610d5691906120e6565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905580610d88816130d7565b915050610d06565b505b5050565b600080516020613243833981519152610dad610f31565b6001600160a01b0316336001600160a01b031614158015610ddb575060018101546001600160a01b03163314155b15610dfc57600060405163eac08f1960e01b815260040161057e9190612330565b805463ffffffff16816000610e10836130f0565b82546101009290920a63ffffffff8181021990931691831602179091558254604051911681527fd53ee127c4cc096a6aa01269ecbe5c887e5a1cbe71d83109974c55e865a0db82915060200160405180910390a150565b60006001610e73610fdd565b60ff1603610e8057503090565b610b9f610f31565b3360009081527f8db05f23e24c991e45d8dd3599daf8e419ee5ab93565cf65b18905286a24ec1660205260408120546000805160206132438339815191529060ff1680610f125750610ed8610b93565b6001600160a01b0316336001600160a01b0316148015610f1257506001600160a01b038316600090815260028201602052604090205460ff165b610f1b57600080fd5b610f29333086610b63610ba4565b509192915050565b6000610b9f6015611919565b6060610f47610f31565b610f4f610ba4565b6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610f8c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fb49190810190612266565b6040516020016104b0929190613113565b6000610b9f605d611954565b6000610b9f603d611954565b6000610b9f6014611976565b610ff1610f31565b6001600160a01b0316336001600160a01b03161461100e57600080fd5b60008051602061322383398151915280546001600160a01b0390811660009081527f8db05f23e24c991e45d8dd3599daf8e419ee5ab93565cf65b18905286a24ec166020526040808220805460ff1990811690915594909216808252919020805490931660011790925580546001600160a01b0319169091179055565b6000610b9f607d611954565b600060606110a3610b93565b6001600160a01b0316635c975abb6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111049190612313565b1561112557600860405163eac08f1960e01b815260040161057e9190612330565b60008051602061322383398151915254600160a81b900460ff161561116057600760405163eac08f1960e01b815260040161057e9190612330565b600061116c858561199b565b815192955090935091506111b990839061118890600190613163565b8151811061119857611198612375565b6020026020010151602001516060015184878060400190610d909190612934565b509250929050565b60006111cb610b93565b6001600160a01b031663f5f1f1a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611208573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9f9190612358565b604080517f2aef22f9d7df5f9d21c56d14029233f3fdaa91917727e1eb68e504d27072d6cd60208201527f044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d9181019190915246606082015230608082015260009060a00160405160208183030381529060405280519060200120905090565b6112b3610f31565b6001600160a01b0316336001600160a01b0316146112d057600080fd5b600080516020613223833981519152805460ff60a81b1916600160a81b1790556040517f43849b84f1a1ce86ba1205cd8a5d4fa1563bca4b169db452674f94b4b6ddaa6990600090a1565b8254604051606091600091611380917f679f3933bd13bd2e4ec6e9cde341ede07736ad7b635428a8a211e9cccb4393b09163ffffffff909116906020808901359188910193845263ffffffff9290921660208401526040830152606082015260800190565b60408051601f1981840301815291905280516020909101209050601960f81b600160f81b6113ac61122c565b6040516001600160f81b031993841660208201529290911660218301526022820152604281018290526062016040516020818303038152906040529150505b9392505050565b600061144c6020840180359061140890866120e6565b6040805160609290921b6bffffffffffffffffffffffff19166020808401919091526034808401949094528151808403909401845260549092019052815191012090565b905060006114586111c1565b6040516331a9108f60e11b8152600481018490529091506000906001600160a01b03831690636352211e90602401602060405180830381865afa1580156114a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114c79190612358565b60405163020604bf60e21b8152600481018590529091506000906001600160a01b0384169063081812fc90602401602060405180830381865afa158015611512573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115369190612358565b9050336001600160a01b038316148015906115635750816001600160a01b0316856001600160a01b031614155b80156115815750806001600160a01b0316856001600160a01b031614155b80156115fe5750611590610b93565b604051630642194560e41b81526001600160a01b0387811660048301529190911690636421945090602401602060405180830381865afa1580156115d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115fc9190612313565b155b156116b0576001600160a01b0381161561163557846001600160a01b0316816001600160a01b03161461163057600080fd5b6116b0565b60405163e985e9c560e01b81526001600160a01b038381166004830152868116602483015284169063e985e9c590604401602060405180830381865afa158015611683573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a79190612313565b6116b057600080fd5b600080516020613243833981519152600060016116f5836116d460408c018c612934565b6116e160408d018d612934565b6116ef9060a0810190613176565b3561131b565b805160209091012061170a60408b018b612934565b61171c9061010081019060e00161318c565b61172960408c018c612934565b610100013561173b60408d018d612934565b6040805160008152602081018083529590955260ff9093169284019290925260608301526101200135608082015260a0016020604051602081039080840390855afa15801561178e573d6000803e3d6000fd5b5050506020604051035190506117a2610f31565b6001600160a01b0316816001600160a01b0316141580156117d3575060018201546001600160a01b03828116911614155b80156117e757506001600160a01b03811615155b1561180857600160405163eac08f1960e01b815260040161057e9190612330565b5050505050505050565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806118895760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b604482015260640161057e565b50505050565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806119125760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b604482015260640161057e565b5050505050565b600080611930600119368181013560f01c90030190565b929092013560601c92915050565b6000600160581b821061195057600080fd5b5090565b60008061196b600119368181013560f01c90030190565b929092013592915050565b60008061198d600119368181013560f01c90030190565b929092013560f81c92915050565b6000606060006119ab85856113f2565b6119b3610b93565b6001600160a01b03166322d51d7e866119ca610e67565b6040518363ffffffff1660e01b81526004016119e79291906131a9565b6000604051808303816000875af1158015611a06573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611a2e91908101906131d3565b919450925090506000611a50611a476040880188612934565b60c00135611a77565b9050611a6f8582611a5f610ba4565b6001600160a01b03169190611b8e565b509250925092565b600080611a82610b93565b6001600160a01b031663017e7e586040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611ac1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ae59190612358565b90506001600160a01b03811615801590610f29576000611b03610b93565b6001600160a01b0316630f0245ad866040518263ffffffff1660e01b8152600401611b3091815260200190565b602060405180830381865afa158015611b4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b7191906124d8565b90508085039450611b858382611a5f610ba4565b50509192915050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806118895760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b604482015260640161057e565b6040518060400160405280611c19611c4f565b81526040805160a0810182526000808252602082810182905292820181905260608201819052608082015291015290565b905290565b6040518060a0016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000801916815260200160008152602001611c4a6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b600060208284031215611ccf57600080fd5b81356001600160e01b0319811681146113eb57600080fd5b60005b83811015611d02578181015183820152602001611cea565b50506000910152565b60008151808452611d23816020860160208601611ce7565b601f01601f19169290920160200192915050565b6020815260006113eb6020830184611d0b565b6001600160a01b0381168114610b7457600080fd5b600080600080600060808688031215611d7757600080fd5b8535611d8281611d4a565b94506020860135611d9281611d4a565b93506040860135925060608601356001600160401b0380821115611db557600080fd5b818801915088601f830112611dc957600080fd5b813581811115611dd857600080fd5b896020828501011115611dea57600080fd5b9699959850939650602001949392505050565b600060608284031215611e0f57600080fd5b50919050565b60008060808385031215611e2857600080fd5b611e328484611dfd565b946060939093013593505050565b60ff81168114610b7457600080fd5b8035611e5a81611e40565b919050565b600080600080600060808688031215611e7757600080fd5b853594506020860135611e8981611e40565b935060408601356001600160401b0380821115611ea557600080fd5b611eb189838a01611dfd565b94506060880135915080821115611ec757600080fd5b818801915088601f830112611edb57600080fd5b813581811115611eea57600080fd5b8960206101c083028501011115611dea57600080fd5b80516001600160a01b0390811683526020808301519091168184015260408083015181850152606080840151818601526080938401518051858701529283015160a08601529082015160c085015281015160e0840152015161010090910152565b611f6c828251611f00565b60209081015180516001600160581b03166101208401529081015160ff16610140830152604081015164ffffffffff908116610160840152606082015116610180830152608001516101a090910152565b600081518084526020808501945080840160005b83811015611ff857611fe4878351611f61565b6101c0969096019590820190600101611fd1565b509495945050505050565b60006101e080835261201781840186611fbd565b9150506113eb6020830184611f61565b60006020828403121561203957600080fd5b5035919050565b8015158114610b7457600080fd5b6000806040838503121561206157600080fd5b823561206c81611d4a565b9150602083013561207c81612040565b809150509250929050565b60006020828403121561209957600080fd5b81356001600160401b038111156120af57600080fd5b8201608081850312156113eb57600080fd5b600080604083850312156120d457600080fd5b82359150602083013561207c81611d4a565b6000602082840312156120f857600080fd5b81356113eb81611d4a565b6000806040838503121561211657600080fd5b82356001600160401b0381111561212c57600080fd5b61213885828601611dfd565b925050602083013561207c81611d4a565b8281526040602082015260006121626040830184611fbd565b949350505050565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b03811182821017156121a2576121a261216a565b60405290565b60405160a081016001600160401b03811182821017156121a2576121a261216a565b604080519081016001600160401b03811182821017156121a2576121a261216a565b60405161010081016001600160401b03811182821017156121a2576121a261216a565b604051601f8201601f191681016001600160401b03811182821017156122375761223761216a565b604052919050565b60006001600160401b038211156122585761225861216a565b50601f01601f191660200190565b60006020828403121561227857600080fd5b81516001600160401b0381111561228e57600080fd5b8201601f8101841361229f57600080fd5b80516122b26122ad8261223f565b61220f565b8181528560208385010111156122c757600080fd5b6122d8826020830160208601611ce7565b95945050505050565b694153542d5661756c742d60b01b81526000825161230681600a850160208701611ce7565b91909101600a0192915050565b60006020828403121561232557600080fd5b81516113eb81612040565b602081016009831061235257634e487b7160e01b600052602160045260246000fd5b91905290565b60006020828403121561236a57600080fd5b81516113eb81611d4a565b634e487b7160e01b600052603260045260246000fd5b6001600160581b0381168114610b7457600080fd5b64ffffffffff81168114610b7457600080fd5b80356123be8161238b565b6001600160581b0316825260208101356123d781611e40565b60ff16602083015260408101356123ed816123a0565b64ffffffffff908116604084015260608201359061240a826123a0565b166060830152608090810135910152565b803561242681611d4a565b6001600160a01b03908116835260208201359061244282611d4a565b8082166020850152505060408101356040830152606081013560608301526080810135608083015260a081013560a083015260c081013560c083015260e081013560e0830152610100808201358184015250610120610d908184018284016123b3565b6101c081016104e4828461241b565b600080604083850312156124c757600080fd5b505080516020909101519092909150565b6000602082840312156124ea57600080fd5b5051919050565b60006060828403121561250357600080fd5b61250b612180565b9050813561251881611e40565b815260208281013590820152604082013561253281611d4a565b604082015292915050565b60006001600160401b038211156125565761255661216a565b5060051b60200190565b600060a0828403121561257257600080fd5b61257a6121a8565b905081356125878161238b565b8152602082013561259781611e40565b602082015260408201356125aa816123a0565b604082015260608201356125bd816123a0565b806060830152506080820135608082015292915050565b60008183036101c08112156125e857600080fd5b6125f06121ca565b91506101208082121561260257600080fd5b61260a6121a8565b843561261581611d4a565b8152602085013561262581611d4a565b6020820152604085810135908201526060808601359082015260a0607f198401121561265057600080fd5b6126586121a8565b92506080850135835260a0850135602084015260c0850135604084015260e085013560608401526101008501356080840152826080820152808452506126a085828601612560565b6020840152505092915050565b600082601f8301126126be57600080fd5b813560206126ce6122ad8361253d565b8281526101c092830285018201928282019190878511156126ee57600080fd5b8387015b858110156127115761270489826125d4565b84529284019281016126f2565b5090979650505050505050565b600082601f83011261272f57600080fd5b813561273d6122ad8261223f565b81815284602083860101111561275257600080fd5b816020850160208301376000918101602001919091529392505050565b60006040828403121561278157600080fd5b6127896121ca565b9050813581526020808301356001600160401b038111156127a957600080fd5b8301601f810185136127ba57600080fd5b80356127c86122ad8261253d565b81815260059190911b820183019083810190878311156127e757600080fd5b928401925b82841015612805578335825292840192908401906127ec565b8085870152505050505092915050565b60006060823603121561282757600080fd5b61282f612180565b823561283a81611d4a565b81526020838101359082015260408301356001600160401b038082111561286057600080fd5b8185019150610140823603121561287657600080fd5b61287e6121ec565b61288836846124f1565b815260608301358281111561289c57600080fd5b6128a8368286016126ad565b6020830152506080830135828111156128c057600080fd5b6128cc3682860161271e565b60408301525060a0830135828111156128e457600080fd5b6128f03682860161276f565b60608301525060c0830135608082015261290c60e08401611e4f565b60a082015261010083013560c08201526101209092013560e083015250604082015292915050565b6000823561013e1983360301811261294b57600080fd5b9190910192915050565b6000808335601e1984360301811261296c57600080fd5b83016020810192503590506001600160401b0381111561298b57600080fd5b6101c08102360382131561299e57600080fd5b9250929050565b81835260208301925060008160005b848110156129da576129c6868361241b565b6101c09586019591909101906001016129b4565b5093949350505050565b6000808335601e198436030181126129fb57600080fd5b83016020810192503590506001600160401b03811115612a1a57600080fd5b80360382131561299e57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008235603e19833603018112612a6857600080fd5b90910192915050565b8035825260006020820135601e19833603018112612a8e57600080fd5b82016020810190356001600160401b03811115612aaa57600080fd5b8060051b803603831315612abd57600080fd5b60406020870181905286018290526001600160fb1b03821115612adf57600080fd5b8083606088013794909401606001949350505050565b60008135612b0281611d4a565b6001600160a01b039081168452602083810135908501526040830135903684900361013e19018212612b3357600080fd5b60606040860152908301908135612b4981611e40565b60ff166060860152602082013560808601526040820135612b6981611d4a565b1660a0850152612b7c6060820182612955565b6101408060c0880152612b946101a0880183856129a5565b9250612ba360808501856129e4565b9250605f19808986030160e08a0152612bbd858584612a29565b9450612bcc60a0870187612a52565b935061010091508089860301828a015250612be78484612a71565b9350610120925060c085013583890152612c0360e08601611e4f565b60ff811689840152508401356101608801525090910135610180909401939093525090919050565b604081526000612c3e6040830185612af5565b90508260208301529392505050565b6000818303610120811215612c6157600080fd5b612c696121a8565b91508251612c7681611d4a565b82526020830151612c8681611d4a565b6020830152604083810151908301526060808401519083015260a0607f1982011215612cb157600080fd5b50612cba6121a8565b6080830151815260a0830151602082015260c0830151604082015260e0830151606082015261010083015160808201528060808301525092915050565b60006101208284031215612d0a57600080fd5b6113eb8383612c4d565b60006101c08284031215612d2757600080fd5b6113eb83836125d4565b600060408301825184526020808401516040828701528281518085526060880191508383019450600092505b80831015612d7d5784518252938301936001929092019190830190612d5d565b509695505050505050565b60006101a0825184526020830151602085015260018060a01b0360408401511660408501526060830151612dbf6060860182611f00565b506080830151816101808601526122d882860182611fbd565b60208152600082516060602084015260018060a01b038151166080840152602081015160a084015260408101519050606060c0840152612e3c60e084018251805160ff168252602080820151908301526040908101516001600160a01b0316910152565b602081015161014084810152612e56610220850182611fbd565b9050604082015160df198086840301610160870152612e758383611d0b565b925060608401519150808684030161018087015250612e948282612d31565b91505060808201516101a085015260a0820151612eb76101c086018260ff169052565b5060c08201516101e085015260e090910151610200840152602084015160ff81166040850152906040850151848203601f1901606086015291506122d88183612d88565b60008183036101c0811215612f0f57600080fd5b612f176121ca565b9150612f238484612c4d565b825260a061011f1982011215612f3857600080fd5b50612f416121a8565b610120830151612f508161238b565b8152610140830151612f6181611e40565b6020820152610160830151612f75816123a0565b6040820152610180830151612f89816123a0565b806060830152506101a083015160808201528060208301525092915050565b600082601f830112612fb957600080fd5b81516020612fc96122ad8361253d565b8281526101c09283028501820192828201919087851115612fe957600080fd5b8387015b8581101561271157612fff8982612efb565b8452928401928101612fed565b6000806101e0838503121561302057600080fd5b82516001600160401b0381111561303657600080fd5b61304285828601612fa8565b9250506130528460208501612efb565b90509250929050565b60006020828403121561306d57600080fd5b81356113eb81612040565b6000808335601e1984360301811261308f57600080fd5b8301803591506001600160401b038211156130a957600080fd5b6020019150600581901b360382131561299e57600080fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016130e9576130e96130c1565b5060010190565b600063ffffffff808316818103613109576131096130c1565b6001019392505050565b6420a9aa16ab60d91b81526bffffffffffffffffffffffff198360601b166005820152602d60f81b60198201526000825161315581601a850160208701611ce7565b91909101601a019392505050565b818103818111156104e4576104e46130c1565b60008235603e1983360301811261294b57600080fd5b60006020828403121561319e57600080fd5b81356113eb81611e40565b6040815260006131bc6040830185612af5565b905060018060a01b03831660208301529392505050565b6000806000606084860312156131e857600080fd5b8351925060208401516001600160401b0381111561320557600080fd5b61321186828701612fa8565b92505060408401519050925092509256fe8db05f23e24c991e45d8dd3599daf8e419ee5ab93565cf65b18905286a24ec158db05f23e24c991e45d8dd3599daf8e419ee5ab93565cf65b18905286a24ec14a26469706673582212201b6cad4f5bfb70fee6ce0482f063b0a5ca3d5fbe03f402cce82dcf38a17f13a464736f6c63430008110033'

type VaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: VaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class Vault__factory extends ContractFactory {
  constructor(...args: VaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Vault> {
    return super.deploy(overrides || {}) as Promise<Vault>
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): Vault {
    return super.attach(address) as Vault
  }
  override connect(signer: Signer): Vault__factory {
    return super.connect(signer) as Vault__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): VaultInterface {
    return new utils.Interface(_abi) as VaultInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Vault {
    return new Contract(address, _abi, signerOrProvider) as Vault
  }
}
