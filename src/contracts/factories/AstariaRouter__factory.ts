/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../common'
import type { AstariaRouter, AstariaRouterInterface } from '../AstariaRouter'

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'CreateFail',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'enum IAstariaRouter.CollateralStates',
        name: '',
        type: 'uint8',
      },
    ],
    name: 'InvalidCollateralState',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'enum IAstariaRouter.CommitmentState',
        name: '',
        type: 'uint8',
      },
    ],
    name: 'InvalidCommitmentState',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'InvalidEpochLength',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidFileData',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'enum IAstariaRouter.LienState',
        name: '',
        type: 'uint8',
      },
    ],
    name: 'InvalidLienState',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'InvalidRefinanceCollateral',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'InvalidRefinanceDuration',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'InvalidRefinanceRate',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'InvalidSenderForCollateral',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'enum IPublicVault.InvalidStates',
        name: '',
        type: 'uint8',
      },
    ],
    name: 'InvalidState',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    name: 'InvalidStrategy',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'InvalidVault',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'enum IAstariaRouter.VaultState',
        name: '',
        type: 'uint8',
      },
    ],
    name: 'InvalidVaultState',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MaxAmountError',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MaxSharesError',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MinAmountError',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MinSharesError',
    type: 'error',
  },
  {
    inputs: [],
    name: 'UnsupportedFile',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'contract Authority',
        name: 'newAuthority',
        type: 'address',
      },
    ],
    name: 'AuthorityUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'enum IAstariaRouter.FileType',
        name: 'what',
        type: 'uint8',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'FileUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'collateralId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'position',
        type: 'uint256',
      },
    ],
    name: 'Liquidation',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'strategist',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'delegate',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'vault',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint8',
        name: 'vaultType',
        type: 'uint8',
      },
    ],
    name: 'NewVault',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    inputs: [],
    name: 'BEACON_PROXY_IMPLEMENTATION',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'COLLATERAL_TOKEN',
    outputs: [
      {
        internalType: 'contract ICollateralToken',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LIEN_TOKEN',
    outputs: [
      {
        internalType: 'contract ILienToken',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'TRANSFER_PROXY',
    outputs: [
      {
        internalType: 'contract ITransferProxy',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: '__acceptGuardian',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: '__emergencyPause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: '__emergencyUnpause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: '__renounceGuardian',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'authority',
    outputs: [
      {
        internalType: 'contract Authority',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint8',
                name: 'collateralType',
                type: 'uint8',
              },
              {
                internalType: 'address',
                name: 'token',
                type: 'address',
              },
              {
                internalType: 'address',
                name: 'vault',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'strategyRoot',
                type: 'bytes32',
              },
              {
                internalType: 'uint256',
                name: 'collateralId',
                type: 'uint256',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'maxAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'rate',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'duration',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'maxPotentialDebt',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'liquidationInitialAsk',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ILienToken.Details',
                name: 'details',
                type: 'tuple',
              },
            ],
            internalType: 'struct ILienToken.Lien',
            name: 'lien',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint88',
                name: 'amount',
                type: 'uint88',
              },
              {
                internalType: 'uint40',
                name: 'last',
                type: 'uint40',
              },
              {
                internalType: 'uint40',
                name: 'end',
                type: 'uint40',
              },
              {
                internalType: 'uint256',
                name: 'lienId',
                type: 'uint256',
              },
            ],
            internalType: 'struct ILienToken.Point',
            name: 'point',
            type: 'tuple',
          },
        ],
        internalType: 'struct ILienToken.Stack',
        name: 'stack',
        type: 'tuple',
      },
    ],
    name: 'canLiquidate',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'tokenContract',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'tokenId',
            type: 'uint256',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint8',
                    name: 'version',
                    type: 'uint8',
                  },
                  {
                    internalType: 'uint256',
                    name: 'deadline',
                    type: 'uint256',
                  },
                  {
                    internalType: 'address',
                    name: 'vault',
                    type: 'address',
                  },
                ],
                internalType: 'struct IAstariaRouter.StrategyDetailsParam',
                name: 'strategy',
                type: 'tuple',
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: 'uint8',
                        name: 'collateralType',
                        type: 'uint8',
                      },
                      {
                        internalType: 'address',
                        name: 'token',
                        type: 'address',
                      },
                      {
                        internalType: 'address',
                        name: 'vault',
                        type: 'address',
                      },
                      {
                        internalType: 'bytes32',
                        name: 'strategyRoot',
                        type: 'bytes32',
                      },
                      {
                        internalType: 'uint256',
                        name: 'collateralId',
                        type: 'uint256',
                      },
                      {
                        components: [
                          {
                            internalType: 'uint256',
                            name: 'maxAmount',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'rate',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'duration',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'maxPotentialDebt',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'liquidationInitialAsk',
                            type: 'uint256',
                          },
                        ],
                        internalType: 'struct ILienToken.Details',
                        name: 'details',
                        type: 'tuple',
                      },
                    ],
                    internalType: 'struct ILienToken.Lien',
                    name: 'lien',
                    type: 'tuple',
                  },
                  {
                    components: [
                      {
                        internalType: 'uint88',
                        name: 'amount',
                        type: 'uint88',
                      },
                      {
                        internalType: 'uint40',
                        name: 'last',
                        type: 'uint40',
                      },
                      {
                        internalType: 'uint40',
                        name: 'end',
                        type: 'uint40',
                      },
                      {
                        internalType: 'uint256',
                        name: 'lienId',
                        type: 'uint256',
                      },
                    ],
                    internalType: 'struct ILienToken.Point',
                    name: 'point',
                    type: 'tuple',
                  },
                ],
                internalType: 'struct ILienToken.Stack[]',
                name: 'stack',
                type: 'tuple[]',
              },
              {
                internalType: 'bytes',
                name: 'nlrDetails',
                type: 'bytes',
              },
              {
                components: [
                  {
                    internalType: 'bytes32',
                    name: 'root',
                    type: 'bytes32',
                  },
                  {
                    internalType: 'bytes32[]',
                    name: 'proof',
                    type: 'bytes32[]',
                  },
                ],
                internalType: 'struct IAstariaRouter.MerkleData',
                name: 'merkle',
                type: 'tuple',
              },
              {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
              },
              {
                internalType: 'uint8',
                name: 'v',
                type: 'uint8',
              },
              {
                internalType: 'bytes32',
                name: 'r',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32',
                name: 's',
                type: 'bytes32',
              },
            ],
            internalType: 'struct IAstariaRouter.NewLienRequest',
            name: 'lienRequest',
            type: 'tuple',
          },
        ],
        internalType: 'struct IAstariaRouter.Commitment[]',
        name: 'commitments',
        type: 'tuple[]',
      },
    ],
    name: 'commitToLiens',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'lienIds',
        type: 'uint256[]',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'uint8',
                name: 'collateralType',
                type: 'uint8',
              },
              {
                internalType: 'address',
                name: 'token',
                type: 'address',
              },
              {
                internalType: 'address',
                name: 'vault',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'strategyRoot',
                type: 'bytes32',
              },
              {
                internalType: 'uint256',
                name: 'collateralId',
                type: 'uint256',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'maxAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'rate',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'duration',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'maxPotentialDebt',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'liquidationInitialAsk',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ILienToken.Details',
                name: 'details',
                type: 'tuple',
              },
            ],
            internalType: 'struct ILienToken.Lien',
            name: 'lien',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint88',
                name: 'amount',
                type: 'uint88',
              },
              {
                internalType: 'uint40',
                name: 'last',
                type: 'uint40',
              },
              {
                internalType: 'uint40',
                name: 'end',
                type: 'uint40',
              },
              {
                internalType: 'uint256',
                name: 'lienId',
                type: 'uint256',
              },
            ],
            internalType: 'struct ILienToken.Point',
            name: 'point',
            type: 'tuple',
          },
        ],
        internalType: 'struct ILienToken.Stack[]',
        name: 'stack',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minSharesOut',
        type: 'uint256',
      },
    ],
    name: 'deposit',
    outputs: [
      {
        internalType: 'uint256',
        name: 'sharesOut',
        type: 'uint256',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'minSharesOut',
        type: 'uint256',
      },
    ],
    name: 'depositMax',
    outputs: [
      {
        internalType: 'uint256',
        name: 'sharesOut',
        type: 'uint256',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minSharesOut',
        type: 'uint256',
      },
    ],
    name: 'depositToVault',
    outputs: [
      {
        internalType: 'uint256',
        name: 'sharesOut',
        type: 'uint256',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'feeTo',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'enum IAstariaRouter.FileType',
            name: 'what',
            type: 'uint8',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        internalType: 'struct IAstariaRouter.File',
        name: 'incoming',
        type: 'tuple',
      },
    ],
    name: 'file',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'enum IAstariaRouter.FileType',
            name: 'what',
            type: 'uint8',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        internalType: 'struct IAstariaRouter.File[]',
        name: 'files',
        type: 'tuple[]',
      },
    ],
    name: 'fileBatch',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'enum IAstariaRouter.FileType',
            name: 'what',
            type: 'uint8',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        internalType: 'struct IAstariaRouter.File[]',
        name: 'file',
        type: 'tuple[]',
      },
    ],
    name: 'fileGuardian',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'includeBuffer',
        type: 'bool',
      },
    ],
    name: 'getAuctionWindow',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'remainingInterestIn',
        type: 'uint256',
      },
    ],
    name: 'getBuyoutFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'implType',
        type: 'uint8',
      },
    ],
    name: 'getImpl',
    outputs: [
      {
        internalType: 'address',
        name: 'impl',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amountIn',
        type: 'uint256',
      },
    ],
    name: 'getLiquidatorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amountIn',
        type: 'uint256',
      },
    ],
    name: 'getProtocolFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract Authority',
        name: '_AUTHORITY',
        type: 'address',
      },
      {
        internalType: 'contract ICollateralToken',
        name: '_COLLATERAL_TOKEN',
        type: 'address',
      },
      {
        internalType: 'contract ILienToken',
        name: '_LIEN_TOKEN',
        type: 'address',
      },
      {
        internalType: 'contract ITransferProxy',
        name: '_TRANSFER_PROXY',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_VAULT_IMPL',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_SOLO_IMPL',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_WITHDRAW_IMPL',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_BEACON_PROXY_IMPL',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_CLEARING_HOUSE_IMPL',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint8',
            name: 'collateralType',
            type: 'uint8',
          },
          {
            internalType: 'address',
            name: 'token',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'vault',
            type: 'address',
          },
          {
            internalType: 'bytes32',
            name: 'strategyRoot',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'collateralId',
            type: 'uint256',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'maxAmount',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'rate',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'duration',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'maxPotentialDebt',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'liquidationInitialAsk',
                type: 'uint256',
              },
            ],
            internalType: 'struct ILienToken.Details',
            name: 'details',
            type: 'tuple',
          },
        ],
        internalType: 'struct ILienToken.Lien',
        name: 'newLien',
        type: 'tuple',
      },
      {
        internalType: 'uint8',
        name: 'position',
        type: 'uint8',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'uint8',
                name: 'collateralType',
                type: 'uint8',
              },
              {
                internalType: 'address',
                name: 'token',
                type: 'address',
              },
              {
                internalType: 'address',
                name: 'vault',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'strategyRoot',
                type: 'bytes32',
              },
              {
                internalType: 'uint256',
                name: 'collateralId',
                type: 'uint256',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'maxAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'rate',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'duration',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'maxPotentialDebt',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'liquidationInitialAsk',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ILienToken.Details',
                name: 'details',
                type: 'tuple',
              },
            ],
            internalType: 'struct ILienToken.Lien',
            name: 'lien',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint88',
                name: 'amount',
                type: 'uint88',
              },
              {
                internalType: 'uint40',
                name: 'last',
                type: 'uint40',
              },
              {
                internalType: 'uint40',
                name: 'end',
                type: 'uint40',
              },
              {
                internalType: 'uint256',
                name: 'lienId',
                type: 'uint256',
              },
            ],
            internalType: 'struct ILienToken.Point',
            name: 'point',
            type: 'tuple',
          },
        ],
        internalType: 'struct ILienToken.Stack[]',
        name: 'stack',
        type: 'tuple[]',
      },
    ],
    name: 'isValidRefinance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vault',
        type: 'address',
      },
    ],
    name: 'isValidVault',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint8',
                name: 'collateralType',
                type: 'uint8',
              },
              {
                internalType: 'address',
                name: 'token',
                type: 'address',
              },
              {
                internalType: 'address',
                name: 'vault',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'strategyRoot',
                type: 'bytes32',
              },
              {
                internalType: 'uint256',
                name: 'collateralId',
                type: 'uint256',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'maxAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'rate',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'duration',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'maxPotentialDebt',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'liquidationInitialAsk',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ILienToken.Details',
                name: 'details',
                type: 'tuple',
              },
            ],
            internalType: 'struct ILienToken.Lien',
            name: 'lien',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint88',
                name: 'amount',
                type: 'uint88',
              },
              {
                internalType: 'uint40',
                name: 'last',
                type: 'uint40',
              },
              {
                internalType: 'uint40',
                name: 'end',
                type: 'uint40',
              },
              {
                internalType: 'uint256',
                name: 'lienId',
                type: 'uint256',
              },
            ],
            internalType: 'struct ILienToken.Point',
            name: 'point',
            type: 'tuple',
          },
        ],
        internalType: 'struct ILienToken.Stack[]',
        name: 'stack',
        type: 'tuple[]',
      },
      {
        internalType: 'uint8',
        name: 'position',
        type: 'uint8',
      },
    ],
    name: 'liquidate',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'offerer',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'zone',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'enum ItemType',
                name: 'itemType',
                type: 'uint8',
              },
              {
                internalType: 'address',
                name: 'token',
                type: 'address',
              },
              {
                internalType: 'uint256',
                name: 'identifierOrCriteria',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'startAmount',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'endAmount',
                type: 'uint256',
              },
            ],
            internalType: 'struct OfferItem[]',
            name: 'offer',
            type: 'tuple[]',
          },
          {
            components: [
              {
                internalType: 'enum ItemType',
                name: 'itemType',
                type: 'uint8',
              },
              {
                internalType: 'address',
                name: 'token',
                type: 'address',
              },
              {
                internalType: 'uint256',
                name: 'identifierOrCriteria',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'startAmount',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'endAmount',
                type: 'uint256',
              },
              {
                internalType: 'address payable',
                name: 'recipient',
                type: 'address',
              },
            ],
            internalType: 'struct ConsiderationItem[]',
            name: 'consideration',
            type: 'tuple[]',
          },
          {
            internalType: 'enum OrderType',
            name: 'orderType',
            type: 'uint8',
          },
          {
            internalType: 'uint256',
            name: 'startTime',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'endTime',
            type: 'uint256',
          },
          {
            internalType: 'bytes32',
            name: 'zoneHash',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'salt',
            type: 'uint256',
          },
          {
            internalType: 'bytes32',
            name: 'conduitKey',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'totalOriginalConsiderationItems',
            type: 'uint256',
          },
        ],
        internalType: 'struct OrderParameters',
        name: 'listedOrder',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'maxAmountIn',
        type: 'uint256',
      },
    ],
    name: 'mint',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amountIn',
        type: 'uint256',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes[]',
        name: 'data',
        type: 'bytes[]',
      },
    ],
    name: 'multicall',
    outputs: [
      {
        internalType: 'bytes[]',
        name: 'results',
        type: 'bytes[]',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'epochLength',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'delegate',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'underlying',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'vaultFee',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'allowListEnabled',
        type: 'bool',
      },
      {
        internalType: 'address[]',
        name: 'allowList',
        type: 'address[]',
      },
      {
        internalType: 'uint256',
        name: 'depositCap',
        type: 'uint256',
      },
    ],
    name: 'newPublicVault',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'delegate',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'underlying',
        type: 'address',
      },
    ],
    name: 'newVault',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
    ],
    name: 'pullToken',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minAmountOut',
        type: 'uint256',
      },
    ],
    name: 'redeem',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amountOut',
        type: 'uint256',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IPublicVault',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'uint64',
        name: 'epoch',
        type: 'uint64',
      },
    ],
    name: 'redeemFutureEpoch',
    outputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'minAmountOut',
        type: 'uint256',
      },
    ],
    name: 'redeemMax',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amountOut',
        type: 'uint256',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'tokenContract',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'tokenId',
            type: 'uint256',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint8',
                    name: 'version',
                    type: 'uint8',
                  },
                  {
                    internalType: 'uint256',
                    name: 'deadline',
                    type: 'uint256',
                  },
                  {
                    internalType: 'address',
                    name: 'vault',
                    type: 'address',
                  },
                ],
                internalType: 'struct IAstariaRouter.StrategyDetailsParam',
                name: 'strategy',
                type: 'tuple',
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: 'uint8',
                        name: 'collateralType',
                        type: 'uint8',
                      },
                      {
                        internalType: 'address',
                        name: 'token',
                        type: 'address',
                      },
                      {
                        internalType: 'address',
                        name: 'vault',
                        type: 'address',
                      },
                      {
                        internalType: 'bytes32',
                        name: 'strategyRoot',
                        type: 'bytes32',
                      },
                      {
                        internalType: 'uint256',
                        name: 'collateralId',
                        type: 'uint256',
                      },
                      {
                        components: [
                          {
                            internalType: 'uint256',
                            name: 'maxAmount',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'rate',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'duration',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'maxPotentialDebt',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'liquidationInitialAsk',
                            type: 'uint256',
                          },
                        ],
                        internalType: 'struct ILienToken.Details',
                        name: 'details',
                        type: 'tuple',
                      },
                    ],
                    internalType: 'struct ILienToken.Lien',
                    name: 'lien',
                    type: 'tuple',
                  },
                  {
                    components: [
                      {
                        internalType: 'uint88',
                        name: 'amount',
                        type: 'uint88',
                      },
                      {
                        internalType: 'uint40',
                        name: 'last',
                        type: 'uint40',
                      },
                      {
                        internalType: 'uint40',
                        name: 'end',
                        type: 'uint40',
                      },
                      {
                        internalType: 'uint256',
                        name: 'lienId',
                        type: 'uint256',
                      },
                    ],
                    internalType: 'struct ILienToken.Point',
                    name: 'point',
                    type: 'tuple',
                  },
                ],
                internalType: 'struct ILienToken.Stack[]',
                name: 'stack',
                type: 'tuple[]',
              },
              {
                internalType: 'bytes',
                name: 'nlrDetails',
                type: 'bytes',
              },
              {
                components: [
                  {
                    internalType: 'bytes32',
                    name: 'root',
                    type: 'bytes32',
                  },
                  {
                    internalType: 'bytes32[]',
                    name: 'proof',
                    type: 'bytes32[]',
                  },
                ],
                internalType: 'struct IAstariaRouter.MerkleData',
                name: 'merkle',
                type: 'tuple',
              },
              {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
              },
              {
                internalType: 'uint8',
                name: 'v',
                type: 'uint8',
              },
              {
                internalType: 'bytes32',
                name: 'r',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32',
                name: 's',
                type: 'bytes32',
              },
            ],
            internalType: 'struct IAstariaRouter.NewLienRequest',
            name: 'lienRequest',
            type: 'tuple',
          },
        ],
        internalType: 'struct IAstariaRouter.Commitment',
        name: 'params',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: 'requestLienPosition',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'uint8',
                name: 'collateralType',
                type: 'uint8',
              },
              {
                internalType: 'address',
                name: 'token',
                type: 'address',
              },
              {
                internalType: 'address',
                name: 'vault',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'strategyRoot',
                type: 'bytes32',
              },
              {
                internalType: 'uint256',
                name: 'collateralId',
                type: 'uint256',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'maxAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'rate',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'duration',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'maxPotentialDebt',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'liquidationInitialAsk',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ILienToken.Details',
                name: 'details',
                type: 'tuple',
              },
            ],
            internalType: 'struct ILienToken.Lien',
            name: 'lien',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint88',
                name: 'amount',
                type: 'uint88',
              },
              {
                internalType: 'uint40',
                name: 'last',
                type: 'uint40',
              },
              {
                internalType: 'uint40',
                name: 'end',
                type: 'uint40',
              },
              {
                internalType: 'uint256',
                name: 'lienId',
                type: 'uint256',
              },
            ],
            internalType: 'struct ILienToken.Point',
            name: 'point',
            type: 'tuple',
          },
        ],
        internalType: 'struct ILienToken.Stack[]',
        name: '',
        type: 'tuple[]',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract Authority',
        name: 'newAuthority',
        type: 'address',
      },
    ],
    name: 'setAuthority',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_guardian',
        type: 'address',
      },
    ],
    name: 'setNewGuardian',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'tokenContract',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'tokenId',
            type: 'uint256',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint8',
                    name: 'version',
                    type: 'uint8',
                  },
                  {
                    internalType: 'uint256',
                    name: 'deadline',
                    type: 'uint256',
                  },
                  {
                    internalType: 'address',
                    name: 'vault',
                    type: 'address',
                  },
                ],
                internalType: 'struct IAstariaRouter.StrategyDetailsParam',
                name: 'strategy',
                type: 'tuple',
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: 'uint8',
                        name: 'collateralType',
                        type: 'uint8',
                      },
                      {
                        internalType: 'address',
                        name: 'token',
                        type: 'address',
                      },
                      {
                        internalType: 'address',
                        name: 'vault',
                        type: 'address',
                      },
                      {
                        internalType: 'bytes32',
                        name: 'strategyRoot',
                        type: 'bytes32',
                      },
                      {
                        internalType: 'uint256',
                        name: 'collateralId',
                        type: 'uint256',
                      },
                      {
                        components: [
                          {
                            internalType: 'uint256',
                            name: 'maxAmount',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'rate',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'duration',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'maxPotentialDebt',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'liquidationInitialAsk',
                            type: 'uint256',
                          },
                        ],
                        internalType: 'struct ILienToken.Details',
                        name: 'details',
                        type: 'tuple',
                      },
                    ],
                    internalType: 'struct ILienToken.Lien',
                    name: 'lien',
                    type: 'tuple',
                  },
                  {
                    components: [
                      {
                        internalType: 'uint88',
                        name: 'amount',
                        type: 'uint88',
                      },
                      {
                        internalType: 'uint40',
                        name: 'last',
                        type: 'uint40',
                      },
                      {
                        internalType: 'uint40',
                        name: 'end',
                        type: 'uint40',
                      },
                      {
                        internalType: 'uint256',
                        name: 'lienId',
                        type: 'uint256',
                      },
                    ],
                    internalType: 'struct ILienToken.Point',
                    name: 'point',
                    type: 'tuple',
                  },
                ],
                internalType: 'struct ILienToken.Stack[]',
                name: 'stack',
                type: 'tuple[]',
              },
              {
                internalType: 'bytes',
                name: 'nlrDetails',
                type: 'bytes',
              },
              {
                components: [
                  {
                    internalType: 'bytes32',
                    name: 'root',
                    type: 'bytes32',
                  },
                  {
                    internalType: 'bytes32[]',
                    name: 'proof',
                    type: 'bytes32[]',
                  },
                ],
                internalType: 'struct IAstariaRouter.MerkleData',
                name: 'merkle',
                type: 'tuple',
              },
              {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
              },
              {
                internalType: 'uint8',
                name: 'v',
                type: 'uint8',
              },
              {
                internalType: 'bytes32',
                name: 'r',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32',
                name: 's',
                type: 'bytes32',
              },
            ],
            internalType: 'struct IAstariaRouter.NewLienRequest',
            name: 'lienRequest',
            type: 'tuple',
          },
        ],
        internalType: 'struct IAstariaRouter.Commitment',
        name: 'commitment',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'timeToSecondEpochEnd',
        type: 'uint256',
      },
    ],
    name: 'validateCommitment',
    outputs: [
      {
        components: [
          {
            internalType: 'uint8',
            name: 'collateralType',
            type: 'uint8',
          },
          {
            internalType: 'address',
            name: 'token',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'vault',
            type: 'address',
          },
          {
            internalType: 'bytes32',
            name: 'strategyRoot',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'collateralId',
            type: 'uint256',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'maxAmount',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'rate',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'duration',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'maxPotentialDebt',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'liquidationInitialAsk',
                type: 'uint256',
              },
            ],
            internalType: 'struct ILienToken.Details',
            name: 'details',
            type: 'tuple',
          },
        ],
        internalType: 'struct ILienToken.Lien',
        name: 'lien',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'maxSharesOut',
        type: 'uint256',
      },
    ],
    name: 'withdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: 'sharesOut',
        type: 'uint256',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
] as const

const _bytecode =
  '0x60806040523480156200001157600080fd5b506200001c62000022565b62000147565b60006200002e620000ef565b8054909150610100900460ff16156200009d5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b805460ff9081161015620000ec57805460ff191660ff90811782556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6000806200011f60017fe54d104cc32597338d9a7867d41ca0c8fb6144529e0565413f4b3671fc57878562000125565b92915050565b818103818111156200011f57634e487b7160e01b600052601160045260246000fd5b615f1380620001576000396000f3fe60806040526004361061025c5760003560e01c80638da5cb5b11610144578063ca17ba75116100b6578063e9edc4771161007a578063e9edc477146106ae578063ed01c6e5146106ce578063f2fde38b146106e1578063f5e95acb14610701578063f5f1f1a714610721578063f943028c1461073657600080fd5b8063ca17ba751461060c578063d54aa70a1461062c578063da0f224b14610641578063e4f40d451461066e578063e87f7c311461068e57600080fd5b8063ac9650d811610108578063ac9650d81461057a578063b05e52fd1461059a578063b3f1c93d146105ba578063bce1e58b146105cd578063bf7e214f146105e2578063c65a7ecf146105f757600080fd5b80638da5cb5b1461050857806396d6401d1461051d5780639c37b27f14610532578063a246bd3014610547578063aaf6b93b1461055a57600080fd5b806345be6867116101dd578063609a8b8c116101a1578063609a8b8c14610460578063642194501461048257806373d15414146104a25780637a9e5e4b146104b55780637bfe950c146104d55780637fdfeead146104e857600080fd5b806345be6867146103b95780634be47418146103e8578063540e6ee0146103fb57806354d846281461042b5780635c975abb1461044b57600080fd5b806320e8c5651161022457806320e8c5651461031657806322ba6a331461032957806324554e3614610349578063349d947b1461037757806341700b97146103a457600080fd5b8063017e7e58146102615780630472a61d146102935780630f0245ad146102b35780631276cf53146102e15780631ff0c9d614610301575b600080fd5b34801561026d57600080fd5b50610276610749565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561029f57600080fd5b506102766102ae366004613fcf565b610767565b3480156102bf57600080fd5b506102d36102ce366004613fec565b6107dd565b60405190815260200161028a565b3480156102ed57600080fd5b506102d36102fc366004613fec565b610819565b34801561030d57600080fd5b5061027661084e565b6102d361032436600461401a565b61086c565b34801561033557600080fd5b506102766103443660046140b9565b6108b6565b34801561035557600080fd5b50610369610364366004614603565b6109a0565b60405161028a9291906148bb565b34801561038357600080fd5b50610397610392366004614920565b610b9e565b60405161028a9190614964565b3480156103b057600080fd5b50610276610bc1565b3480156103c557600080fd5b506103d96103d4366004614973565b610bdf565b60405161028a939291906149c4565b6102d36103f636600461401a565b610e58565b34801561040757600080fd5b5061041b6104163660046149ed565b610e98565b604051901515815260200161028a565b34801561043757600080fd5b50610276610446366004614a0a565b610f54565b34801561045757600080fd5b5061041b610ffa565b34801561046c57600080fd5b5061048061047b366004614a38565b61100d565b005b34801561048e57600080fd5b5061041b61049d366004614a79565b611083565b6104806104b0366004614a96565b6110b2565b3480156104c157600080fd5b506104806104d0366004614a79565b61113d565b6102d36104e336600461401a565b611238565b3480156104f457600080fd5b506102d3610503366004614ad8565b611278565b34801561051457600080fd5b50610276611334565b34801561052957600080fd5b5061027661134d565b34801561053e57600080fd5b5061048061136b565b6102d3610555366004614b37565b6113c1565b34801561056657600080fd5b506102d3610575366004613fec565b6114d3565b61058d610588366004614a38565b61150b565b60405161028a9190614bc8565b3480156105a657600080fd5b506104806105b5366004614c2a565b611662565b6102d36105c836600461401a565b6116a0565b3480156105d957600080fd5b506104806116e0565b3480156105ee57600080fd5b50610276611741565b34801561060357600080fd5b5061048061175d565b34801561061857600080fd5b50610480610627366004614a38565b6117e2565b34801561063857600080fd5b50610480611b35565b34801561064d57600080fd5b5061066161065c366004614c64565b611b99565b60405161028a9190614dc9565b34801561067a57600080fd5b5061041b610689366004614ea3565b611e71565b34801561069a57600080fd5b506104806106a9366004614a79565b61200c565b3480156106ba57600080fd5b506102d36106c9366004614f41565b61205c565b6102d36106dc366004614b37565b6120a4565b3480156106ed57600080fd5b506104806106fc366004614a79565b61221f565b34801561070d57600080fd5b5061048061071c366004614f5e565b6122a9565b34801561072d57600080fd5b50610276612634565b6102d361074436600461401a565b612652565b6000806107546126cc565b600501546001600160a01b031692915050565b60006107716126cc565b60ff83166000908152600a9190910160205260409020546001600160a01b03169050806107d85760405162461bcd60e51b815260206004820152601060248201526f1d5b9cdd5c1c1bdc9d19590bda5b5c1b60821b60448201526064015b60405180910390fd5b919050565b6000806107e86126cc565b805490915061081290849063ffffffff600160c01b8204811691600160e01b90048116906126fa16565b9392505050565b6000806108246126cc565b805490915061081290849063ffffffff600160401b8204811691600160601b90048116906126fa16565b6000806108596126cc565b600601546001600160a01b031692915050565b60008461087881611083565b6108a0576040516357b980d760e11b81526001600160a01b03821660048201526024016107cf565b6108ac86868686612718565b9695505050505050565b60006108c0610ffa565b156108dd5760405162461bcd60e51b81526004016107cf9061501a565b60006108e76126cc565b8054909150600160a01b900463ffffffff168a101561091c57600060405163683f44bb60e11b81526004016107cf9190615044565b8054600160801b900463ffffffff168a111561094e57600160405163683f44bb60e11b81526004016107cf9190615044565b61099281898c8c8b8b8b8b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508d9250612829915050565b9a9950505050505050505050565b6060806109ab610ffa565b156109c85760405162461bcd60e51b81526004016107cf9061501a565b60006109d26126cc565b9050600084516001600160401b038111156109ef576109ef61414e565b604051908082528060200260200182016040528015610a18578160200160208202803683370190505b509350610a628286600081518110610a3257610a3261505e565b60200260200101516000015187600081518110610a5157610a5161505e565b6020026020010151602001516129c8565b60005b8551811015610af9578015610a9b5783868281518110610a8757610a8761505e565b602002602001015160400151602001819052505b6000610ac084888481518110610ab357610ab361505e565b6020026020010151612a92565b888581518110610ad257610ad261505e565b602090810291909101019290925295509050610aee818461508a565b925050600101610a65565b610b96338388600081518110610b1157610b1161505e565b60200260200101516040015160000151604001516001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8691906150a8565b6001600160a01b03169190612c4a565b505050915091565b610ba6613ebb565b610bb8610bb16126cc565b8484612cc2565b90505b92915050565b600080610bcc6126cc565b600301546001600160a01b031692915050565b600060606000610bed610ffa565b15610c0a5760405162461bcd60e51b81526004016107cf9061501a565b33610c1481611083565b610c3c576040516357b980d760e11b81526001600160a01b03821660048201526024016107cf565b6000610c466126cc565b6003810154604080516080810182529293506001600160a01b039091169163333f3de8918190610c78908c018c6150c5565b60c0013581526001600160a01b038a166020820152604080516301ffc9a760e01b8152634e6bf98f60e11b6004820152910190610d719086908d9033906301ffc9a790602401602060405180830381865afa158015610cdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cff91906150e6565b610d0a576000612cc2565b336001600160a01b03166390bec11d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6c9190615103565b612cc2565b8152602001610d8360408c018c6150c5565b610d9190606081019061511c565b808060200260200160405190810160405280939291908181526020016000905b82821015610dde57610dcf6101c083028601368190038101906149ed565b81526020019060010190610db1565b50505050508152506040518263ffffffff1660e01b8152600401610e029190615165565b6000604051808303816000875af1158015610e21573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e499190810190615260565b94509450945050509250925092565b600084610e6481611083565b610e8c576040516357b980d760e11b81526001600160a01b03821660048201526024016107cf565b6108ac868686866130fb565b600080610ea36126cc565b90504283602001516040015164ffffffffff16111580610812575060028101548351608001516040516331a9108f60e11b81526001600160a01b0390921691636352211e91610ef89160040190815260200190565b602060405180830381865afa158015610f15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3991906150a8565b6001600160a01b0316336001600160a01b0316149392505050565b6000610f5e610ffa565b15610f7b5760405162461bcd60e51b81526004016107cf9061501a565b604080516001808252818301909252600091602080830190803683370190505090503381600081518110610fb157610fb161505e565b60200260200101906001600160a01b031690816001600160a01b0316815250506000610fdb6126cc565b9050610ff1818560008860006001886000612829565b95945050505050565b60006110046131af565b5460ff16919050565b611023336000356001600160e01b0319166131dd565b61103f5760405162461bcd60e51b81526004016107cf906153a5565b60005b8181101561107e5761107683838381811061105f5761105f61505e565b905060200281019061107191906153cb565b613293565b600101611042565b505050565b600061108d6126cc565b6001600160a01b039092166000908152600b9290920160205250604090205460ff1690565b60006110bc6126cc565b60048181015460405163f3913e6960e01b81526001600160a01b0388811693820193909352336024820152858316604482015260648101879052929350169063f3913e69906084015b600060405180830381600087803b15801561111f57600080fd5b505af1158015611133573d6000803e3d6000fd5b5050505050505050565b60006111476138ad565b80549091506001600160a01b03163314806111e05750600181015460405163b700961360e01b81526001600160a01b039091169063b70096139061119f90339030906001600160e01b031960003516906004016153e1565b602060405180830381865afa1580156111bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e091906150e6565b6111e957600080fd5b6001810180546001600160a01b0319166001600160a01b03841690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a35050565b60008461124481611083565b61126c576040516357b980d760e11b81526001600160a01b03821660048201526024016107cf565b6108ac868686866138db565b60008461128481611083565b6112ac576040516357b980d760e11b81526001600160a01b03821660048201526024016107cf565b6040516351d488dd60e11b8152600481018690526001600160a01b0385811660248301523360448301526001600160401b038516606483015287169063a3a911ba906084016020604051808303816000875af1158015611310573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ac9190615103565b600061133e6138ad565b546001600160a01b0316919050565b6000806113586126cc565b600401546001600160a01b031692915050565b60006113756126cc565b6007810154909150600160201b90046001600160a01b0316331461139857600080fd5b600781018054640100000000600160c01b031916905560080180546001600160a01b0319169055565b6040516370a0823160e01b815233600482015260009081906001600160a01b038616906370a0823190602401602060405180830381865afa15801561140a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142e9190615103565b604051636c82bbbf60e11b81523360048201529091506000906001600160a01b0387169063d905777e90602401602060405180830381865afa158015611478573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061149c9190615103565b905060008282106114ad57826114af565b815b90506114bc8782306110b2565b6114c887878388610e58565b979650505050505050565b6000806114de6126cc565b600881015490915061081290849063ffffffff600160a01b8204811691600160c01b90048116906126fa16565b6060816001600160401b038111156115255761152561414e565b60405190808252806020026020018201604052801561155857816020015b60608152602001906001900390816115435790505b50905060005b8281101561165b576000803086868581811061157c5761157c61505e565b905060200281019061158e919061540e565b60405161159c929190615454565b600060405180830381855af49150503d80600081146115d7576040519150601f19603f3d011682016040523d82523d6000602084013e6115dc565b606091505b509150915081611628576044815110156115f557600080fd5b6004810190508080602001905181019061160f9190615464565b60405162461bcd60e51b81526004016107cf91906154d1565b8084848151811061163b5761163b61505e565b602002602001018190525050508080611653906154e4565b91505061155e565b5092915050565b611678336000356001600160e01b0319166131dd565b6116945760405162461bcd60e51b81526004016107cf906153a5565b61169d81613293565b50565b6000846116ac81611083565b6116d4576040516357b980d760e11b81526001600160a01b03821660048201526024016107cf565b6108ac8686868661398f565b6116f6336000356001600160e01b0319166131dd565b6117125760405162461bcd60e51b81526004016107cf906153a5565b61171a610ffa565b156117375760405162461bcd60e51b81526004016107cf9061501a565b61173f613a6c565b565b600061174b6138ad565b600101546001600160a01b0316919050565b611773336000356001600160e01b0319166131dd565b61178f5760405162461bcd60e51b81526004016107cf906153a5565b611797610ffa565b6117da5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016107cf565b61173f613ae0565b60006117ec6126cc565b6007810154909150600160201b90046001600160a01b0316331461180f57600080fd5b60005b82811015611b2f57600084848381811061182e5761182e61505e565b905060200281019061184091906153cb565b61184e9060208101906154fd565b905060008585848181106118645761186461505e565b905060200281019061187691906153cb565b61188490602081019061540e565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929350600d92506118c4915050565b8260108111156118d6576118d6614caa565b0361195657600080828060200190518101906118f2919061551e565b90925090506001600160a01b03811661191e576040516350ca491160e11b815260040160405180910390fd5b60ff919091166000908152600a86016020526040902080546001600160a01b0319166001600160a01b03909216919091179055611aec565b600e82601081111561196a5761196a614caa565b036119d55760008180602001905181019061198591906150a8565b90506001600160a01b0381166119ae576040516350ca491160e11b815260040160405180910390fd5b6002850180546001600160a01b0319166001600160a01b0392909216919091179055611aec565b600f8260108111156119e9576119e9614caa565b03611a5457600081806020019051810190611a0491906150a8565b90506001600160a01b038116611a2d576040516350ca491160e11b815260040160405180910390fd5b6003850180546001600160a01b0319166001600160a01b0392909216919091179055611aec565b6010826010811115611a6857611a68614caa565b03611ad357600081806020019051810190611a8391906150a8565b90506001600160a01b038116611aac576040516350ca491160e11b815260040160405180910390fd5b6004850180546001600160a01b0319166001600160a01b0392909216919091179055611aec565b6040516345f279ab60e01b815260040160405180910390fd5b7f4aa20127da97281124f6c5bf77f293274afb4745d8b41b9c40434f8e51ac7c818282604051611b1d92919061554d565b60405180910390a15050600101611812565b50505050565b6000611b3f6126cc565b60088101549091506001600160a01b03163314611b5b57600080fd5b60088101805460079092018054640100000000600160c01b0319166001600160a01b038416600160201b021790556001600160a01b03199091169055565b611ba1613f38565b611bc6838360ff1681518110611bb957611bb961505e565b6020026020010151610e98565b611be6576000604051634b4208b960e01b81526004016107cf9190615576565b6000611bf06126cc565b8054909150600090611c119063ffffffff600160201b82048116911661558a565b6003830154865163ffffffff9290921692506001600160a01b03169063e7c3330190879060ff8816908110611c4857611c4861505e565b602002602001015160000151608001518388336040518563ffffffff1660e01b8152600401611c7a94939291906155a7565b600060405180830381600087803b158015611c9457600080fd5b505af1158015611ca8573d6000803e3d6000fd5b505050507fd2f6618ba448f8b76ee0e823f8bb8c568b748f1687e1bc6bd625306fc4fb5035858560ff1681518110611ce257611ce261505e565b6020026020010151600001516080015185604051611d0d92919091825260ff16602082015260400190565b60405180910390a18160020160009054906101000a90046001600160a01b03166001600160a01b031663d163259a6040518060a00160405280888860ff1681518110611d5b57611d5b61505e565b602002602001015160000151602001516001600160a01b03168152602001888860ff1681518110611d8e57611d8e61505e565b60200260200101516000015160800151815260200184815260200188600081518110611dbc57611dbc61505e565b6020908102919091018101515160a0015160809081015183526103e892820192909252604080516001600160e01b031960e087901b16815284516001600160a01b03166004820152918401516024830152830151604482015260608301516064820152910151608482015260a4016000604051808303816000875af1158015611e49573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ff19190810190615766565b600080611e7c6126cc565b600781015490915060009063ffffffff16858560ff8916818110611ea257611ea261505e565b611eb9939260c06101c0909202010135905061586b565b905084846000818110611ece57611ece61505e565b90506101c0020160000160800135876080013514611f055760405163d513b3ed60e01b8152608088013560048201526024016107cf565b60c08701358110801590611f5d575084848760ff16818110611f2957611f2961505e565b611f45926101a06101c09092020190810191506101800161587e565b64ffffffffff16611f5a4260e08a013561508a565b10155b80611fff57506008820154600160e01b900463ffffffff16858560ff8916818110611f8a57611f8a61505e565b611fa6926101a06101c09092020190810191506101800161587e565b64ffffffffff16611fbb60e08a01354261508a565b611fc5919061586b565b10158015611fff575084848760ff16818110611fe357611fe361505e565b90506101c0020160000160a001602001358760a0016020013511155b925050505b949350505050565b60006120166126cc565b6007810154909150600160201b90046001600160a01b0316331461203957600080fd5b60080180546001600160a01b0319166001600160a01b0392909216919091179055565b6000806120676126cc565b905082612075576000612085565b8054600160201b900463ffffffff165b8154612097919063ffffffff1661558a565b63ffffffff169392505050565b600080846001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156120e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061210991906150a8565b6040516370a0823160e01b81523360048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa158015612153573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121779190615103565b60405163402d267d60e01b81526001600160a01b03878116600483015291925060009188169063402d267d90602401602060405180830381865afa1580156121c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121e79190615103565b905060008282106121f857826121fa565b815b90506122078482306110b2565b6122138888838961086c565b98975050505050505050565b612235336000356001600160e01b0319166131dd565b6122515760405162461bcd60e51b81526004016107cf906153a5565b600061225b6138ad565b80546001600160a01b0319166001600160a01b03841690811782556040519192509033907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006122b3613b74565b8054909150610100900460ff16158080156122d457508154600160ff909116105b806122ed5750303b1580156122ed5750815460ff166001145b6123505760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016107cf565b815460ff19166001178255801561236f57815461ff0019166101001782555b612379338c613ba2565b60006123836126cc565b6002810180546001600160a01b03808f166001600160a01b0319928316179092556003830180548e8416908316179055600483018054928d1692909116919091179055905086600a820160008060ff1681526020810191909152604001600090812080546001600160a01b0319166001600160a01b0393909316929092179091558890600a830190600160ff1681526020810191909152604001600090812080546001600160a01b0319166001600160a01b0393909316929092179091558690600a830190600260ff1681526020810191909152604001600090812080546001600160a01b0319166001600160a01b0393909316929092179091558490600a830190600360ff168152602081019190915260400160002080546001600160a01b03199081166001600160a01b039384161790915560068301805490911691871691909117905580546fffffffffffffffffffffffffffffffff19166d03e800000082000151800002a3001781556301e1338061250766038d7ea4c68000600561589b565b61251191906158b2565b60078201805463ffffffff191663ffffffff92909216919091179055805467ffffffffffffffff60801b1916651275000076a760871b1781556125736301e13380612564662386f26fc1000060c861589b565b61256e91906158b2565b613c91565b6006820180546affffffffffffffffffffff60a01b1916600160a01b6001600160581b0393909316929092029190911790556008810180546001600160a01b03166a01a5e0000000fa0000001960a21b1790556007018054640100000000600160c01b03191633600160201b02179055801561262757815461ff0019168255604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050505050565b60008061263f6126cc565b600201546001600160a01b031692915050565b60006126c0856001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612695573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126b991906150a8565b84306110b2565b610ff18585858561086c565b600080610bbb60017fb5d37468eefb1c75507259f9212a7d55dca0c7d08d9ef7be1cda5c5103eaa88e61586b565b600082600019048411830215820261271157600080fd5b5091020490565b60006127918584876001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561275d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061278191906150a8565b6001600160a01b03169190613ca7565b604051636e553f6560e01b8152600481018490526001600160a01b038581166024830152839190871690636e553f65906044016020604051808303816000875af11580156127e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128079190615103565b9150811015612004576040516305133e6360e51b815260040160405180910390fd5b600080871561283a5750600161283e565b5060005b60068a01546040516bffffffffffffffffffffffff1930606090811b821660208401526001600160f81b031960f886901b16603484015233811b821660358401528c901b16604982015242605d820152607d81018a9052609d81018890526128c1916001600160a01b03169060bd01604051602081830303815290604052613d1e565b9150816001600160a01b031663474a1e5460405180608001604052808a6001600160a01b031681526020018815158152602001878152602001868152506040518263ffffffff1660e01b815260040161291a91906158d4565b600060405180830381600087803b15801561293457600080fd5b505af1158015612948573d6000803e3d6000fd5b505050506001600160a01b038281166000818152600b8d016020908152604091829020805460ff191660011790558151338152938b169084015282015260ff821660608201527f9aa6282003aa425f2bb942f91daaf7080de24835fc4fa8f3f4dc52c7d014ea979060800160405180910390a15098975050505050505050565b6040516331a9108f60e11b815260048101829052829033906001600160a01b03831690636352211e90602401602060405180830381865afa158015612a11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a3591906150a8565b6001600160a01b031603611b2f576002840154604051635c46a7ef60e11b81523360048201526001600160a01b0391821660248201526044810184905260806064820152600060848201529082169063b88d4fde9060a401611105565b60006060600080612abd856020015186600001516001600160a01b0316613e3090919063ffffffff16565b60028701546040516331a9108f60e11b8152600481018390529192506001600160a01b031690636352211e90602401602060405180830381865afa158015612b09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b2d91906150a8565b6001600160a01b0316336001600160a01b031614612b6757604051632729ad6960e21b8152336004820152602481018290526044016107cf565b604080860151518101516001600160a01b03166000908152600b8801602052205460ff16612bbd576040858101515181015190516357b980d760e11b81526001600160a01b0390911660048201526024016107cf565b6040808601515181015190516309101a3360e31b81526001600160a01b0390911690634880d19890612bf590889030906004016159af565b6000604051808303816000875af1158015612c14573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612c3c9190810190615260565b935093509350509250925092565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080611b2f5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b60448201526064016107cf565b612cca613ebb565b612cd760408401846150c5565b60200135421115612cfe5760036040516321d4d76960e21b81526004016107cf9190615ab3565b6000612d58612d1060408601866150c5565b612d1e90608081019061540e565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509250613e41915050565b60ff811660009081526009870160205260409020549091506001600160a01b031680612d9c57604051630ee899e360e41b815260ff831660048201526024016107cf565b6000806001600160a01b038316638ba47309612dbb60408a018a6150c5565b60028b01546001600160a01b0316636352211e612df960208d01803590612de2908f614a79565b6001600160a01b03166000526020526034600c2090565b6040518263ffffffff1660e01b8152600401612e1791815260200190565b602060405180830381865afa158015612e34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e5891906150a8565b612e6560208c018c614a79565b8b602001356040518563ffffffff1660e01b8152600401612e899493929190615d33565b60c060405180830381865afa158015612ea6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612eca9190615e43565b91509150600081602001511480612ef9575060068801546020820151600160a01b9091046001600160581b0316105b15612f1a5760016040516321d4d76960e21b81526004016107cf9190615ab3565b612f2760408801886150c5565b60c0013581600001511015612f525760026040516321d4d76960e21b81526004016107cf9190615ab3565b612fa0612f6260408901896150c5565b612f709060a08101906153cb565b612f7e906020810190615e70565b612f8b60408b018b6150c5565b612f999060a08101906153cb565b3585613e6f565b612fc05760006040516321d4d76960e21b81526004016107cf9190615ab3565b600086118015612fd35750858160400151115b15612fe057604081018690525b6040518060c001604052808560ff16815260200188806040019061300491906150c5565b613015906060810190604001614a79565b6001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613052573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061307691906150a8565b6001600160a01b0316815260200161309160408a018a6150c5565b6130a2906060810190604001614a79565b6001600160a01b031681526020016130bd60408a018a6150c5565b6130cb9060a08101906153cb565b3581526020908101906130e7908a01803590612de2908c614a79565b815260200191909152979650505050505050565b60006131116001600160a01b0386168685613ca7565b604051635d043b2960e11b8152600481018490526001600160a01b03858116602483015233604483015283919087169063ba087652906064016020604051808303816000875af1158015613169573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061318d9190615103565b915081101561200457604051636e8c873b60e01b815260040160405180910390fd5b600080610bbb60017f79e01b51e3a67f26dfcce791888d253159e9690f0dd937c21f9267c37958ff9561586b565b6000806131e86138ad565b60018101549091506001600160a01b03168015801590613274575060405163b700961360e01b81526001600160a01b0382169063b700961390613233908890309089906004016153e1565b602060405180830381865afa158015613250573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061327491906150e6565b80610ff1575050546001600160a01b0390811693169290921492915050565b600061329d6126cc565b905060006132ae60208401846154fd565b905060006132bf602085018561540e565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929350600b92506132ff915050565b82601081111561331157613311614caa565b03613381576000808280602001905181019061332d9190615eb9565b9150915061333a82613ea9565b855463ffffffff191663ffffffff9190911617855561335881613ea9565b855463ffffffff91909116600160201b0267ffffffff00000000199091161785555061386e9050565b600182601081111561339557613395614caa565b0361343557600080828060200190518101906133b19190615eb9565b91509150818110156133d6576040516350ca491160e11b815260040160405180910390fd5b6133df82613ea9565b855463ffffffff91909116600160401b026bffffffff00000000000000001990911617855561340d81613ea9565b855463ffffffff91909116600160601b0263ffffffff60601b199091161785555061386e9050565b600282601081111561344957613449614caa565b036134e357600080828060200190518101906134659190615eb9565b915091508181101561348a576040516350ca491160e11b815260040160405180910390fd5b61349382613ea9565b855463ffffffff91909116600160c01b0263ffffffff60c01b199091161785556134bc81613ea9565b855463ffffffff91909116600160e01b026001600160e01b039091161785555061386e9050565b60098260108111156134f7576134f7614caa565b0361359557600080828060200190518101906135139190615eb9565b9150915081811015613538576040516350ca491160e11b815260040160405180910390fd5b61354182613ea9565b8560080160146101000a81548163ffffffff021916908363ffffffff16021790555061356c81613ea9565b8560080160186101000a81548163ffffffff021916908363ffffffff160217905550505061386e565b60048260108111156135a9576135a9614caa565b036135f1576000818060200190518101906135c49190615103565b90506135cf81613ea9565b60078501805463ffffffff191663ffffffff929092169190911790555061386e565b600a82601081111561360557613605614caa565b03613653576000818060200190518101906136209190615103565b905061362b81613ea9565b84600801601c6101000a81548163ffffffff021916908363ffffffff1602179055505061386e565b600582601081111561366757613667614caa565b036136ad57613688818060200190518101906136839190615103565b613ea9565b835463ffffffff91909116600160a01b0263ffffffff60a01b1990911617835561386e565b60068260108111156136c1576136c1614caa565b03613702576136dd818060200190518101906136839190615103565b835463ffffffff91909116600160801b0263ffffffff60801b1990911617835561386e565b600882601081111561371657613716614caa565b0361375f576137328180602001905181019061256e9190615103565b8360060160146101000a8154816001600160581b0302191690836001600160581b0316021790555061386e565b600082601081111561377357613773614caa565b036137de5760008180602001905181019061378e91906150a8565b90506001600160a01b0381166137b7576040516350ca491160e11b815260040160405180910390fd5b6005840180546001600160a01b0319166001600160a01b039290921691909117905561386e565b600c8260108111156137f2576137f2614caa565b03611ad3576000808280602001905181019061380e919061551e565b90925090506001600160a01b03811661383a576040516350ca491160e11b815260040160405180910390fd5b60ff919091166000908152600985016020526040902080546001600160a01b0319166001600160a01b039092169190911790555b7f4aa20127da97281124f6c5bf77f293274afb4745d8b41b9c40434f8e51ac7c81828260405161389f92919061554d565b60405180910390a150505050565b600080610bbb60017f39509ba13edbf55c1c882ff847dd8db4cc4806e85b9952f85673490851bc713b61586b565b60006138f16001600160a01b0386168685613ca7565b604051632d182be560e21b8152600481018490526001600160a01b03858116602483015233604483015283919087169063b460af94906064016020604051808303816000875af1158015613949573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061396d9190615103565b91508111156120045760405163ac11961360e01b815260040160405180910390fd5b60006139d48584876001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561275d573d6000803e3d6000fd5b6040516394bf804d60e01b8152600481018490526001600160a01b0385811660248301528391908716906394bf804d906044016020604051808303816000875af1158015613a26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a4a9190615103565b915081111561200457604051634e3c485360e01b815260040160405180910390fd5b613a74610ffa565b15613a915760405162461bcd60e51b81526004016107cf9061501a565b6001613a9b6131af565b805460ff19169115159190911790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258906020015b60405180910390a1565b613ae8610ffa565b613b2b5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016107cf565b6000613b356131af565b805460ff19169115159190911790556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602001613ad6565b600080610bbb60017fe54d104cc32597338d9a7867d41ca0c8fb6144529e0565413f4b3671fc57878561586b565b6000613bac6138ad565b80549091506001600160a01b031615613bfd5760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064016107cf565b80546001600160a01b03199081166001600160a01b0385811691821784556001840180549093169085161790915560405133907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36040516001600160a01b0383169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a3505050565b6000600160581b8210613ca357600080fd5b5090565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080611b2f5760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b60448201526064016107cf565b8051604051606160f81b81526039820160f081811b60018401526f3d81600a3d39f33d3d3d3d363d3d376160801b600384015260028401901b601383018190526560373639366160d01b6015840152601b83015262013d7360e81b601d830152606085901b6020808401919091526c5af43d3d93803e603557fd5bf360981b60348401526000939260438401929186019084604182015b60208210613dd45783518152602093840193601f199092019101613db5565b835160001960208490036101000a0119908116825260f088901b91830191825286846000f098506001600160a01b038916613e2257604051631d7fde3160e31b815260040160405180910390fd5b505050505050505092915050565b6000919091526020526034600c2090565b81516000906020830180821015613e635763571e08d160e01b60005260206000fd5b93909301519392505050565b60008315613ea1578360051b8501855b803580851160051b94855260209485185260406000209301818110613e7f5750505b501492915050565b6000600160201b8210613ca357600080fd5b6040518060c00160405280600060ff16815260200160006001600160a01b0316815260200160006001600160a01b031681526020016000801916815260200160008152602001613f336040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b905290565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b03168152602001606081526020016060815260200160006004811115613f8557613f85614caa565b815260006020820181905260408201819052606082018190526080820181905260a0820181905260c09091015290565b60ff8116811461169d57600080fd5b80356107d881613fb5565b600060208284031215613fe157600080fd5b813561081281613fb5565b600060208284031215613ffe57600080fd5b5035919050565b6001600160a01b038116811461169d57600080fd5b6000806000806080858703121561403057600080fd5b843561403b81614005565b9350602085013561404b81614005565b93969395505050506040820135916060013590565b801515811461169d57600080fd5b60008083601f84011261408057600080fd5b5081356001600160401b0381111561409757600080fd5b6020830191508360208260051b85010111156140b257600080fd5b9250929050565b60008060008060008060008060e0898b0312156140d557600080fd5b8835975060208901356140e781614005565b965060408901356140f781614005565b955060608901359450608089013561410e81614060565b935060a08901356001600160401b0381111561412957600080fd5b6141358b828c0161406e565b999c989b50969995989497949560c00135949350505050565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b03811182821017156141865761418661414e565b60405290565b604051608081016001600160401b03811182821017156141865761418661414e565b604080519081016001600160401b03811182821017156141865761418661414e565b60405160c081016001600160401b03811182821017156141865761418661414e565b60405160a081016001600160401b03811182821017156141865761418661414e565b60405161010081016001600160401b03811182821017156141865761418661414e565b60405161016081016001600160401b03811182821017156141865761418661414e565b604051601f8201601f191681016001600160401b03811182821017156142825761428261414e565b604052919050565b60006001600160401b038211156142a3576142a361414e565b5060051b60200190565b6000606082840312156142bf57600080fd5b6142c7614164565b905081356142d481613fb5565b81526020828101359082015260408201356142ee81614005565b604082015292915050565b6001600160581b038116811461169d57600080fd5b64ffffffffff8116811461169d57600080fd5b60006080828403121561433357600080fd5b61433b61418c565b90508135614348816142f9565b815260208201356143588161430e565b6020820152604082013561436b8161430e565b806040830152506060820135606082015292915050565b60008183036101c081121561439657600080fd5b61439e6141ae565b9150610140808212156143b057600080fd5b6143b86141d0565b84356143c381613fb5565b815260208501356143d381614005565b602082015260408501356143e681614005565b6040820152606085810135908201526080808601359082015260a0609f198401121561441157600080fd5b6144196141f2565b925060a0850135835260c0850135602084015260e08501356040840152610100850135606084015261012085013560808401528260a08201528084525061446285828601614321565b6020840152505092915050565b600082601f83011261448057600080fd5b813560206144956144908361428a565b61425a565b8281526101c092830285018201928282019190878511156144b557600080fd5b8387015b858110156144d8576144cb8982614382565b84529284019281016144b9565b5090979650505050505050565b60006001600160401b038211156144fe576144fe61414e565b50601f01601f191660200190565b600082601f83011261451d57600080fd5b813561452b614490826144e5565b81815284602083860101111561454057600080fd5b816020850160208301376000918101602001919091529392505050565b60006040828403121561456f57600080fd5b6145776141ae565b9050813581526020808301356001600160401b0381111561459757600080fd5b8301601f810185136145a857600080fd5b80356145b66144908261428a565b81815260059190911b820183019083810190878311156145d557600080fd5b928401925b828410156145f3578335825292840192908401906145da565b8085870152505050505092915050565b6000602080838503121561461657600080fd5b82356001600160401b038082111561462d57600080fd5b818501915085601f83011261464157600080fd5b813561464f6144908261428a565b81815260059190911b8301840190848101908883111561466e57600080fd5b8585015b838110156147b85780358581111561468957600080fd5b8601601f196060828d03820112156146a057600080fd5b6146a8614164565b898301356146b581614005565b815260408301358a8201526060830135888111156146d257600080fd5b9290920191610140838e03830112156146ea57600080fd5b6146f2614214565b91506147008d8b85016142ad565b825260808301358881111561471457600080fd5b6147228e8c8387010161446f565b8b8401525060a08301358881111561473957600080fd5b6147478e8c8387010161450c565b60408401525060c08301358881111561475f57600080fd5b61476d8e8c8387010161455d565b60608401525060e0830135608083015261478a6101008401613fc4565b60a083015261012083013560c08301526101409092013560e082015260408201528352918601918601614672565b5098975050505050505050565b805160ff1682526020808201516001600160a01b039081168285015260408084015190911681850152606080840151818601526080808501518187015260a0948501518051958701959095529284015160c08601529083015160e0850152820151610100840152015161012090910152565b600081518084526020808501945080840160005b838110156148b05781516148608882516147c5565b83015180516001600160581b03166101408901528084015164ffffffffff9081166101608a0152604082015116610180890152606001516101a08801526101c0909601959082019060010161484b565b509495945050505050565b604080825283519082018190526000906020906060840190828701845b828110156148f4578151845292840192908401906001016148d8565b505050838103828501526108ac8186614837565b60006060828403121561491a57600080fd5b50919050565b6000806040838503121561493357600080fd5b82356001600160401b0381111561494957600080fd5b61495585828601614908565b95602094909401359450505050565b6101408101610bbb82846147c5565b6000806040838503121561498657600080fd5b82356001600160401b0381111561499c57600080fd5b6149a885828601614908565b92505060208301356149b981614005565b809150509250929050565b8381526060602082015260006149dd6060830185614837565b9050826040830152949350505050565b60006101c08284031215614a0057600080fd5b610bb88383614382565b60008060408385031215614a1d57600080fd5b8235614a2881614005565b915060208301356149b981614005565b60008060208385031215614a4b57600080fd5b82356001600160401b03811115614a6157600080fd5b614a6d8582860161406e565b90969095509350505050565b600060208284031215614a8b57600080fd5b813561081281614005565b600080600060608486031215614aab57600080fd5b8335614ab681614005565b9250602084013591506040840135614acd81614005565b809150509250925092565b60008060008060808587031215614aee57600080fd5b8435614af981614005565b9350602085013592506040850135614b1081614005565b915060608501356001600160401b0381168114614b2c57600080fd5b939692955090935050565b600080600060608486031215614b4c57600080fd5b8335614b5781614005565b92506020840135614b6781614005565b929592945050506040919091013590565b60005b83811015614b93578181015183820152602001614b7b565b50506000910152565b60008151808452614bb4816020860160208601614b78565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015614c1d57603f19888603018452614c0b858351614b9c565b94509285019290850190600101614bef565b5092979650505050505050565b600060208284031215614c3c57600080fd5b81356001600160401b03811115614c5257600080fd5b82016040818503121561081257600080fd5b60008060408385031215614c7757600080fd5b82356001600160401b03811115614c8d57600080fd5b614c998582860161446f565b92505060208301356149b981613fb5565b634e487b7160e01b600052602160045260246000fd5b6006811061169d5761169d614caa565b600081518084526020808501945080840160005b838110156148b05781518051614cf981614cc0565b8852808401516001600160a01b03168489015260408082015190890152606080820151908901526080908101519088015260a09096019590820190600101614ce4565b600081518084526020808501945080840160005b838110156148b05781518051614d6581614cc0565b8852808401516001600160a01b03908116858a0152604080830151908a0152606080830151908a0152608080830151908a015260a091820151169088015260c09096019590820190600101614d50565b60058110614dc557614dc5614caa565b9052565b60208152614de36020820183516001600160a01b03169052565b60006020830151614dff60408401826001600160a01b03169052565b506040830151610160806060850152614e1c610180850183614cd0565b91506060850151601f19858403016080860152614e398382614d3c565b9250506080850151614e4e60a0860182614db5565b5060a085015160c085015260c085015160e085015260e0850151610100818187015280870151915050610120818187015280870151915050610140818187015280870151838701525050508091505092915050565b600080600080848603610180811215614ebb57600080fd5b61014080821215614ecb57600080fd5b8695508501359050614edc81613fb5565b92506101608501356001600160401b0380821115614ef957600080fd5b818701915087601f830112614f0d57600080fd5b813581811115614f1c57600080fd5b8860206101c083028501011115614f3257600080fd5b95989497505060200194505050565b600060208284031215614f5357600080fd5b813561081281614060565b60008060008060008060008060006101208a8c031215614f7d57600080fd5b8935614f8881614005565b985060208a0135614f9881614005565b975060408a0135614fa881614005565b965060608a0135614fb881614005565b955060808a0135614fc881614005565b945060a08a0135614fd881614005565b935060c08a0135614fe881614005565b925060e08a0135614ff881614005565b91506101008a013561500981614005565b809150509295985092959850929598565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b602081016008831061505857615058614caa565b91905290565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610bbb57610bbb615074565b80516107d881614005565b6000602082840312156150ba57600080fd5b815161081281614005565b6000823561013e198336030181126150dc57600080fd5b9190910192915050565b6000602082840312156150f857600080fd5b815161081281614060565b60006020828403121561511557600080fd5b5051919050565b6000808335601e1984360301811261513357600080fd5b8301803591506001600160401b0382111561514d57600080fd5b60200191506101c0810236038213156140b257600080fd5b602081528151602082015260018060a01b0360208301511660408201526000604083015161519660608401826147c5565b5060608301516101a0838101526120046101c0840182614837565b600060a082840312156151c357600080fd5b6151cb6141f2565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015292915050565b60006080828403121561521157600080fd5b61521961418c565b90508151615226816142f9565b815260208201516152368161430e565b602082015260408201516152498161430e565b806040830152506060820151606082015292915050565b60008060006060848603121561527557600080fd5b835192506020808501516001600160401b0381111561529357600080fd5b8501601f810187136152a457600080fd5b80516152b26144908261428a565b8181526101c0918202830184019184820191908a8411156152d257600080fd5b938501935b8385101561538e57848b03818112156152f05760008081fd5b6152f86141ae565b610140808312156153095760008081fd5b6153116141d0565b9250875161531e81613fb5565b83528789015161532d81614005565b838a015260408881015161534081614005565b90840152606088810151908401526080808901519084015260a06153668f828b016151b1565b908401528282526153798e8983016151ff565b828a01525084525093840193918501916152d7565b508096505050505050604084015190509250925092565b6020808252600c908201526b15539055551213d49256915160a21b604082015260600190565b60008235603e198336030181126150dc57600080fd5b6001600160a01b0393841681529190921660208201526001600160e01b0319909116604082015260600190565b6000808335601e1984360301811261542557600080fd5b8301803591506001600160401b0382111561543f57600080fd5b6020019150368190038213156140b257600080fd5b8183823760009101908152919050565b60006020828403121561547657600080fd5b81516001600160401b0381111561548c57600080fd5b8201601f8101841361549d57600080fd5b80516154ab614490826144e5565b8181528560208385010111156154c057600080fd5b610ff1826020830160208601614b78565b602081526000610bb86020830184614b9c565b6000600182016154f6576154f6615074565b5060010190565b60006020828403121561550f57600080fd5b81356011811061081257600080fd5b6000806040838503121561553157600080fd5b825161553c81613fb5565b60208401519092506149b981614005565b60006011841061555f5761555f614caa565b838252604060208301526120046040830184614b9c565b602081016002831061505857615058614caa565b63ffffffff81811683821601908082111561165b5761165b615074565b8481528360208201526080604082015260006155c66080830185614837565b905060018060a01b038316606083015295945050505050565b8051600681106107d857600080fd5b600082601f8301126155ff57600080fd5b8151602061560f6144908361428a565b82815260a0928302850182019282820191908785111561562e57600080fd5b8387015b858110156144d85781818a03121561564a5760008081fd5b6156526141f2565b61565b826155df565b81528582015161566a81614005565b818701526040828101519082015260608083015190820152608080830151908201528452928401928101615632565b600082601f8301126156aa57600080fd5b815160206156ba6144908361428a565b82815260c092830285018201928282019190878511156156d957600080fd5b8387015b858110156144d85781818a0312156156f55760008081fd5b6156fd6141d0565b615706826155df565b81528582015161571581614005565b8187015260408281015190820152606080830151908201526080808301519082015260a08083015161574681614005565b9082015284529284019281016156dd565b8051600581106107d857600080fd5b60006020828403121561577857600080fd5b81516001600160401b038082111561578f57600080fd5b9083019061016082860312156157a457600080fd5b6157ac614237565b6157b58361509d565b81526157c36020840161509d565b60208201526040830151828111156157da57600080fd5b6157e6878286016155ee565b6040830152506060830151828111156157fe57600080fd5b61580a87828601615699565b60608301525061581c60808401615757565b608082015260a0838101519082015260c0808401519082015260e08084015190820152610100808401519082015261012080840151908201526101409283015192810192909252509392505050565b81810381811115610bbb57610bbb615074565b60006020828403121561589057600080fd5b81356108128161430e565b8082028115828204841417610bbb57610bbb615074565b6000826158cf57634e487b7160e01b600052601260045260246000fd5b500490565b602080825282516001600160a01b039081168383015283820151151560408085019190915284015160806060850152805160a08501819052600093929183019190849060c08701905b8083101561593f5784518416825293850193600192909201919085019061591d565b5060608801516080880152809550505050505092915050565b600060408301825184526020808401516040828701528281518085526060880191508383019450600092505b808310156159a45784518252938301936001929092019190830190615984565b509695505050505050565b6040815260018060a01b038351166040820152602083015160608201526000604084015160606080840152615a0860a084018251805160ff168252602080820151908301526040908101516001600160a01b0316910152565b602081015161014080610100860152615a256101e0860183614837565b91506040830151609f198087850301610120880152615a448483614b9c565b93506060850151915080878503018388015250615a618382615958565b92505050608082015161016085015260a0820151615a8561018086018260ff169052565b5060c08201516101a085015260e0909101516101c08401526001600160a01b03841660208401529050610812565b6020810161505883614cc0565b6000808335601e19843603018112615ad757600080fd5b83016020810192503590506001600160401b03811115615af657600080fd5b6101c0810236038213156140b257600080fd5b8035615b14816142f9565b6001600160581b031682526020810135615b2d8161430e565b64ffffffffff9081166020840152604082013590615b4a8261430e565b166040830152606090810135910152565b8183526000602080850194508260005b858110156148b0578135615b7e81613fb5565b60ff16875281830135615b9081614005565b6001600160a01b039081168885015260409083820135615baf81614005565b1690880152606082810135908801526080808301359088015260a0808301359088015260c0808301359088015260e0808301359088015261010080830135908801526101208083013590880152610140615c0d818901828501615b09565b506101c0968701969190910190600101615b6b565b6000808335601e19843603018112615c3957600080fd5b83016020810192503590506001600160401b03811115615c5857600080fd5b8036038213156140b257600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008235603e19833603018112615ca657600080fd5b90910192915050565b8035825260006020820135601e19833603018112615ccc57600080fd5b82016020810190356001600160401b03811115615ce857600080fd5b8060051b803603831315615cfb57600080fd5b60406020870181905286018290526001600160fb1b03821115615d1d57600080fd5b8083606088013794909401606001949350505050565b6080815260008535615d4481613fb5565b60ff166080830152602086013560a08301526040860135615d6481614005565b6001600160a01b031660c0830152615d7f6060870187615ac0565b6101408060e0860152615d976101c086018385615b5b565b9250615da660808a018a615c22565b9250607f19610100818887030181890152615dc2868685615c67565b9550615dd160a08d018d615c90565b94506101209250818887030183890152615deb8686615caf565b955060c08c013584890152615e0260e08d01613fc4565b60ff166101608901528b013561018088015250909801356101a0850152506001600160a01b0395861660208401529390941660408201526060015292915050565b60008060c08385031215615e5657600080fd5b82519150615e6784602085016151b1565b90509250929050565b6000808335601e19843603018112615e8757600080fd5b8301803591506001600160401b03821115615ea157600080fd5b6020019150600581901b36038213156140b257600080fd5b60008060408385031215615ecc57600080fd5b50508051602090910151909290915056fea2646970667358221220c71bc903af67b6134c99a209ef6853659941c329cee033a4df33742aaa6614c464736f6c63430008110033'

type AstariaRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: AstariaRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class AstariaRouter__factory extends ContractFactory {
  constructor(...args: AstariaRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AstariaRouter> {
    return super.deploy(overrides || {}) as Promise<AstariaRouter>
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): AstariaRouter {
    return super.attach(address) as AstariaRouter
  }
  override connect(signer: Signer): AstariaRouter__factory {
    return super.connect(signer) as AstariaRouter__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): AstariaRouterInterface {
    return new utils.Interface(_abi) as AstariaRouterInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AstariaRouter {
    return new Contract(address, _abi, signerOrProvider) as AstariaRouter
  }
}
