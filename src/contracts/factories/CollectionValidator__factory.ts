/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../common'
import type {
  CollectionValidator,
  CollectionValidatorInterface,
} from '../CollectionValidator'

const _abi = [
  {
    inputs: [],
    name: 'VERSION_TYPE',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint8',
            name: 'version',
            type: 'uint8',
          },
          {
            internalType: 'address',
            name: 'token',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'borrower',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'maxAmount',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'rate',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'duration',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'maxPotentialDebt',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'liquidationInitialAsk',
                type: 'uint256',
              },
            ],
            internalType: 'struct ILienToken.Details',
            name: 'lien',
            type: 'tuple',
          },
        ],
        internalType: 'struct ICollectionValidator.Details',
        name: 'details',
        type: 'tuple',
      },
    ],
    name: 'assembleLeaf',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'nlrDetails',
        type: 'bytes',
      },
    ],
    name: 'getLeafDetails',
    outputs: [
      {
        components: [
          {
            internalType: 'uint8',
            name: 'version',
            type: 'uint8',
          },
          {
            internalType: 'address',
            name: 'token',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'borrower',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'maxAmount',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'rate',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'duration',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'maxPotentialDebt',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'liquidationInitialAsk',
                type: 'uint256',
              },
            ],
            internalType: 'struct ILienToken.Details',
            name: 'lien',
            type: 'tuple',
          },
        ],
        internalType: 'struct ICollectionValidator.Details',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint8',
                name: 'version',
                type: 'uint8',
              },
              {
                internalType: 'uint256',
                name: 'deadline',
                type: 'uint256',
              },
              {
                internalType: 'address',
                name: 'vault',
                type: 'address',
              },
            ],
            internalType: 'struct IAstariaRouter.StrategyDetails',
            name: 'strategy',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'token',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'vault',
                    type: 'address',
                  },
                  {
                    internalType: 'bytes32',
                    name: 'strategyRoot',
                    type: 'bytes32',
                  },
                  {
                    internalType: 'uint256',
                    name: 'collateralId',
                    type: 'uint256',
                  },
                  {
                    components: [
                      {
                        internalType: 'uint256',
                        name: 'maxAmount',
                        type: 'uint256',
                      },
                      {
                        internalType: 'uint256',
                        name: 'rate',
                        type: 'uint256',
                      },
                      {
                        internalType: 'uint256',
                        name: 'duration',
                        type: 'uint256',
                      },
                      {
                        internalType: 'uint256',
                        name: 'maxPotentialDebt',
                        type: 'uint256',
                      },
                      {
                        internalType: 'uint256',
                        name: 'liquidationInitialAsk',
                        type: 'uint256',
                      },
                    ],
                    internalType: 'struct ILienToken.Details',
                    name: 'details',
                    type: 'tuple',
                  },
                ],
                internalType: 'struct ILienToken.Lien',
                name: 'lien',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint88',
                    name: 'amount',
                    type: 'uint88',
                  },
                  {
                    internalType: 'uint8',
                    name: 'position',
                    type: 'uint8',
                  },
                  {
                    internalType: 'uint40',
                    name: 'last',
                    type: 'uint40',
                  },
                  {
                    internalType: 'uint40',
                    name: 'end',
                    type: 'uint40',
                  },
                  {
                    internalType: 'uint256',
                    name: 'lienId',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ILienToken.Point',
                name: 'point',
                type: 'tuple',
              },
            ],
            internalType: 'struct ILienToken.Stack[]',
            name: 'stack',
            type: 'tuple[]',
          },
          {
            internalType: 'bytes',
            name: 'nlrDetails',
            type: 'bytes',
          },
          {
            components: [
              {
                internalType: 'bytes32',
                name: 'root',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32[]',
                name: 'proof',
                type: 'bytes32[]',
              },
            ],
            internalType: 'struct IAstariaRouter.MerkleData',
            name: 'merkle',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint8',
            name: 'v',
            type: 'uint8',
          },
          {
            internalType: 'bytes32',
            name: 'r',
            type: 'bytes32',
          },
          {
            internalType: 'bytes32',
            name: 's',
            type: 'bytes32',
          },
        ],
        internalType: 'struct IAstariaRouter.NewLienRequest',
        name: 'params',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: 'borrower',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'collateralTokenContract',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'collateralTokenId',
        type: 'uint256',
      },
    ],
    name: 'validateAndParse',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'leaf',
        type: 'bytes32',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'maxAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rate',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'duration',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxPotentialDebt',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'liquidationInitialAsk',
            type: 'uint256',
          },
        ],
        internalType: 'struct ILienToken.Details',
        name: 'ld',
        type: 'tuple',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
] as const

const _bytecode =
  '0x608060405234801561001057600080fd5b506107ff806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063195b3f591461005157806338fc401c1461007b57806343fea05414610095578063a9f11e2d146100b5575b600080fd5b61006461005f36600461038a565b6100d5565b6040516100729291906103fa565b60405180910390f35b610083600281565b60405160ff9091168152602001610072565b6100a86100a33660046104a2565b6102bb565b6040516100729190610553565b6100c86100c33660046105c7565b6102dd565b6040516100729190610672565b60006101096040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b600061015561011b60808901896106c0565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506102bb92505050565b805190915060ff166002146101a05760405162461bcd60e51b815260206004820152600c60248201526b696e76616c6964207479706560a01b60448201526064015b60405180910390fd5b60408101516001600160a01b0316156102275780604001516001600160a01b0316866001600160a01b0316146102275760405162461bcd60e51b815260206004820152602660248201527f696e76616c696420626f72726f7765722072657175657374696e6720636f6d6d6044820152651a5d1b595b9d60d21b6064820152608401610197565b846001600160a01b031681602001516001600160a01b0316146102855760405162461bcd60e51b81526020600482015260166024820152751a5b9d985b1a59081d1bdad95b8818dbdb9d1c9858dd60521b6044820152606401610197565b61029260808801886106c0565b6040516102a092919061070e565b60405180910390209250806060015191505094509492505050565b6102c3610306565b818060200190518101906102d7919061071e565b92915050565b6060816040516020016102f09190610553565b6040516020818303038152906040529050919050565b6040518060800160405280600060ff16815260200160006001600160a01b0316815260200160006001600160a01b0316815260200161036d6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b905290565b6001600160a01b038116811461038757600080fd5b50565b600080600080608085870312156103a057600080fd5b843567ffffffffffffffff8111156103b757600080fd5b850161014081880312156103ca57600080fd5b935060208501356103da81610372565b925060408501356103ea81610372565b9396929550929360600135925050565b82815260c08101610439602083018480518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff8111828210171561047957610479610440565b60405290565b60405160a0810167ffffffffffffffff8111828210171561047957610479610440565b6000602082840312156104b457600080fd5b813567ffffffffffffffff808211156104cc57600080fd5b818401915084601f8301126104e057600080fd5b8135818111156104f2576104f2610440565b604051601f8201601f19908116603f0116810190838211818310171561051a5761051a610440565b8160405282815287602084870101111561053357600080fd5b826020860160208301376000928101602001929092525095945050505050565b815160ff1681526020808301516001600160a01b039081168284015260408085015190911681840152606093840151805185850152918201516080808501919091529082015160a08401529281015160c0830152919091015160e08201526101000190565b60ff8116811461038757600080fd5b60008183036101008112156105db57600080fd5b6105e3610456565b83356105ee816105b8565b815260208401356105fe81610372565b6020820152604084013561061181610372565b604082015260a0605f198301121561062857600080fd5b61063061047f565b9150606084013582526080840135602083015260a0840135604083015260c0840135606083015260e08401356080830152816060820152809250505092915050565b600060208083528351808285015260005b8181101561069f57858101830151858201604001528201610683565b506000604082860101526040601f19601f8301168501019250505092915050565b6000808335601e198436030181126106d757600080fd5b83018035915067ffffffffffffffff8211156106f257600080fd5b60200191503681900382131561070757600080fd5b9250929050565b8183823760009101908152919050565b600081830361010081121561073257600080fd5b61073a610456565b8351610745816105b8565b8152602084015161075581610372565b6020820152604084015161076881610372565b604082015260a0605f198301121561077f57600080fd5b61078761047f565b9150606084015182526080840151602083015260a0840151604083015260c0840151606083015260e0840151608083015281606082015280925050509291505056fea2646970667358221220ed7c28fc5c83c9d951467249128d4c458b3c4da55ff29d4c60d3249680702eb664736f6c63430008110033'

type CollectionValidatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: CollectionValidatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class CollectionValidator__factory extends ContractFactory {
  constructor(...args: CollectionValidatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CollectionValidator> {
    return super.deploy(overrides || {}) as Promise<CollectionValidator>
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): CollectionValidator {
    return super.attach(address) as CollectionValidator
  }
  override connect(signer: Signer): CollectionValidator__factory {
    return super.connect(signer) as CollectionValidator__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): CollectionValidatorInterface {
    return new utils.Interface(_abi) as CollectionValidatorInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CollectionValidator {
    return new Contract(address, _abi, signerOrProvider) as CollectionValidator
  }
}
