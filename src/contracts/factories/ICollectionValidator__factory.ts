/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import type { Provider } from '@ethersproject/providers'
import type {
  ICollectionValidator,
  ICollectionValidatorInterface,
} from '../ICollectionValidator'

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint8',
                name: 'version',
                type: 'uint8',
              },
              {
                internalType: 'uint256',
                name: 'deadline',
                type: 'uint256',
              },
              {
                internalType: 'address',
                name: 'vault',
                type: 'address',
              },
            ],
            internalType: 'struct IAstariaRouter.StrategyDetails',
            name: 'strategy',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'token',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'vault',
                    type: 'address',
                  },
                  {
                    internalType: 'bytes32',
                    name: 'strategyRoot',
                    type: 'bytes32',
                  },
                  {
                    internalType: 'uint256',
                    name: 'collateralId',
                    type: 'uint256',
                  },
                  {
                    components: [
                      {
                        internalType: 'uint256',
                        name: 'maxAmount',
                        type: 'uint256',
                      },
                      {
                        internalType: 'uint256',
                        name: 'rate',
                        type: 'uint256',
                      },
                      {
                        internalType: 'uint256',
                        name: 'duration',
                        type: 'uint256',
                      },
                      {
                        internalType: 'uint256',
                        name: 'maxPotentialDebt',
                        type: 'uint256',
                      },
                      {
                        internalType: 'uint256',
                        name: 'liquidationInitialAsk',
                        type: 'uint256',
                      },
                    ],
                    internalType: 'struct ILienToken.Details',
                    name: 'details',
                    type: 'tuple',
                  },
                ],
                internalType: 'struct ILienToken.Lien',
                name: 'lien',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint88',
                    name: 'amount',
                    type: 'uint88',
                  },
                  {
                    internalType: 'uint8',
                    name: 'position',
                    type: 'uint8',
                  },
                  {
                    internalType: 'uint40',
                    name: 'last',
                    type: 'uint40',
                  },
                  {
                    internalType: 'uint40',
                    name: 'end',
                    type: 'uint40',
                  },
                  {
                    internalType: 'uint256',
                    name: 'lienId',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ILienToken.Point',
                name: 'point',
                type: 'tuple',
              },
            ],
            internalType: 'struct ILienToken.Stack[]',
            name: 'stack',
            type: 'tuple[]',
          },
          {
            internalType: 'bytes',
            name: 'nlrDetails',
            type: 'bytes',
          },
          {
            components: [
              {
                internalType: 'bytes32',
                name: 'root',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32[]',
                name: 'proof',
                type: 'bytes32[]',
              },
            ],
            internalType: 'struct IAstariaRouter.MerkleData',
            name: 'merkle',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint8',
            name: 'v',
            type: 'uint8',
          },
          {
            internalType: 'bytes32',
            name: 'r',
            type: 'bytes32',
          },
          {
            internalType: 'bytes32',
            name: 's',
            type: 'bytes32',
          },
        ],
        internalType: 'struct IAstariaRouter.NewLienRequest',
        name: 'params',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: 'borrower',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'collateralTokenContract',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'collateralTokenId',
        type: 'uint256',
      },
    ],
    name: 'validateAndParse',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'maxAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rate',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'duration',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxPotentialDebt',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'liquidationInitialAsk',
            type: 'uint256',
          },
        ],
        internalType: 'struct ILienToken.Details',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const

export class ICollectionValidator__factory {
  static readonly abi = _abi
  static createInterface(): ICollectionValidatorInterface {
    return new utils.Interface(_abi) as ICollectionValidatorInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ICollectionValidator {
    return new Contract(address, _abi, signerOrProvider) as ICollectionValidator
  }
}
