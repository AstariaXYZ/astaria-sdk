/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../common'
import type { PublicVault, PublicVaultInterface } from '../PublicVault'

const _abi = [
  {
    inputs: [],
    name: 'CreateFail',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'enum IVaultImplementation.InvalidRequestReason',
        name: 'reason',
        type: 'uint8',
      },
    ],
    name: 'InvalidRequest',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'enum IPublicVault.InvalidStates',
        name: '',
        type: 'uint8',
      },
    ],
    name: 'InvalidState',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    name: 'AllowListEnabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    name: 'AllowListUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'DelegateUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'Deposit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'nonce',
        type: 'uint256',
      },
    ],
    name: 'IncrementNonce',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'lienId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'epoch',
        type: 'uint256',
      },
    ],
    name: 'LienOpen',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint64',
        name: 'epoch',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'liensOpenForEpoch',
        type: 'uint256',
      },
    ],
    name: 'LiensOpenForEpochRemaining',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'nonce',
        type: 'uint256',
      },
    ],
    name: 'NonceUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint48',
        name: 'newSlope',
        type: 'uint48',
      },
    ],
    name: 'SlopeUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint88',
        name: 'feeInShares',
        type: 'uint88',
      },
    ],
    name: 'StrategistFee',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [],
    name: 'VaultShutdown',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'Withdraw',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'WithdrawReserveTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint88',
        name: 'newYintercept',
        type: 'uint88',
      },
    ],
    name: 'YInterceptChanged',
    type: 'event',
  },
  {
    inputs: [],
    name: 'COLLATERAL_TOKEN',
    outputs: [
      {
        internalType: 'contract ICollateralToken',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'DOMAIN_SEPARATOR',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'EPOCH_LENGTH',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'IMPL_TYPE',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LIEN_TOKEN',
    outputs: [
      {
        internalType: 'contract ILienToken',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ROUTER',
    outputs: [
      {
        internalType: 'contract IAstariaRouter',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'START',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'STRATEGY_TYPEHASH',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'VAULT_FEE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'accrue',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'computedSlope',
        type: 'uint256',
      },
    ],
    name: 'afterPayment',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'asset',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'lienSlope',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'interestOwed',
            type: 'uint256',
          },
        ],
        internalType: 'struct IPublicVault.BeforePaymentParams',
        name: 'params',
        type: 'tuple',
      },
    ],
    name: 'beforePayment',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint8',
                name: 'collateralType',
                type: 'uint8',
              },
              {
                internalType: 'address',
                name: 'token',
                type: 'address',
              },
              {
                internalType: 'address',
                name: 'vault',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'strategyRoot',
                type: 'bytes32',
              },
              {
                internalType: 'uint256',
                name: 'collateralId',
                type: 'uint256',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'maxAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'rate',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'duration',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'maxPotentialDebt',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'liquidationInitialAsk',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ILienToken.Details',
                name: 'details',
                type: 'tuple',
              },
            ],
            internalType: 'struct ILienToken.Lien',
            name: 'lien',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint88',
                name: 'amount',
                type: 'uint88',
              },
              {
                internalType: 'uint40',
                name: 'last',
                type: 'uint40',
              },
              {
                internalType: 'uint40',
                name: 'end',
                type: 'uint40',
              },
              {
                internalType: 'uint256',
                name: 'lienId',
                type: 'uint256',
              },
            ],
            internalType: 'struct ILienToken.Point',
            name: 'point',
            type: 'tuple',
          },
        ],
        internalType: 'struct ILienToken.Stack[]',
        name: 'stack',
        type: 'tuple[]',
      },
      {
        internalType: 'uint8',
        name: 'position',
        type: 'uint8',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'tokenContract',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'tokenId',
            type: 'uint256',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint8',
                    name: 'version',
                    type: 'uint8',
                  },
                  {
                    internalType: 'uint256',
                    name: 'deadline',
                    type: 'uint256',
                  },
                  {
                    internalType: 'address',
                    name: 'vault',
                    type: 'address',
                  },
                ],
                internalType: 'struct IAstariaRouter.StrategyDetailsParam',
                name: 'strategy',
                type: 'tuple',
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: 'uint8',
                        name: 'collateralType',
                        type: 'uint8',
                      },
                      {
                        internalType: 'address',
                        name: 'token',
                        type: 'address',
                      },
                      {
                        internalType: 'address',
                        name: 'vault',
                        type: 'address',
                      },
                      {
                        internalType: 'bytes32',
                        name: 'strategyRoot',
                        type: 'bytes32',
                      },
                      {
                        internalType: 'uint256',
                        name: 'collateralId',
                        type: 'uint256',
                      },
                      {
                        components: [
                          {
                            internalType: 'uint256',
                            name: 'maxAmount',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'rate',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'duration',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'maxPotentialDebt',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'liquidationInitialAsk',
                            type: 'uint256',
                          },
                        ],
                        internalType: 'struct ILienToken.Details',
                        name: 'details',
                        type: 'tuple',
                      },
                    ],
                    internalType: 'struct ILienToken.Lien',
                    name: 'lien',
                    type: 'tuple',
                  },
                  {
                    components: [
                      {
                        internalType: 'uint88',
                        name: 'amount',
                        type: 'uint88',
                      },
                      {
                        internalType: 'uint40',
                        name: 'last',
                        type: 'uint40',
                      },
                      {
                        internalType: 'uint40',
                        name: 'end',
                        type: 'uint40',
                      },
                      {
                        internalType: 'uint256',
                        name: 'lienId',
                        type: 'uint256',
                      },
                    ],
                    internalType: 'struct ILienToken.Point',
                    name: 'point',
                    type: 'tuple',
                  },
                ],
                internalType: 'struct ILienToken.Stack[]',
                name: 'stack',
                type: 'tuple[]',
              },
              {
                internalType: 'bytes',
                name: 'nlrDetails',
                type: 'bytes',
              },
              {
                components: [
                  {
                    internalType: 'bytes32',
                    name: 'root',
                    type: 'bytes32',
                  },
                  {
                    internalType: 'bytes32[]',
                    name: 'proof',
                    type: 'bytes32[]',
                  },
                ],
                internalType: 'struct IAstariaRouter.MerkleData',
                name: 'merkle',
                type: 'tuple',
              },
              {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
              },
              {
                internalType: 'uint8',
                name: 'v',
                type: 'uint8',
              },
              {
                internalType: 'bytes32',
                name: 'r',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32',
                name: 's',
                type: 'bytes32',
              },
            ],
            internalType: 'struct IAstariaRouter.NewLienRequest',
            name: 'lienRequest',
            type: 'tuple',
          },
        ],
        internalType: 'struct IAstariaRouter.Commitment',
        name: 'incomingTerms',
        type: 'tuple',
      },
    ],
    name: 'buyoutLien',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint8',
                name: 'collateralType',
                type: 'uint8',
              },
              {
                internalType: 'address',
                name: 'token',
                type: 'address',
              },
              {
                internalType: 'address',
                name: 'vault',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'strategyRoot',
                type: 'bytes32',
              },
              {
                internalType: 'uint256',
                name: 'collateralId',
                type: 'uint256',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'maxAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'rate',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'duration',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'maxPotentialDebt',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'liquidationInitialAsk',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ILienToken.Details',
                name: 'details',
                type: 'tuple',
              },
            ],
            internalType: 'struct ILienToken.Lien',
            name: 'lien',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint88',
                name: 'amount',
                type: 'uint88',
              },
              {
                internalType: 'uint40',
                name: 'last',
                type: 'uint40',
              },
              {
                internalType: 'uint40',
                name: 'end',
                type: 'uint40',
              },
              {
                internalType: 'uint256',
                name: 'lienId',
                type: 'uint256',
              },
            ],
            internalType: 'struct ILienToken.Point',
            name: 'point',
            type: 'tuple',
          },
        ],
        internalType: 'struct ILienToken.Stack[]',
        name: '',
        type: 'tuple[]',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'uint8',
                name: 'collateralType',
                type: 'uint8',
              },
              {
                internalType: 'address',
                name: 'token',
                type: 'address',
              },
              {
                internalType: 'address',
                name: 'vault',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'strategyRoot',
                type: 'bytes32',
              },
              {
                internalType: 'uint256',
                name: 'collateralId',
                type: 'uint256',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'maxAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'rate',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'duration',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'maxPotentialDebt',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'liquidationInitialAsk',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ILienToken.Details',
                name: 'details',
                type: 'tuple',
              },
            ],
            internalType: 'struct ILienToken.Lien',
            name: 'lien',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint88',
                name: 'amount',
                type: 'uint88',
              },
              {
                internalType: 'uint40',
                name: 'last',
                type: 'uint40',
              },
              {
                internalType: 'uint40',
                name: 'end',
                type: 'uint40',
              },
              {
                internalType: 'uint256',
                name: 'lienId',
                type: 'uint256',
              },
            ],
            internalType: 'struct ILienToken.Point',
            name: 'point',
            type: 'tuple',
          },
        ],
        internalType: 'struct ILienToken.Stack',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'claim',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'tokenContract',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'tokenId',
            type: 'uint256',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint8',
                    name: 'version',
                    type: 'uint8',
                  },
                  {
                    internalType: 'uint256',
                    name: 'deadline',
                    type: 'uint256',
                  },
                  {
                    internalType: 'address',
                    name: 'vault',
                    type: 'address',
                  },
                ],
                internalType: 'struct IAstariaRouter.StrategyDetailsParam',
                name: 'strategy',
                type: 'tuple',
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: 'uint8',
                        name: 'collateralType',
                        type: 'uint8',
                      },
                      {
                        internalType: 'address',
                        name: 'token',
                        type: 'address',
                      },
                      {
                        internalType: 'address',
                        name: 'vault',
                        type: 'address',
                      },
                      {
                        internalType: 'bytes32',
                        name: 'strategyRoot',
                        type: 'bytes32',
                      },
                      {
                        internalType: 'uint256',
                        name: 'collateralId',
                        type: 'uint256',
                      },
                      {
                        components: [
                          {
                            internalType: 'uint256',
                            name: 'maxAmount',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'rate',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'duration',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'maxPotentialDebt',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'liquidationInitialAsk',
                            type: 'uint256',
                          },
                        ],
                        internalType: 'struct ILienToken.Details',
                        name: 'details',
                        type: 'tuple',
                      },
                    ],
                    internalType: 'struct ILienToken.Lien',
                    name: 'lien',
                    type: 'tuple',
                  },
                  {
                    components: [
                      {
                        internalType: 'uint88',
                        name: 'amount',
                        type: 'uint88',
                      },
                      {
                        internalType: 'uint40',
                        name: 'last',
                        type: 'uint40',
                      },
                      {
                        internalType: 'uint40',
                        name: 'end',
                        type: 'uint40',
                      },
                      {
                        internalType: 'uint256',
                        name: 'lienId',
                        type: 'uint256',
                      },
                    ],
                    internalType: 'struct ILienToken.Point',
                    name: 'point',
                    type: 'tuple',
                  },
                ],
                internalType: 'struct ILienToken.Stack[]',
                name: 'stack',
                type: 'tuple[]',
              },
              {
                internalType: 'bytes',
                name: 'nlrDetails',
                type: 'bytes',
              },
              {
                components: [
                  {
                    internalType: 'bytes32',
                    name: 'root',
                    type: 'bytes32',
                  },
                  {
                    internalType: 'bytes32[]',
                    name: 'proof',
                    type: 'bytes32[]',
                  },
                ],
                internalType: 'struct IAstariaRouter.MerkleData',
                name: 'merkle',
                type: 'tuple',
              },
              {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
              },
              {
                internalType: 'uint8',
                name: 'v',
                type: 'uint8',
              },
              {
                internalType: 'bytes32',
                name: 'r',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32',
                name: 's',
                type: 'bytes32',
              },
            ],
            internalType: 'struct IAstariaRouter.NewLienRequest',
            name: 'lienRequest',
            type: 'tuple',
          },
        ],
        internalType: 'struct IAstariaRouter.Commitment',
        name: 'params',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: 'commitToLien',
    outputs: [
      {
        internalType: 'uint256',
        name: 'lienId',
        type: 'uint256',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'uint8',
                name: 'collateralType',
                type: 'uint8',
              },
              {
                internalType: 'address',
                name: 'token',
                type: 'address',
              },
              {
                internalType: 'address',
                name: 'vault',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'strategyRoot',
                type: 'bytes32',
              },
              {
                internalType: 'uint256',
                name: 'collateralId',
                type: 'uint256',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'maxAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'rate',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'duration',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'maxPotentialDebt',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'liquidationInitialAsk',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ILienToken.Details',
                name: 'details',
                type: 'tuple',
              },
            ],
            internalType: 'struct ILienToken.Lien',
            name: 'lien',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint88',
                name: 'amount',
                type: 'uint88',
              },
              {
                internalType: 'uint40',
                name: 'last',
                type: 'uint40',
              },
              {
                internalType: 'uint40',
                name: 'end',
                type: 'uint40',
              },
              {
                internalType: 'uint256',
                name: 'lienId',
                type: 'uint256',
              },
            ],
            internalType: 'struct ILienToken.Point',
            name: 'point',
            type: 'tuple',
          },
        ],
        internalType: 'struct ILienToken.Stack[]',
        name: 'stack',
        type: 'tuple[]',
      },
      {
        internalType: 'uint256',
        name: 'payout',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'convertToAssets',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    name: 'convertToShares',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: 'epoch',
        type: 'uint64',
      },
    ],
    name: 'decreaseEpochLienCount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'decreaseYIntercept',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: 'deposit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'disableAllowList',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'domainSeparator',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enableAllowList',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint8',
            name: 'version',
            type: 'uint8',
          },
          {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'vault',
            type: 'address',
          },
        ],
        internalType: 'struct IAstariaRouter.StrategyDetailsParam',
        name: 'strategy',
        type: 'tuple',
      },
      {
        internalType: 'bytes32',
        name: 'root',
        type: 'bytes32',
      },
    ],
    name: 'encodeStrategyData',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCurrentEpoch',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'epoch',
        type: 'uint256',
      },
    ],
    name: 'getEpochEnd',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: 'end',
        type: 'uint64',
      },
    ],
    name: 'getLienEpoch',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getLiquidationWithdrawRatio',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getShutdown',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getSlope',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getStrategistNonce',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: 'epoch',
        type: 'uint64',
      },
    ],
    name: 'getWithdrawProxy',
    outputs: [
      {
        internalType: 'contract WithdrawProxy',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getWithdrawReserve',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getYIntercept',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'lienSlope',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'lienEnd',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'increaseYIntercept',
            type: 'uint256',
          },
        ],
        internalType: 'struct IPublicVault.BuyoutLienParams',
        name: 'params',
        type: 'tuple',
      },
    ],
    name: 'handleBuyoutLien',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'increaseYIntercept',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'incrementNonce',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'delegate',
            type: 'address',
          },
          {
            internalType: 'bool',
            name: 'allowListEnabled',
            type: 'bool',
          },
          {
            internalType: 'address[]',
            name: 'allowList',
            type: 'address[]',
          },
          {
            internalType: 'uint256',
            name: 'depositCap',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVaultImplementation.InitParams',
        name: 'params',
        type: 'tuple',
      },
    ],
    name: 'init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'maxDeposit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'maxMint',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'maxRedeem',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'maxWithdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minDepositAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: 'mint',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'depositor',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    name: 'modifyAllowList',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'newCap',
        type: 'uint256',
      },
    ],
    name: 'modifyDepositCap',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'onERC721Received',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'deadline',
        type: 'uint256',
      },
      {
        internalType: 'uint8',
        name: 'v',
        type: 'uint8',
      },
      {
        internalType: 'bytes32',
        name: 'r',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: 's',
        type: 'bytes32',
      },
    ],
    name: 'permit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    name: 'previewDeposit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'previewMint',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'previewRedeem',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    name: 'previewWithdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'processEpoch',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'recipient',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'redeem',
    outputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'uint64',
        name: 'epoch',
        type: 'uint64',
      },
    ],
    name: 'redeemFutureEpoch',
    outputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'delegate_',
        type: 'address',
      },
    ],
    name: 'setDelegate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'shutdown',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'timeToEpochEnd',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'epoch',
        type: 'uint256',
      },
    ],
    name: 'timeToEpochEnd',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'timeToSecondEpochEnd',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalAssets',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'transferWithdrawReserve',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'remaining',
            type: 'uint256',
          },
        ],
        internalType: 'struct IPublicVault.LiquidationPaymentParams',
        name: 'params',
        type: 'tuple',
      },
    ],
    name: 'updateAfterLiquidationPayment',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'maxAuctionWindow',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'lienSlope',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'newAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint40',
            name: 'lienEnd',
            type: 'uint40',
          },
        ],
        internalType: 'struct IPublicVault.AfterLiquidationParams',
        name: 'params',
        type: 'tuple',
      },
    ],
    name: 'updateVaultAfterLiquidation',
    outputs: [
      {
        internalType: 'address',
        name: 'withdrawProxyIfNearBoundary',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'withdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const

const _bytecode =
  '0x608060405234801561001057600080fd5b50615e4580620000216000396000f3fe608060405234801561001057600080fd5b506004361061046a5760003560e01c80637f65a1141161024c578063c237c70311610146578063d905777e116100c3578063f1e9f4f511610087578063f1e9f4f514610939578063f5f1f1a71461094c578063f698da2514610954578063f8ba4cff1461095c578063fc0e74d11461096457600080fd5b8063d905777e146108f0578063dc2fbaee14610903578063dd62ed3e1461090b578063dfb2b6451461091e578063ef8b30f71461092657600080fd5b8063cd12030f1161010a578063cd12030f14610891578063ce96cb77146108a4578063cebbdf23146108b7578063d505accf146108ca578063d5176d23146108dd57600080fd5b8063c237c7031461085b578063c63d75b614610658578063c6e6f59214610863578063ca5eb5e114610876578063cb58189d1461088957600080fd5b8063a9059cbb116101d4578063b460af9411610198578063b460af941461081d578063b97dd9e214610830578063ba08765214610838578063ba9a061a1461084b578063c0e9b0531461085357600080fd5b8063a9059cbb146107d4578063aaed42b7146107e7578063ac4746ab146107fa578063b19c2c7014610802578063b3d7f6b91461080a57600080fd5b806394bf804d1161021b57806394bf804d1461078b57806395d89b411461079e5780639d8f8fcc146107a65780639ff2cfb4146107ae578063a3a911ba146107c157600080fd5b80637f65a11414610760578063834029ba146107735780638da5cb5b1461077b57806390bec11d1461078357600080fd5b80633644e5151161036857806351ab5c49116102e557806365612e68116102a957806365612e681461071757806366d003ac1461072a5780636e553f651461073257806370a082311461074557806379c84f9c1461075857600080fd5b806351ab5c49146106c557806359f9556e146106ec578063627cdcb9146106ff578063645006ca1461070757806364e4cf3b1461070f57600080fd5b806341700b971161032c57806341700b971461066d578063474a1e54146106755780634880d198146106885780634cdad506146106aa5780634e71d92d146106bd57600080fd5b80633644e5151461062257806338663c3f1461062a57806338d52e0f1461063d5780633c96ce1214610645578063402d267d1461065857600080fd5b80631d5470e8116103f657806330040e77116103ba57806330040e77146105a7578063313ce567146105af5780633177e0fe146105c457806332fe7b26146105d7578063349f723d146105f757600080fd5b80631d5470e81461055c578063200298bf1461056457806323b872dd1461056c5780632917e0971461057f5780632d4ece9d1461059257600080fd5b8063095ea7b31161043d578063095ea7b3146104d55780630a28a477146104e8578063133321d2146104fb578063150b7a021461051c57806318160ddd1461055457600080fd5b806301e1d1141461046f57806301ffc9a71461048a57806306fdde03146104ad57806307a2d13a146104c2575b600080fd5b61047761096c565b6040519081526020015b60405180910390f35b61049d6104983660046148ab565b610988565b6040519015158152602001610481565b6104b5610a10565b6040516104819190614925565b6104776104d0366004614938565b610aa3565b61049d6104e3366004614966565b610ad7565b6104776104f6366004614938565b610b4c565b61050e6105093660046149c9565b610b83565b604051610481929190614b7a565b61053b61052a366004614b9e565b630a85bd0160e11b95945050505050565b6040516001600160e01b03199091168152602001610481565b610477611012565b610477611041565b610477611064565b61049d61057a366004614c3c565b611087565b6104b561058d366004614c7d565b61117e565b6105a56105a0366004614ca8565b61119f565b005b61047761129e565b60125b60405160ff9091168152602001610481565b6105a56105d2366004614cd2565b6112b1565b6105df611346565b6040516001600160a01b039091168152602001610481565b61060a610605366004614d22565b611352565b6040516001600160401b039091168152602001610481565b610477611393565b6105a5610638366004614ca8565b61139d565b6105df61141a565b6105a5610653366004614938565b611424565b610477610666366004614d3d565b5060001990565b6105df61147b565b6105a5610683366004614d5a565b6114e6565b61069b610696366004614d94565b611640565b60405161048193929190614dda565b6104776106b8366004614938565b611763565b6105a561176e565b6104777f679f3933bd13bd2e4ec6e9cde341ede07736ad7b635428a8a211e9cccb4393b081565b6105a56106fa366004614938565b6117c7565b6105a5611864565b610477611922565b6105a5611a21565b6105a5610725366004614938565b611e62565b6105df611ef3565b610477610740366004614e03565b611f14565b610477610753366004614d3d565b612034565b610477612060565b61047761076e366004614938565b61207f565b6105a56120cd565b6105df61214f565b61047761215b565b610477610799366004614e03565b612165565b6104b5612270565b6104776122ef565b6105a56107bc366004614938565b612308565b6104776107cf366004614e28565b612394565b61049d6107e2366004614966565b6123aa565b6105a56107f5366004614e79565b612422565b610477612477565b6105a5612483565b610477610818366004614938565b612930565b61047761082b366004614e8b565b612956565b61060a61299c565b610477610846366004614e8b565b6129bc565b6104776129ed565b61049d6129f9565b6105b2612a0f565b610477610871366004614938565b612a1b565b6105a5610884366004614d3d565b612a42565b610477612b0d565b6105df61089f366004614ecd565b612b19565b6104776108b2366004614d3d565b612c84565b6105df6108c5366004614d22565b612cb6565b6105a56108d8366004614efa565b612cf2565b61060a6108eb366004614938565b612f54565b6104776108fe366004614d3d565b612f88565b6105a5612fb5565b610477610919366004614f6b565b613031565b61047761306d565b610477610934366004614938565b613089565b6105a5610947366004614d22565b613094565b6105df6130cd565b610477613114565b610477613193565b6105a56131a5565b600080610977613211565b90506109828161323f565b91505090565b60006001600160e01b03198216634e6bf98f60e11b14806109b957506001600160e01b031982166371c7f1b560e11b145b806109d457506001600160e01b0319821663043eff2d60e51b145b806109ef57506001600160e01b031982166301342f9f60e31b145b80610a0a57506001600160e01b031982166301ffc9a760e01b145b92915050565b6060610a1a61141a565b6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610a57573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a7f919081019061506d565b604051602001610a8f9190615100565b604051602081830303815290604052905090565b600080610aae611012565b90508015610ace57610ac9610ac161096c565b849083613293565b610ad0565b825b9392505050565b600080610ae26132b1565b33600081815260028301602090815260408083206001600160a01b038a16808552908352928190208890555187815293945090927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a35060019392505050565b600080610b57611012565b90508015610b7357610ac981610b6b61096c565b8591906132df565b678ac7230489e800009392505050565b6060610b8d6147f1565b610b95611346565b6001600160a01b0316635c975abb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf69190615132565b15610c2057600860405163eac08f1960e01b8152600401610c179190615165565b60405180910390fd5b610c28613305565b6001015460ff1615610c5057600760405163eac08f1960e01b8152600401610c179190615165565b6000610c5a611346565b6001600160a01b03166341700b976040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cbb919061517f565b9050600080826001600160a01b03166365b95e0a8a8a8a60ff16818110610ce457610ce461519c565b90506101c002016040518263ffffffff1660e01b8152600401610d0791906152c8565b6040805180830381865afa158015610d23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4791906152d7565b91509150610d5361141a565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610d99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbd91906152fb565b811115610de057600460405163eac08f1960e01b8152600401610c179190615165565b610df186610dec611ef3565b613333565b610e76610dfc611346565b6001600160a01b03166396d6401d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5d919061517f565b82610e6661141a565b6001600160a01b03169190613690565b826001600160a01b0316635b2ed28760405180604001604052808a60ff1681526020016040518060800160405280878152602001610eb2611ef3565b6001600160a01b03168152602001610ec8611346565b6001600160a01b031663349d947b8d610edf61370d565b6040518363ffffffff1660e01b8152600401610efc9291906155ea565b610140604051808303816000875af1158015610f1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4091906156e9565b81526020018e8e808060200260200160405190810160405280939291908181526020016000905b82821015610f9457610f856101c08302860136819003810190615767565b81526020019060010190610f67565b50505050508152508152506040518263ffffffff1660e01b8152600401610fbb9190615853565b6000604051808303816000875af1158015610fda573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261100291908101906159d8565b9450945050505094509492505050565b600061101c613211565b600201546001600160581b03166110316132b1565b5461103c9190615a34565b905090565b600061104b613211565b60010154600160581b90046001600160581b0316919050565b600061103c611071613211565b54600160b01b90046001600160401b031661207f565b6000806110926132b1565b6001600160a01b0386166000908152600282016020908152604080832033845290915290205490915060001981146110f5576110ce8482615a47565b6001600160a01b038716600090815260028401602090815260408083203384529091529020555b6001600160a01b03861660009081526001830160205260408120805486929061111f908490615a47565b90915550506001600160a01b03808616600081815260018501602052604090819020805488019055519091881690600080516020615df08339815191529061116a9088815260200190565b60405180910390a350600195945050505050565b6060600061118a613305565b9050611197818585613729565b949350505050565b6111a761147b565b6001600160a01b0316336001600160a01b0316146111c457600080fd5b60006111ce613211565b905060006111dc83356137f3565b8254600160581b900465ffffffffffff160390506111fa828261380c565b6112078360400135613861565b82546001600160581b031981166001600160581b03918216929092011617825561123042613873565b825464ffffffffff91909116600160881b0264ffffffffff60881b199091161782555061126c816112676106056020860135613887565b613899565b80546040516001600160581b039091168152600080516020615dd0833981519152906020015b60405180910390a15050565b60006112a8613305565b60020154905090565b6112b961214f565b6001600160a01b0316336001600160a01b0316146112d657600080fd5b806112df613305565b6001600160a01b03841660008181526003929092016020908152604092839020805460ff1916941515949094179093558151908152831515928101929092527f73121574a4eadb4cfdeb2ba56a6a88067b03edd1f0a0dfcac0a5a95682a243679101611292565b600061103c6000613934565b6000610a0a60016113846113646129ed565b61136e9086615a5a565b6001600160401b031661137f612477565b613959565b61138e9190615a47565b613887565b600061103c613971565b6113a561147b565b6001600160a01b0316336001600160a01b0316146113c257600080fd5b60006113cc613211565b90506113d78161397b565b5060006113e483356137f3565b8254600160581b900465ffffffffffff16039050611402828261380c565b506114168183604001358460200135613a0d565b5050565b600061103c613aea565b61142c61214f565b6001600160a01b0316336001600160a01b03161461144957600080fd5b61145281613861565b61145a613305565b80546001600160581b0319166001600160581b039290921691909117905550565b6000611485611346565b6001600160a01b03166341700b976040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114c2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103c919061517f565b6114ee611346565b6001600160a01b0316336001600160a01b03161461150b57600080fd5b6000611515613305565b905060006115266020840184614d3d565b6001600160a01b031614611568576115416020830183614d3d565b81546001600160a01b0391909116600160581b02600160581b600160f81b03199091161781555b6115758260600135613861565b81546001600160581b0319166001600160581b03919091161781556115a06040830160208401615a81565b156114165780546001600160f81b0316600160f81b17815560005b6115c86040840184615a9e565b905081101561163b5760016003830160006115e66040870187615a9e565b858181106115f6576115f661519c565b905060200201602081019061160b9190614d3d565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790556001016115bb565b505050565b60006060600061164e611346565b6001600160a01b0316635c975abb6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561168b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116af9190615132565b156116d057600860405163eac08f1960e01b8152600401610c179190615165565b6116d8613305565b6001015460ff161561170057600760405163eac08f1960e01b8152600401610c179190615165565b61170985613af6565b60006117158686613b35565b8251939750919550909350915061175b90849061173490600190615a47565b815181106117445761174461519c565b602002602001015160200151604001518583613c01565b509250925092565b6000610a0a82610aa3565b61177661214f565b6001600160a01b0316336001600160a01b03161461179357600080fd5b600061179d613211565b6002810180546001600160581b031981169091559091506001600160581b03166114163382613cd6565b6117cf61147b565b6001600160a01b0316336001600160a01b0316146117ec57600080fd5b60006117f6613211565b9050611801826137f3565b815465ffffffffffff60581b198116600160581b9182900465ffffffffffff90811693909301831682021780845560405191900490911681527f941a58f4850b4c58512a955afc9440427b461aa936b7ebb36b76ec0692c3ba8b90602001611292565b600061186e613305565b905061187861214f565b6001600160a01b0316336001600160a01b0316141580156118aa57508054600160581b90046001600160a01b03163314155b156118cb57600060405163eac08f1960e01b8152600401610c179190615165565b6002810180549060006118dd83615ae7565b91905055507fc6f316165836b9a9ca658ba2e3bbf32b3acff9aca1956fc77393fb506d26b0d6816002015460405161191791815260200190565b60405180910390a150565b6000601261192e61141a565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561196b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061198f9190615b00565b60ff16036119a1575064174876e80090565b60016119ab61141a565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156119e8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a0c9190615b00565b611a169190615b1d565b61103c90600a615c1a565b6000611a2b613211565b8054909150600160b01b90046001600160401b0316611a475750565b805460009060038301908290611a6f90600190600160b01b90046001600160401b0316615a5a565b6001600160401b03168152602081019190915260400160002054600160401b90046001600160a01b031690508015611c32576000611aab61141a565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015611af1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b1591906152fb565b60018401549091506001600160581b03168110611b4f57506001820180546001600160581b031981169091556001600160581b0316611b80565b611b5881613861565b6001840180546001600160581b031981166001600160581b0391821693909303169190911790555b611b9d8282611b8d61141a565b6001600160a01b03169190613d41565b604051630733d16f60e21b8152600481018290526001600160a01b03831690631ccf45bc90602401600060405180830381600087803b158015611bdf57600080fd5b505af1158015611bf3573d6000803e3d6000fd5b505050507f4fe4d5aa830b30718c35f3d40b9af9a9b42bcba60975357a1b1b40fad5c4eee481604051611c2891815260200190565b60405180910390a1505b8154600160b01b90046001600160401b031660009081526003830160205260409020546001830154600160401b9091046001600160a01b0316906001600160581b031615801590611c885750611c86611064565b155b8015611c9c57506001600160a01b03811615155b1561163b57825460009060038501908290611cc990600190600160b01b90046001600160401b0316615a5a565b6001600160401b039081168252602082019290925260400160009081205460018088015488546001600160a01b03600160401b90940484169650939492871693630aeba34e936001600160581b039092169260038b01928792611d359291600160b01b90910416615a5a565b6001600160401b031681526020810191909152604090810160002054905160e084901b6001600160e01b03191681526001600160581b039092166004830152600160401b90046001600160a01b031660248201526044016020604051808303816000875af1158015611dab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dcf91906152fb565b9050611dda81613861565b6001860180546001600160581b031981166001600160581b039182169390930316919091179055604051630733d16f60e21b8152600481018290526001600160a01b03831690631ccf45bc90602401600060405180830381600087803b158015611e4357600080fd5b505af1158015611e57573d6000803e3d6000fd5b505050505050505050565b6000611e6c613211565b8054909150600160b01b90046001600160401b03168015801590611ec95750600382016000611e9c600184615a5a565b6001600160401b03168152602081019190915260400160002054600160401b90046001600160a01b031633145b611ed257600080fd5b815461163b908390611eee9086906001600160581b0316615a47565b613db9565b60006001611eff612a0f565b60ff1603611f0c57503090565b61103c61214f565b6000611f1e611346565b6001600160a01b0316635c975abb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f7f9190615132565b15611fa057600860405163eac08f1960e01b8152600401610c179190615165565b611fa8613305565b6001015460ff1615611fd057600760405163eac08f1960e01b8152600401610c179190615165565b6000611fda613305565b8054909150600160f81b900460ff1615612015576001600160a01b038316600090815260038201602052604090205460ff1661201557600080fd5b600061201f61096c565b905061202b8585613dfd565b95945050505050565b600061203e6132b1565b6001600160a01b03909216600090815260019290920160205250604090205490565b600061206a613211565b54600160581b900465ffffffffffff16919050565b60008061208a612477565b612095846001615a34565b61209f9190615c29565b6120a76129ed565b6120b19190615a34565b90508042106120c35750600092915050565b610ad04282615a47565b6120d561214f565b6001600160a01b0316336001600160a01b0316146120f257600080fd5b60006120fc613305565b8054911515600160f81b026001600160f81b03909216919091179055604051600081527f0efe10ef116fae4939f66482c28a1b970a12ed19dc4ced68d2080c5558106f11906020015b60405180910390a1565b600061103c6015613934565b600061103c61370d565b600061216f611346565b6001600160a01b0316635c975abb6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156121ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121d09190615132565b156121f157600860405163eac08f1960e01b8152600401610c179190615165565b6121f9613305565b6001015460ff161561222157600760405163eac08f1960e01b8152600401610c179190615165565b600061222b613305565b8054909150600160f81b900460ff1615612266576001600160a01b038316600090815260038201602052604090205460ff1661226657600080fd5b6111978484613f09565b606061227a61141a565b6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156122b7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526122df919081019061506d565b604051602001610a8f9190615c40565b60006122f9613211565b546001600160581b0316919050565b6000612312613211565b8054909150600160b01b90046001600160401b0316801580159061236f5750600382016000612342600184615a5a565b6001600160401b03168152602081019190915260400160002054600160401b90046001600160a01b031633145b61237857600080fd5b815461163b908390611eee9086906001600160581b0316615a34565b600061202b6123a1613211565b86868686613fc6565b6000806123b56132b1565b3360009081526001820160205260408120805492935085929091906123db908490615a47565b90915550506001600160a01b038416600081815260018301602052604090819020805486019055513390600080516020615df083398151915290610b3a9087815260200190565b61242a61147b565b6001600160a01b0316336001600160a01b03161461244757600080fd5b6000612451613211565b9050813515611416578054611416908290611eee908535906001600160581b0316615a47565b600061103c605d614238565b600061248d611064565b11156124af57600260405163683f44bb60e11b8152600401610c179190615c6e565b60006124b9613211565b60018101549091506001600160581b0316156124eb57600360405163683f44bb60e11b8152600401610c179190615c6e565b8054600160b01b90046001600160401b03166000818152600383016020526040902054600160401b90046001600160a01b031690156126425781546000906003840190829061254c90600190600160b01b90046001600160401b0316615a5a565b6001600160401b03168152602081019190915260400160002054600160401b90046001600160a01b0316905080158015906125e75750806001600160a01b031663989673b16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156125c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125e491906152fb565b15155b1561264057806001600160a01b0316634e71d92d6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561262757600080fd5b505af115801561263b573d6000803e3d6000fd5b505050505b505b81546001600160401b03600160b01b90910481166000908152600384016020526040902054161561268957600460405163683f44bb60e11b8152600401610c179190615c6e565b6001820180546affffffffffffffffffffff60581b191690556001600160a01b038116156128fe576000816001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156126f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061271591906152fb565b905061273b612736670de0b6b3a764000061272e611012565b849190613293565b613861565b6001840180546affffffffffffffffffffff60581b1916600160581b6001600160581b03938416810291909117918290556040516302177ab760e11b8152910490911660048201526001600160a01b0383169063042ef56e90602401600060405180830381600087803b1580156127b157600080fd5b505af11580156127c5573d6000803e3d6000fd5b505050506000826001600160a01b031663b701e7276040518163ffffffff1660e01b8152600401602060405180830381865afa158015612809573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061282d91906152fb565b90508061283861096c565b111561289257600184015461286b9061273690600160581b90046001600160581b03168361286461096c565b039061425a565b6001850180546001600160581b0319166001600160581b03929092169190911790556128a5565b6001840180546001600160581b03191690555b60018401546128f19085906128dc90600160581b90046001600160581b0316670de0b6b3a76400006128d561096c565b9190613293565b8654611eee91906001600160581b0316615a47565b6128fb308361426f565b50505b50805460016001600160401b03600160b01b808404821692909201160267ffffffffffffffff60b01b19909116179055565b60008061293b611012565b90508015610b7357610ac961294e61096c565b8490836132df565b600061296184610b4c565b9050600061296d613211565b9050612993818386868560000160169054906101000a90046001600160401b0316613fc6565b50509392505050565b60006129a6613211565b54600160b01b90046001600160401b0316919050565b6000806129c7613211565b905061202b818686868560000160169054906101000a90046001600160401b0316613fc6565b600061103c603d614238565b6000612a03613305565b6001015460ff16919050565b600061103c60146142e0565b600080612a26611012565b90508015610ace57610ac981612a3a61096c565b859190613293565b612a4a61214f565b6001600160a01b0316336001600160a01b031614612a6757600080fd5b6000612a71613305565b8054600160581b600160f81b031916600160581b6001600160a01b0385169081029190911782556040519081529091507fbf313af507f7586dc28510c0974f0196ee356634bf104cf3ab61a28a2616c1549060200160405180910390a1604080516001600160a01b0384168152600160208201527f73121574a4eadb4cfdeb2ba56a6a88067b03edd1f0a0dfcac0a5a95682a243679101611292565b600061103c607d614238565b6000612b2361147b565b6001600160a01b0316336001600160a01b031614612b4057600080fd5b6000612b4a613211565b9050612b558161397b565b50612b7b81612b6485356137f3565b8354600160581b900465ffffffffffff160361380c565b8054600160b01b90046001600160401b031615612b9a57612b9a611a21565b6000612bbb612baf6060860160408701615c82565b64ffffffffff16611352565b9050612bc78282613899565b6000612bdb826001600160401b031661207f565b905085811015612c7b57612bef8383614305565b6001600160401b03821660009081526003840160209081526040918290205491516359a13ae560e01b815290870135600482015260248101889052600160401b9091046001600160a01b0316945084906359a13ae590604401600060405180830381600087803b158015612c6257600080fd5b505af1158015612c76573d6000803e3d6000fd5b505050505b50505092915050565b600080612c8f6132b1565b6001600160a01b0384166000908152600182016020526040902054909150610ad090610aa3565b6000612cc0613211565b6001600160401b039290921660009081526003909201602052506040902054600160401b90046001600160a01b031690565b42841015612d425760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152606401610c17565b60006001612d4e611393565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98a8a8a612d7a6132b1565b6001600160a01b038f8116600090815260039290920160209081526040928390208054600181019091558351808301989098529582168784015293166060860152608085019190915260a084019290925260c08084018b90528251808503909101815260e08401909252815191012061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015612e69573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590612e9f5750876001600160a01b0316816001600160a01b0316145b612edc5760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606401610c17565b85612ee56132b1565b6001600160a01b039283166000908152600291909101602090815260408083208b86168085529083529281902093909355915188815290928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b6000610a0a612f61612477565b612f6c846001615a34565b612f769190615c29565b612f7e6129ed565b61138e9190615a34565b600080612f936132b1565b6001600160a01b03909316600090815260019093016020525050604090205490565b612fbd61214f565b6001600160a01b0316336001600160a01b031614612fda57600080fd5b6001612fe4613305565b8054911515600160f81b026001600160f81b03909216919091179055604051600181527f0efe10ef116fae4939f66482c28a1b970a12ed19dc4ced68d2080c5558106f1190602001612145565b60008061303c6132b1565b6001600160a01b03948516600090815260029190910160209081526040808320959096168252939093525050205490565b6000613077613211565b600101546001600160581b0316919050565b6000610a0a82612a1b565b61309c61147b565b6001600160a01b0316336001600160a01b0316146130b957600080fd5b6130ca6130c4613211565b82613899565b50565b60006130d7611346565b6001600160a01b031663f5f1f1a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114c2573d6000803e3d6000fd5b604080517f2aef22f9d7df5f9d21c56d14029233f3fdaa91917727e1eb68e504d27072d6cd60208201527f044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d9181019190915246606082015230608082015260009060a00160405160208183030381529060405280519060200120905090565b600061103c6131a0613211565b61397b565b6131ad61214f565b6001600160a01b0316336001600160a01b0316146131ca57600080fd5b60016131d4613305565b600101805460ff19169115159190911790556040517f43849b84f1a1ce86ba1205cd8a5d4fa1563bca4b169db452674f94b4b6ddaa6990600090a1565b600080610a0a60017fc8b9e850684c861cb4124c86f9eebbd425d1f899eefe14aef183cd9cd8e16ef0615a47565b8054600090819061325e90600160881b900464ffffffffff1642615a47565b83549091506001600160581b0381169061328990600160581b900465ffffffffffff16836001613293565b610ad09190615a34565b60008260001904841183021582026132aa57600080fd5b5091020490565b600080610a0a60017f6c9d8be213da072972500acecface6c6d1d5ffbaace52819bc37703107293592615a47565b60008260001904841183021582026132f657600080fd5b50910281810615159190040190565b600080610a0a60017f8db05f23e24c991e45d8dd3599daf8e419ee5ab93565cf65b18905286a24ec14615a47565b6000613360602084018035906133499086614d3d565b6001600160a01b03166000526020526034600c2090565b9050600061336c6130cd565b6040516331a9108f60e11b8152600481018490529091506000906001600160a01b03831690636352211e90602401602060405180830381865afa1580156133b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133db919061517f565b60405163020604bf60e21b8152600481018590529091506000906001600160a01b0384169063081812fc90602401602060405180830381865afa158015613426573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061344a919061517f565b9050336001600160a01b038316148015906134775750816001600160a01b0316856001600160a01b031614155b80156134955750806001600160a01b0316856001600160a01b031614155b801561350e575060405163e985e9c560e01b81526001600160a01b03838116600483015233602483015284169063e985e9c590604401602060405180830381865afa1580156134e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061350c9190615132565b155b1561352f57600060405163eac08f1960e01b8152600401610c179190615165565b6000613539613305565b9050600060016135718361355060408c018c615c9f565b61355d60408d018d615c9f565b61356b9060a0810190615cc0565b35613729565b805160209091012061358660408b018b615c9f565b6135989061010081019060e001615cd6565b6135a560408c018c615c9f565b61010001356135b760408d018d615c9f565b6040805160008152602081018083529590955260ff9093169284019290925260608301526101200135608082015260a0016020604051602081039080840390855afa15801561360a573d6000803e3d6000fd5b50505060206040510351905061361e61214f565b6001600160a01b0316816001600160a01b031614158015613653575081546001600160a01b03828116600160581b9092041614155b8061366557506001600160a01b038116155b1561368657600160405163eac08f1960e01b8152600401610c179190615165565b5050505050505050565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806137075760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b6044820152606401610c17565b50505050565b6000613717612477565b61371f611064565b61103c9190615a34565b606060007f679f3933bd13bd2e4ec6e9cde341ede07736ad7b635428a8a211e9cccb4393b08560020154856020013585604051602001613782949392919093845260208401929092526040830152606082015260800190565b60408051601f1981840301815291905280516020909101209050601960f81b600160f81b6137ae613114565b6040516001600160f81b031993841660208201529290911660218301526022820152604281018290526062016040516020818303038152906040529150509392505050565b60006601000000000000821061380857600080fd5b5090565b815465ffffffffffff60581b1916600160581b65ffffffffffff83169081029190911783556040519081527f941a58f4850b4c58512a955afc9440427b461aa936b7ebb36b76ec0692c3ba8b90602001611292565b6000600160581b821061380857600080fd5b600065010000000000821061380857600080fd5b6000600160401b821061380857600080fd5b6001600160401b0380821660009081526003840160205260408120805490921691906138c483615cf3565b82546101009290920a6001600160401b038181021990931691831602179091558281166000818152600386016020908152604091829020548251938452909316928201929092527fc78e24d95d2fbcef8eeb6cf95914c9a7cfd906a017910a054d2404baac851231925001611292565b60008061394b600119368181013560f01c90030190565b929092013560601c92915050565b60008161396557600080fd5b50808204910615150190565b600061103c613114565b60006139896127368361323f565b82546001600160581b0319166001600160581b03919091161782556139ad42613873565b825464ffffffffff91909116600160881b0264ffffffffff60881b198216811784556040516001600160581b0391821691909216178152600080516020615dd08339815191529060200160405180910390a150546001600160581b031690565b6000613a17612b0d565b1461163b576000828211613a2b5781613a2d565b825b90506000613a46613a3c612b0d565b8390612710613293565b90506000613a5661273683612a1b565b6002870180549192508291600090613a789084906001600160581b0316615d16565b92506101000a8154816001600160581b0302191690836001600160581b031602179055507fba4551dce20e8154acbc182bc907c738187cf25cdc70708dbcf4b3cf55fcdcb081604051613ada91906001600160581b0391909116815260200190565b60405180910390a1505050505050565b600061103c6029613934565b6000613b00613211565b60018101549091506001600160581b031615613b1e57613b1e611a21565b6000613b28611064565b0361141657611416612483565b60006060600080613b468686613333565b613b4e611346565b6001600160a01b03166345be686787613b65611ef3565b6040518363ffffffff1660e01b8152600401613b82929190615d36565b6000604051808303816000875af1158015613ba1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613bc99190810190615d60565b91955093509150613be9613be06040880188615c9f565b60c0013561447d565b9050613bf88582611b8d61141a565b92959194509250565b6000613c0b613211565b9050613c168161397b565b506000613c22836137f3565b8254600160581b900465ffffffffffff16019050613c40828261380c565b506000613c538564ffffffffff16611352565b6001600160401b0381811660009081526003850160205260409020805480831660010190921667ffffffffffffffff199092169190911790559050604080518581526001600160401b03831660208201527f62a344dd82c6dba4b37f8fd2af14110b8674bb9abdca665ff3b06692935bbee1910160405180910390a15050505050565b6000613ce06132b1565b905081816000016000828254613cf69190615a34565b90915550506001600160a01b0383166000818152600183016020908152604080832080548701905551858152600080516020615df083398151915291015b60405180910390a3505050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806137075760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606401610c17565b613dc281613861565b82546001600160581b0319166001600160581b03919091169081178355604051908152600080516020615dd083398151915290602001611292565b6000613e0883613089565b905080600003613e485760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f53484152455360a81b6044820152606401610c17565b613e50611922565b8111613e905760405162461bcd60e51b815260206004820152600f60248201526e159053155157d513d3d7d4d3505313608a1b6044820152606401610c17565b613eaf333085613e9e61141a565b6001600160a01b0316929190614595565b613eb98282613cd6565b60408051848152602081018390526001600160a01b0384169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a3610a0a838261461f565b6000613f1483612930565b9050613f1e611922565b8111613f5e5760405162461bcd60e51b815260206004820152600f60248201526e159053155157d513d3d7d4d3505313608a1b6044820152606401610c17565b613f6c333083613e9e61141a565b613f768284613cd6565b60408051828152602081018590526001600160a01b0384169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a3610a0a818461461f565b600080613fd16132b1565b9050336001600160a01b03851614614045576001600160a01b0384166000908152600282016020908152604080832033845290915290205460001981146140435761401c8782615a47565b6001600160a01b038616600090815260028401602090815260408083203384529091529020555b505b86546001600160401b03600160b01b9091048116908416101561407e57600060405163683f44bb60e11b8152600401610c179190615c6e565b61408786611763565b9150816000036140c75760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f41535345545360a81b6044820152606401610c17565b6001600160a01b0384166000908152600182016020526040812080548892906140f1908490615a47565b909155505030600081815260018301602052604090819020805489019055516001600160a01b03861690600080516020615df083398151915290614138908a815260200190565b60405180910390a361414a8784614305565b60408051838152602081018890526001600160a01b03808716929088169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a46001600160401b0383166000908152600388016020526040908190205490516394bf804d60e01b8152600481018890526001600160a01b038781166024830152600160401b909204909116906394bf804d906044016020604051808303816000875af1158015614209573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061422d91906152fb565b505095945050505050565b60008061424f600119368181013560f01c90030190565b929092013592915050565b6000610ad08383670de0b6b3a7640000613293565b60006142796132b1565b6001600160a01b03841660009081526001820160205260408120805492935084929091906142a8908490615a47565b9091555050805482900381556040518281526000906001600160a01b03851690600080516020615df083398151915290602001613d34565b6000806142f7600119368181013560f01c90030190565b929092013560f81c92915050565b6001600160401b0381166000908152600383016020526040902054600160401b90046001600160a01b03166114165761443161433f611346565b6001600160a01b0316631ff0c9d66040518163ffffffff1660e01b8152600401602060405180830381865afa15801561437c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143a0919061517f565b6143a8611346565b60026143b261141a565b306143be876001615daf565b604051606095861b6bffffffffffffffffffffffff19908116602083015260f89590951b6001600160f81b031916603482015292851b84166035840152931b909116604982015260c09190911b6001600160c01b031916605d8201526065016040516020818303038152906040526146df565b6001600160401b0382166000908152600384016020526040902080546001600160a01b0392909216600160401b0268010000000000000000600160e01b03199092169190911790555050565b600080614488611346565b6001600160a01b031663017e7e586040518163ffffffff1660e01b81526004016020604051808303816000875af11580156144c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144eb919061517f565b90506001600160a01b0381161580159061458d576000614509611346565b6001600160a01b0316630f0245ad866040518263ffffffff1660e01b815260040161453691815260200190565b602060405180830381865afa158015614553573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061457791906152fb565b9050808503945061458b8382611b8d61141a565b505b509192915050565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806146185760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606401610c17565b5050505050565b6000614629613211565b905061463483613861565b81546001600160581b031981166001600160581b039182169290920116178155600061465e613305565b80549091506001600160581b03161580159061468b575080546001600160581b031661468861096c565b10155b156146ac57600760405163683f44bb60e11b8152600401610c179190615c6e565b81546040516001600160581b039091168152600080516020615dd08339815191529060200160405180910390a150505050565b8051604051606160f81b81526039820160f081811b60018401526f3d81600a3d39f33d3d3d3d363d3d376160801b600384015260028401901b601383018190526560373639366160d01b6015840152601b83015262013d7360e81b601d830152606085901b6020808401919091526c5af43d3d93803e603557fd5bf360981b60348401526000939260438401929186019084604182015b602082106147955783518152602093840193601f199092019101614776565b835160001960208490036101000a0119908116825260f088901b91830191825286846000f098506001600160a01b0389166147e357604051631d7fde3160e31b815260040160405180910390fd5b505050505050505092915050565b6040518060400160405280614804614833565b81526040805160808101825260008082526020828101829052928201819052606082015291015290565b905290565b6040518060c00160405280600060ff16815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600080191681526020016000815260200161482e6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b6000602082840312156148bd57600080fd5b81356001600160e01b031981168114610ad057600080fd5b60005b838110156148f05781810151838201526020016148d8565b50506000910152565b600081518084526149118160208601602086016148d5565b601f01601f19169290920160200192915050565b602081526000610ad060208301846148f9565b60006020828403121561494a57600080fd5b5035919050565b6001600160a01b03811681146130ca57600080fd5b6000806040838503121561497957600080fd5b823561498481614951565b946020939093013593505050565b60ff811681146130ca57600080fd5b80356149ac81614992565b919050565b6000606082840312156149c357600080fd5b50919050565b600080600080606085870312156149df57600080fd5b84356001600160401b03808211156149f657600080fd5b818701915087601f830112614a0a57600080fd5b813581811115614a1957600080fd5b8860206101c083028501011115614a2f57600080fd5b60208301965080955050614a45602088016149a1565b93506040870135915080821115614a5b57600080fd5b50614a68878288016149b1565b91505092959194509250565b805160ff1682526020808201516001600160a01b039081168285015260408084015190911681850152606080840151818601526080808501518187015260a0948501518051958701959095529284015160c08601529083015160e0850152820151610100840152015161012090910152565b614af1828251614a74565b60209081015180516001600160581b03166101408401529081015164ffffffffff908116610160840152604082015116610180830152606001516101a090910152565b600081518084526020808501945080840160005b83811015614b6f57614b5b878351614ae6565b6101c0969096019590820190600101614b48565b509495945050505050565b60006101e0808352614b8e81840186614b34565b915050610ad06020830184614ae6565b600080600080600060808688031215614bb657600080fd5b8535614bc181614951565b94506020860135614bd181614951565b93506040860135925060608601356001600160401b0380821115614bf457600080fd5b818801915088601f830112614c0857600080fd5b813581811115614c1757600080fd5b896020828501011115614c2957600080fd5b9699959850939650602001949392505050565b600080600060608486031215614c5157600080fd5b8335614c5c81614951565b92506020840135614c6c81614951565b929592945050506040919091013590565b60008060808385031215614c9057600080fd5b614c9a84846149b1565b946060939093013593505050565b600060608284031215614cba57600080fd5b610ad083836149b1565b80151581146130ca57600080fd5b60008060408385031215614ce557600080fd5b8235614cf081614951565b91506020830135614d0081614cc4565b809150509250929050565b80356001600160401b03811681146149ac57600080fd5b600060208284031215614d3457600080fd5b610ad082614d0b565b600060208284031215614d4f57600080fd5b8135610ad081614951565b600060208284031215614d6c57600080fd5b81356001600160401b03811115614d8257600080fd5b820160808185031215610ad057600080fd5b60008060408385031215614da757600080fd5b82356001600160401b03811115614dbd57600080fd5b614dc9858286016149b1565b9250506020830135614d0081614951565b838152606060208201526000614df36060830185614b34565b9050826040830152949350505050565b60008060408385031215614e1657600080fd5b823591506020830135614d0081614951565b60008060008060808587031215614e3e57600080fd5b843593506020850135614e5081614951565b92506040850135614e6081614951565b9150614e6e60608601614d0b565b905092959194509250565b6000602082840312156149c357600080fd5b600080600060608486031215614ea057600080fd5b833592506020840135614eb281614951565b91506040840135614ec281614951565b809150509250925092565b60008060808385031215614ee057600080fd5b82359150614ef184602085016149b1565b90509250929050565b600080600080600080600060e0888a031215614f1557600080fd5b8735614f2081614951565b96506020880135614f3081614951565b955060408801359450606088013593506080880135614f4e81614992565b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215614f7e57600080fd5b8235614f8981614951565b91506020830135614d0081614951565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715614fd157614fd1614f99565b60405290565b604051608081016001600160401b0381118282101715614fd157614fd1614f99565b604080519081016001600160401b0381118282101715614fd157614fd1614f99565b60405160a081016001600160401b0381118282101715614fd157614fd1614f99565b604051601f8201601f191681016001600160401b038111828210171561506557615065614f99565b604052919050565b60006020828403121561507f57600080fd5b81516001600160401b038082111561509657600080fd5b818401915084601f8301126150aa57600080fd5b8151818111156150bc576150bc614f99565b6150cf601f8201601f191660200161503d565b91508082528560208285010111156150e657600080fd5b6150f78160208401602086016148d5565b50949350505050565b694153542d5661756c742d60b01b81526000825161512581600a8501602087016148d5565b91909101600a0192915050565b60006020828403121561514457600080fd5b8151610ad081614cc4565b634e487b7160e01b600052602160045260246000fd5b60208101600983106151795761517961514f565b91905290565b60006020828403121561519157600080fd5b8151610ad081614951565b634e487b7160e01b600052603260045260246000fd5b6001600160581b03811681146130ca57600080fd5b64ffffffffff811681146130ca57600080fd5b80356151e5816151b2565b6001600160581b0316825260208101356151fe816151c7565b64ffffffffff908116602084015260408201359061521b826151c7565b166040830152606090810135910152565b803561523781614992565b60ff168252602081013561524a81614951565b6001600160a01b03908116602084015260408201359061526982614951565b166040830152606081810135908301526080808201359083015260a0808201359083015260c0808201359083015260e080820135908301526101008082013590830152610120808201359083015261014061163b8184018284016151da565b6101c08101610a0a828461522c565b600080604083850312156152ea57600080fd5b505080516020909101519092909150565b60006020828403121561530d57600080fd5b5051919050565b6000808335601e1984360301811261532b57600080fd5b83016020810192503590506001600160401b0381111561534a57600080fd5b6101c08102360382131561535d57600080fd5b9250929050565b81835260208301925060008160005b8481101561539957615385868361522c565b6101c0958601959190910190600101615373565b5093949350505050565b6000808335601e198436030181126153ba57600080fd5b83016020810192503590506001600160401b038111156153d957600080fd5b80360382131561535d57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008235603e1983360301811261542757600080fd5b90910192915050565b8035825260006020820135601e1983360301811261544d57600080fd5b82016020810190356001600160401b0381111561546957600080fd5b8060051b80360383131561547c57600080fd5b60406020870181905286018290526001600160fb1b0382111561549e57600080fd5b8083606088013794909401606001949350505050565b600081356154c181614951565b6001600160a01b039081168452602083810135908501526040830135903684900361013e190182126154f257600080fd5b6060604086015290830190813561550881614992565b60ff16606086015260208201356080860152604082013561552881614951565b1660a085015261553b6060820182615314565b6101408060c08801526155536101a088018385615364565b925061556260808501856153a3565b9250605f19808986030160e08a015261557c8585846153e8565b945061558b60a0870187615411565b935061010091508089860301828a0152506155a68484615430565b9350610120925060c0850135838901526155c260e086016149a1565b60ff811689840152508401356101608801525090910135610180909401939093525090919050565b6040815260006155fd60408301856154b4565b90508260208301529392505050565b600081830361014081121561562057600080fd5b615628614faf565b9150825161563581614992565b8252602083015161564581614951565b6020830152604083015161565881614951565b6040830152606083810151908301526080808401519083015260a0609f198201121561568357600080fd5b5060405160a081018181106001600160401b03821117156156a6576156a6614f99565b806040525060a0830151815260c0830151602082015260e08301516040820152610100830151606082015261012083015160808201528060a08301525092915050565b600061014082840312156156fc57600080fd5b610ad0838361560c565b60006080828403121561571857600080fd5b615720614fd7565b9050813561572d816151b2565b8152602082013561573d816151c7565b60208201526040820135615750816151c7565b806040830152506060820135606082015292915050565b60008183036101c081121561577b57600080fd5b615783614ff9565b6101408083121561579357600080fd5b61579b614faf565b85356157a681614992565b815260208601356157b681614951565b602082015260408601356157c981614951565b6040820152606086810135908201526080808701359082015260a0609f19850112156157f457600080fd5b6157fc61501b565b935060a0860135845260c0860135602085015260e08601356040850152610100860135606085015261012086013560808501528360a08201528083525061584586828701615706565b602083015250949350505050565b6020815260ff8251166020820152600060208301516040808401528051606084015260018060a01b036020820151166080840152604081015161589960a0850182614a74565b50606001516101a06101e0840152611197610200840182614b34565b60008183036101c08112156158c957600080fd5b6158d1614ff9565b91506158dd848461560c565b8252608061013f19820112156158f257600080fd5b506158fb614fd7565b61014083015161590a816151b2565b815261016083015161591b816151c7565b602082015261018083015161592f816151c7565b806040830152506101a083015160608201528060208301525092915050565b600082601f83011261595f57600080fd5b815160206001600160401b0382111561597a5761597a614f99565b615988818360051b0161503d565b8281526101c092830285018201928282019190878511156159a857600080fd5b8387015b858110156159cb576159be89826158b5565b84529284019281016159ac565b5090979650505050505050565b6000806101e083850312156159ec57600080fd5b82516001600160401b03811115615a0257600080fd5b615a0e8582860161594e565b925050614ef184602085016158b5565b634e487b7160e01b600052601160045260246000fd5b80820180821115610a0a57610a0a615a1e565b81810381811115610a0a57610a0a615a1e565b6001600160401b03828116828216039080821115615a7a57615a7a615a1e565b5092915050565b600060208284031215615a9357600080fd5b8135610ad081614cc4565b6000808335601e19843603018112615ab557600080fd5b8301803591506001600160401b03821115615acf57600080fd5b6020019150600581901b360382131561535d57600080fd5b600060018201615af957615af9615a1e565b5060010190565b600060208284031215615b1257600080fd5b8151610ad081614992565b60ff8281168282160390811115610a0a57610a0a615a1e565b600181815b80851115615b71578160001904821115615b5757615b57615a1e565b80851615615b6457918102915b93841c9390800290615b3b565b509250929050565b600082615b8857506001610a0a565b81615b9557506000610a0a565b8160018114615bab5760028114615bb557615bd1565b6001915050610a0a565b60ff841115615bc657615bc6615a1e565b50506001821b610a0a565b5060208310610133831016604e8410600b8410161715615bf4575081810a610a0a565b615bfe8383615b36565b8060001904821115615c1257615c12615a1e565b029392505050565b6000610ad060ff841683615b79565b8082028115828204841417610a0a57610a0a615a1e565b654153542d562d60d01b815260008251615c618160068501602087016148d5565b9190910160060192915050565b60208101600883106151795761517961514f565b600060208284031215615c9457600080fd5b8135610ad0816151c7565b6000823561013e19833603018112615cb657600080fd5b9190910192915050565b60008235603e19833603018112615cb657600080fd5b600060208284031215615ce857600080fd5b8135610ad081614992565b60006001600160401b03821680615d0c57615d0c615a1e565b6000190192915050565b6001600160581b03818116838216019080821115615a7a57615a7a615a1e565b604081526000615d4960408301856154b4565b905060018060a01b03831660208301529392505050565b600080600060608486031215615d7557600080fd5b8351925060208401516001600160401b03811115615d9257600080fd5b615d9e8682870161594e565b925050604084015190509250925092565b6001600160401b03818116838216019080821115615a7a57615a7a615a1e56fed5e974b6c90a131480bfd514ad96b2f64e176d65b1abf41f902e897dc991e215ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212204cf864c8e6894a7d46c1814ec6dbe4ec56a7ed518f43280f7b3f1a3fdb99b65664736f6c63430008110033'

type PublicVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: PublicVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class PublicVault__factory extends ContractFactory {
  constructor(...args: PublicVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PublicVault> {
    return super.deploy(overrides || {}) as Promise<PublicVault>
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): PublicVault {
    return super.attach(address) as PublicVault
  }
  override connect(signer: Signer): PublicVault__factory {
    return super.connect(signer) as PublicVault__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): PublicVaultInterface {
    return new utils.Interface(_abi) as PublicVaultInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PublicVault {
    return new Contract(address, _abi, signerOrProvider) as PublicVault
  }
}
