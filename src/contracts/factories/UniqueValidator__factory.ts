/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../common'
import type {
  UniqueValidator,
  UniqueValidatorInterface,
} from '../UniqueValidator'

const _abi = [
  {
    inputs: [],
    name: 'VERSION_TYPE',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint8',
            name: 'version',
            type: 'uint8',
          },
          {
            internalType: 'address',
            name: 'token',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'tokenId',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'borrower',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'maxAmount',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'rate',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'duration',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'maxPotentialDebt',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'liquidationInitialAsk',
                type: 'uint256',
              },
            ],
            internalType: 'struct ILienToken.Details',
            name: 'lien',
            type: 'tuple',
          },
        ],
        internalType: 'struct IUniqueValidator.Details',
        name: 'details',
        type: 'tuple',
      },
    ],
    name: 'assembleLeaf',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'nlrDetails',
        type: 'bytes',
      },
    ],
    name: 'getLeafDetails',
    outputs: [
      {
        components: [
          {
            internalType: 'uint8',
            name: 'version',
            type: 'uint8',
          },
          {
            internalType: 'address',
            name: 'token',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'tokenId',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'borrower',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'maxAmount',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'rate',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'duration',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'maxPotentialDebt',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'liquidationInitialAsk',
                type: 'uint256',
              },
            ],
            internalType: 'struct ILienToken.Details',
            name: 'lien',
            type: 'tuple',
          },
        ],
        internalType: 'struct IUniqueValidator.Details',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint8',
                name: 'version',
                type: 'uint8',
              },
              {
                internalType: 'uint256',
                name: 'deadline',
                type: 'uint256',
              },
              {
                internalType: 'address',
                name: 'vault',
                type: 'address',
              },
            ],
            internalType: 'struct IAstariaRouter.StrategyDetailsParam',
            name: 'strategy',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint8',
                    name: 'collateralType',
                    type: 'uint8',
                  },
                  {
                    internalType: 'address',
                    name: 'token',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'vault',
                    type: 'address',
                  },
                  {
                    internalType: 'bytes32',
                    name: 'strategyRoot',
                    type: 'bytes32',
                  },
                  {
                    internalType: 'uint256',
                    name: 'collateralId',
                    type: 'uint256',
                  },
                  {
                    components: [
                      {
                        internalType: 'uint256',
                        name: 'maxAmount',
                        type: 'uint256',
                      },
                      {
                        internalType: 'uint256',
                        name: 'rate',
                        type: 'uint256',
                      },
                      {
                        internalType: 'uint256',
                        name: 'duration',
                        type: 'uint256',
                      },
                      {
                        internalType: 'uint256',
                        name: 'maxPotentialDebt',
                        type: 'uint256',
                      },
                      {
                        internalType: 'uint256',
                        name: 'liquidationInitialAsk',
                        type: 'uint256',
                      },
                    ],
                    internalType: 'struct ILienToken.Details',
                    name: 'details',
                    type: 'tuple',
                  },
                ],
                internalType: 'struct ILienToken.Lien',
                name: 'lien',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint88',
                    name: 'amount',
                    type: 'uint88',
                  },
                  {
                    internalType: 'uint40',
                    name: 'last',
                    type: 'uint40',
                  },
                  {
                    internalType: 'uint40',
                    name: 'end',
                    type: 'uint40',
                  },
                  {
                    internalType: 'uint256',
                    name: 'lienId',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ILienToken.Point',
                name: 'point',
                type: 'tuple',
              },
            ],
            internalType: 'struct ILienToken.Stack[]',
            name: 'stack',
            type: 'tuple[]',
          },
          {
            internalType: 'bytes',
            name: 'nlrDetails',
            type: 'bytes',
          },
          {
            components: [
              {
                internalType: 'bytes32',
                name: 'root',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32[]',
                name: 'proof',
                type: 'bytes32[]',
              },
            ],
            internalType: 'struct IAstariaRouter.MerkleData',
            name: 'merkle',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint8',
            name: 'v',
            type: 'uint8',
          },
          {
            internalType: 'bytes32',
            name: 'r',
            type: 'bytes32',
          },
          {
            internalType: 'bytes32',
            name: 's',
            type: 'bytes32',
          },
        ],
        internalType: 'struct IAstariaRouter.NewLienRequest',
        name: 'params',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: 'borrower',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'collateralTokenContract',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'collateralTokenId',
        type: 'uint256',
      },
    ],
    name: 'validateAndParse',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'leaf',
        type: 'bytes32',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'maxAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rate',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'duration',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxPotentialDebt',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'liquidationInitialAsk',
            type: 'uint256',
          },
        ],
        internalType: 'struct ILienToken.Details',
        name: 'ld',
        type: 'tuple',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
] as const

const _bytecode =
  '0x608060405234801561001057600080fd5b50610bda806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806338fc401c1461005157806343fea054146100705780638ba47309146100905780638ccc5abc146100b1575b600080fd5b610059600181565b60405160ff90911681526020015b60405180910390f35b61008361007e3660046104b0565b6100d1565b60405161006791906104ed565b6100a361009e3660046108ca565b6100f3565b6040516100679291906109ec565b6100c46100bf366004610a32565b6102ca565b6040516100679190610aa3565b6100d96102f3565b818060200190518101906100ed9190610af1565b92915050565b60006101276040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b600061013687604001516100d1565b805190915060ff166001146101815760405162461bcd60e51b815260206004820152600c60248201526b696e76616c6964207479706560a01b60448201526064015b60405180910390fd5b60608101516001600160a01b0316156102085780606001516001600160a01b0316866001600160a01b0316146102085760405162461bcd60e51b815260206004820152602660248201527f696e76616c696420626f72726f7765722072657175657374696e6720636f6d6d6044820152651a5d1b595b9d60d21b6064820152608401610178565b846001600160a01b031681602001516001600160a01b0316146102665760405162461bcd60e51b81526020600482015260166024820152751a5b9d985b1a59081d1bdad95b8818dbdb9d1c9858dd60521b6044820152606401610178565b838160400151146102ac5760405162461bcd60e51b815260206004820152601060248201526f1a5b9d985b1a59081d1bdad95b881a5960821b6044820152606401610178565b60409096015180516020909101206080909601519596945050505050565b6060816040516020016102dd91906104ed565b6040516020818303038152906040529050919050565b6040518060a00160405280600060ff16815260200160006001600160a01b031681526020016000815260200160006001600160a01b031681526020016103616040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b905290565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff8111828210171561039f5761039f610366565b60405290565b6040805190810167ffffffffffffffff8111828210171561039f5761039f610366565b60405160c0810167ffffffffffffffff8111828210171561039f5761039f610366565b604051610100810167ffffffffffffffff8111828210171561039f5761039f610366565b604051601f8201601f1916810167ffffffffffffffff8111828210171561043857610438610366565b604052919050565b600082601f83011261045157600080fd5b813567ffffffffffffffff81111561046b5761046b610366565b61047e601f8201601f191660200161040f565b81815284602083860101111561049357600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156104c257600080fd5b813567ffffffffffffffff8111156104d957600080fd5b6104e584828501610440565b949350505050565b815160ff1681526020808301516001600160a01b039081168284015260408085015181850152606080860151909216828501526080948501518051868601529283015160a085015282015160c084015281015160e0830152909101516101008201526101200190565b60ff8116811461056557600080fd5b50565b803561057381610556565b919050565b6001600160a01b038116811461056557600080fd5b803561057381610578565b6000606082840312156105aa57600080fd5b6040516060810181811067ffffffffffffffff821117156105cd576105cd610366565b60405290508082356105de81610556565b81526020838101359082015260408301356105f881610578565b6040919091015292915050565b600067ffffffffffffffff82111561061f5761061f610366565b5060051b60200190565b600060a0828403121561063b57600080fd5b61064361037c565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015292915050565b803564ffffffffff8116811461057357600080fd5b60006080828403121561069e57600080fd5b6040516080810181811067ffffffffffffffff821117156106c1576106c1610366565b60405290508082356affffffffffffffffffffff811681146106e257600080fd5b81526106f060208401610677565b602082015261070160408401610677565b6040820152606083013560608201525092915050565b600082601f83011261072857600080fd5b8135602061073d61073883610605565b61040f565b8281526101c0928302850182019282820191908785111561075d57600080fd5b8387015b85811015610816578089038281121561077a5760008081fd5b6107826103a5565b610140808312156107935760008081fd5b61079b6103c8565b925083356107a881610556565b8352838801356107b781610578565b838901526040848101356107ca81610578565b90840152606084810135908401526080808501359084015260a06107f08d828701610629565b908401528282526108038c85830161068c565b8289015250855250928401928101610761565b5090979650505050505050565b60006040828403121561083557600080fd5b61083d6103a5565b90508135815260208083013567ffffffffffffffff81111561085e57600080fd5b8301601f8101851361086f57600080fd5b803561087d61073882610605565b81815260059190911b8201830190838101908783111561089c57600080fd5b928401925b828410156108ba578335825292840192908401906108a1565b8085870152505050505092915050565b600080600080608085870312156108e057600080fd5b843567ffffffffffffffff808211156108f857600080fd5b90860190610140828903121561090d57600080fd5b6109156103eb565b61091f8984610598565b815260608301358281111561093357600080fd5b61093f8a828601610717565b60208301525060808301358281111561095757600080fd5b6109638a828601610440565b60408301525060a08301358281111561097b57600080fd5b6109878a828601610823565b60608301525060c083013560808201526109a360e08401610568565b60a082015261010083013560c08201526101209092013560e08301525093506109ce6020860161058d565b92506109dc6040860161058d565b9396929550929360600135925050565b82815260c08101610a2b602083018480518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b9392505050565b60006101208284031215610a4557600080fd5b610a4d61037c565b8235610a5881610556565b81526020830135610a6881610578565b6020820152604083810135908201526060830135610a8581610578565b6060820152610a978460808501610629565b60808201529392505050565b600060208083528351808285015260005b81811015610ad057858101830151858201604001528201610ab4565b506000604082860101526040601f19601f8301168501019250505092915050565b6000818303610120811215610b0557600080fd5b610b0d61037c565b8351610b1881610556565b81526020840151610b2881610578565b6020820152604084810151908201526060840151610b4581610578565b606082015260a0607f1983011215610b5c57600080fd5b610b6461037c565b608085810151825260a0860151602083015260c0860151604083015260e0860151606083015261010090950151858201529381019390935250909291505056fea264697066735822122061e2965becfa1e02aa15477bf856a35f5bf92eb4818aecd8a5faa113c8c52e8e64736f6c63430008110033'

type UniqueValidatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: UniqueValidatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class UniqueValidator__factory extends ContractFactory {
  constructor(...args: UniqueValidatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniqueValidator> {
    return super.deploy(overrides || {}) as Promise<UniqueValidator>
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): UniqueValidator {
    return super.attach(address) as UniqueValidator
  }
  override connect(signer: Signer): UniqueValidator__factory {
    return super.connect(signer) as UniqueValidator__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): UniqueValidatorInterface {
    return new utils.Interface(_abi) as UniqueValidatorInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniqueValidator {
    return new Contract(address, _abi, signerOrProvider) as UniqueValidator
  }
}
