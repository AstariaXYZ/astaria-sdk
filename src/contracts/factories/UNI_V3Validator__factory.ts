/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../common'
import type {
  UNI_V3Validator,
  UNI_V3ValidatorInterface,
} from '../UNI_V3Validator'

const _abi = [
  {
    inputs: [],
    name: 'InvalidAmounts',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidBorrower',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidCollateral',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidFee',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidLiquidity',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidPair',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidRange',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidType',
    type: 'error',
  },
  {
    inputs: [],
    name: 'V3_FACTORY',
    outputs: [
      {
        internalType: 'contract IUniswapV3Factory',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'V3_NFT_POSITION_MGR',
    outputs: [
      {
        internalType: 'contract IV3PositionManager',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'VERSION_TYPE',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint8',
            name: 'version',
            type: 'uint8',
          },
          {
            internalType: 'address',
            name: 'lp',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'borrower',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'token0',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'token1',
            type: 'address',
          },
          {
            internalType: 'uint24',
            name: 'fee',
            type: 'uint24',
          },
          {
            internalType: 'int24',
            name: 'tickLower',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'tickUpper',
            type: 'int24',
          },
          {
            internalType: 'uint128',
            name: 'minLiquidity',
            type: 'uint128',
          },
          {
            internalType: 'uint256',
            name: 'amount0Min',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amount1Min',
            type: 'uint256',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'maxAmount',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'rate',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'duration',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'maxPotentialDebt',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'liquidationInitialAsk',
                type: 'uint256',
              },
            ],
            internalType: 'struct ILienToken.Details',
            name: 'lien',
            type: 'tuple',
          },
        ],
        internalType: 'struct IUNI_V3Validator.Details',
        name: 'details',
        type: 'tuple',
      },
    ],
    name: 'assembleLeaf',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'nlrDetails',
        type: 'bytes',
      },
    ],
    name: 'getLeafDetails',
    outputs: [
      {
        components: [
          {
            internalType: 'uint8',
            name: 'version',
            type: 'uint8',
          },
          {
            internalType: 'address',
            name: 'lp',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'borrower',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'token0',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'token1',
            type: 'address',
          },
          {
            internalType: 'uint24',
            name: 'fee',
            type: 'uint24',
          },
          {
            internalType: 'int24',
            name: 'tickLower',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'tickUpper',
            type: 'int24',
          },
          {
            internalType: 'uint128',
            name: 'minLiquidity',
            type: 'uint128',
          },
          {
            internalType: 'uint256',
            name: 'amount0Min',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amount1Min',
            type: 'uint256',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'maxAmount',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'rate',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'duration',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'maxPotentialDebt',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'liquidationInitialAsk',
                type: 'uint256',
              },
            ],
            internalType: 'struct ILienToken.Details',
            name: 'lien',
            type: 'tuple',
          },
        ],
        internalType: 'struct IUNI_V3Validator.Details',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint8',
                name: 'version',
                type: 'uint8',
              },
              {
                internalType: 'uint256',
                name: 'deadline',
                type: 'uint256',
              },
              {
                internalType: 'address',
                name: 'vault',
                type: 'address',
              },
            ],
            internalType: 'struct IAstariaRouter.StrategyDetailsParam',
            name: 'strategy',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint8',
                    name: 'collateralType',
                    type: 'uint8',
                  },
                  {
                    internalType: 'address',
                    name: 'token',
                    type: 'address',
                  },
                  {
                    internalType: 'address',
                    name: 'vault',
                    type: 'address',
                  },
                  {
                    internalType: 'bytes32',
                    name: 'strategyRoot',
                    type: 'bytes32',
                  },
                  {
                    internalType: 'uint256',
                    name: 'collateralId',
                    type: 'uint256',
                  },
                  {
                    components: [
                      {
                        internalType: 'uint256',
                        name: 'maxAmount',
                        type: 'uint256',
                      },
                      {
                        internalType: 'uint256',
                        name: 'rate',
                        type: 'uint256',
                      },
                      {
                        internalType: 'uint256',
                        name: 'duration',
                        type: 'uint256',
                      },
                      {
                        internalType: 'uint256',
                        name: 'maxPotentialDebt',
                        type: 'uint256',
                      },
                      {
                        internalType: 'uint256',
                        name: 'liquidationInitialAsk',
                        type: 'uint256',
                      },
                    ],
                    internalType: 'struct ILienToken.Details',
                    name: 'details',
                    type: 'tuple',
                  },
                ],
                internalType: 'struct ILienToken.Lien',
                name: 'lien',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint88',
                    name: 'amount',
                    type: 'uint88',
                  },
                  {
                    internalType: 'uint40',
                    name: 'last',
                    type: 'uint40',
                  },
                  {
                    internalType: 'uint40',
                    name: 'end',
                    type: 'uint40',
                  },
                  {
                    internalType: 'uint256',
                    name: 'lienId',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ILienToken.Point',
                name: 'point',
                type: 'tuple',
              },
            ],
            internalType: 'struct ILienToken.Stack[]',
            name: 'stack',
            type: 'tuple[]',
          },
          {
            internalType: 'bytes',
            name: 'nlrDetails',
            type: 'bytes',
          },
          {
            components: [
              {
                internalType: 'bytes32',
                name: 'root',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32[]',
                name: 'proof',
                type: 'bytes32[]',
              },
            ],
            internalType: 'struct IAstariaRouter.MerkleData',
            name: 'merkle',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint8',
            name: 'v',
            type: 'uint8',
          },
          {
            internalType: 'bytes32',
            name: 'r',
            type: 'bytes32',
          },
          {
            internalType: 'bytes32',
            name: 's',
            type: 'bytes32',
          },
        ],
        internalType: 'struct IAstariaRouter.NewLienRequest',
        name: 'params',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: 'borrower',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'collateralTokenContract',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'collateralTokenId',
        type: 'uint256',
      },
    ],
    name: 'validateAndParse',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'leaf',
        type: 'bytes32',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'maxAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rate',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'duration',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxPotentialDebt',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'liquidationInitialAsk',
            type: 'uint256',
          },
        ],
        internalType: 'struct ILienToken.Details',
        name: 'ld',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const

const _bytecode =
  '0x6080604052600080546001600160a01b031990811673c36442b4a4522e871399cd717abdd847ab11fe881790915560018054909116731f98431c8ad98523631ae4a59f267346ea31f98417905534801561005857600080fd5b50611416806100686000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806308b954931461006757806308bd1a851461009057806338fc401c146100bb57806343fea054146100d55780638ba47309146100f5578063bf05901014610116575b600080fd5b61007a610075366004610cbb565b610129565b6040516100879190610d9a565b60405180910390f35b6001546100a3906001600160a01b031681565b6040516001600160a01b039091168152602001610087565b6100c3600381565b60405160ff9091168152602001610087565b6100e86100e3366004610de8565b610152565b6040516100879190610e99565b610108610103366004610fbd565b6101f4565b60405161008792919061102d565b6000546100a3906001600160a01b031681565b60608160405160200161013c9190610e99565b6040516020818303038152906040529050919050565b6101da6040805161018081018252600080825260208083018290528284018290526060808401839052608080850184905260a080860185905260c0860185905260e08601859052610100860185905261012086018590526101408601859052865190810187528481529283018490529482018390528101829052928301529061016082015290565b818060200190518101906101ee91906110f1565b92915050565b60006102286040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b600061027461023a60808901896111c5565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061015292505050565b805190915060ff1660031461029c5760405163b968846160e01b815260040160405180910390fd5b60408101516001600160a01b0316158015906102ce575080604001516001600160a01b0316866001600160a01b031614155b156102ec57604051636f5f81d760e01b815260040160405180910390fd5b846001600160a01b031681602001516001600160a01b031614610322576040516368f7a67560e11b815260040160405180910390fd5b6000805460405163133f757160e31b815260048101879052829182918291829182916001600160a01b0316906399fbab889060240161018060405180830381865afa158015610375573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103999190611213565b5050505097509750975097509750975050508660a0015162ffffff168462ffffff1611156103da576040516358d620b360e01b815260040160405180910390fd5b856001600160a01b031687606001516001600160a01b03161415806104155750846001600160a01b031687608001516001600160a01b031614155b1561043357604051630793df6360e21b815260040160405180910390fd5b600154604051630b4c774160e11b81526001600160a01b038881166004830152878116602483015262ffffff871660448301526000921690631698ee8290606401602060405180830381865afa158015610491573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b591906112f4565b6001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156104f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105169190611323565b505050505050905060008061053d8361052e88610632565b61053788610632565b8761096c565b91509150818a610120015111806105585750808a6101400151115b1561057657604051636c2b7e2d60e11b815260040160405180910390fd5b8460020b8a60e0015160020b14158061059957508560020b8a60c0015160020b14155b156105b75760405163561ce9bb60e01b815260040160405180910390fd5b836001600160801b03168a61010001516001600160801b031611156105ef57604051631fff968160e01b815260040160405180910390fd5b8f80608001906105ff91906111c5565b60405161060d9291906113ba565b60405180910390209b508961016001519a505050505050505050505094509492505050565b60008060008360020b12610649578260020b610651565b8260020b6000035b9050620d89e881111561068e5760405162461bcd60e51b81526020600482015260016024820152601560fa1b604482015260640160405180910390fd5b6000816001166000036106a557600160801b6106b7565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff16905060028216156106eb576ffff97272373d413259a46990580e213a0260801c5b600482161561070a576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615610729576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615610748576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615610767576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615610786576fff2ea16466c96a3843ec78b326b528610260801c5b60808216156107a5576ffe5dee046a99a2a811c461f1969c30530260801c5b6101008216156107c5576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b6102008216156107e5576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615610805576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615610825576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615610845576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615610865576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615610885576f70d869a156d2a1b890bb3df62baf32f70260801c5b6180008216156108a5576f31be135f97d08fd981231505542fcfa60260801c5b620100008216156108c6576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b620200008216156108e6576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615610905576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615610922576b048a170391f7dc42444e8fa20260801c5b60008460020b131561094357806000198161093f5761093f6113ca565b0490505b64010000000081061561095757600161095a565b60005b60ff16602082901c0192505050919050565b600080836001600160a01b0316856001600160a01b0316111561098d579293925b846001600160a01b0316866001600160a01b0316116109b8576109b1858585610a08565b91506109ff565b836001600160a01b0316866001600160a01b031610156109f1576109dd868585610a08565b91506109ea858785610a79565b90506109ff565b6109fc858585610a79565b90505b94509492505050565b6000826001600160a01b0316846001600160a01b03161115610a28579192915b836001600160a01b0316610a61606060ff16846001600160801b0316901b8686036001600160a01b0316866001600160a01b0316610ac4565b81610a6e57610a6e6113ca565b0490505b9392505050565b6000826001600160a01b0316846001600160a01b03161115610a99579192915b610abc826001600160801b03168585036001600160a01b0316600160601b610ac4565b949350505050565b6000808060001985870985870292508281108382030391505080600003610afd5760008411610af257600080fd5b508290049050610a72565b808411610b0957600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715610bab57610bab610b72565b60405290565b604051610180810167ffffffffffffffff81118282101715610bab57610bab610b72565b60ff81168114610be457600080fd5b50565b8035610bf281610bd5565b919050565b6001600160a01b0381168114610be457600080fd5b8035610bf281610bf7565b62ffffff81168114610be457600080fd5b8035610bf281610c17565b8060020b8114610be457600080fd5b8035610bf281610c33565b6001600160801b0381168114610be457600080fd5b8035610bf281610c4d565b600060a08284031215610c7f57600080fd5b610c87610b88565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015292915050565b60006102008284031215610cce57600080fd5b610cd6610bb1565b610cdf83610be7565b8152610ced60208401610c0c565b6020820152610cfe60408401610c0c565b6040820152610d0f60608401610c0c565b6060820152610d2060808401610c0c565b6080820152610d3160a08401610c28565b60a0820152610d4260c08401610c42565b60c0820152610d5360e08401610c42565b60e0820152610100610d66818501610c62565b9082015261012083810135908201526101408084013590820152610160610d8f85828601610c6d565b908201529392505050565b600060208083528351808285015260005b81811015610dc757858101830151858201604001528201610dab565b506000604082860101526040601f19601f8301168501019250505092915050565b600060208284031215610dfa57600080fd5b813567ffffffffffffffff80821115610e1257600080fd5b818401915084601f830112610e2657600080fd5b813581811115610e3857610e38610b72565b604051601f8201601f19908116603f01168101908382118183101715610e6057610e60610b72565b81604052828152876020848701011115610e7957600080fd5b826020860160208301376000928101602001929092525095945050505050565b815160ff16815261020081016020830151610ebf60208401826001600160a01b03169052565b506040830151610eda60408401826001600160a01b03169052565b506060830151610ef560608401826001600160a01b03169052565b506080830151610f1060808401826001600160a01b03169052565b5060a0830151610f2760a084018262ffffff169052565b5060c0830151610f3c60c084018260020b9052565b5060e0830151610f5160e084018260020b9052565b50610100838101516001600160801b0316908301526101208084015190830152610140808401519083015261016092830151805193830193909352602083015161018083015260408301516101a083015260608301516101c08301526080909201516101e09091015290565b60008060008060808587031215610fd357600080fd5b843567ffffffffffffffff811115610fea57600080fd5b85016101408188031215610ffd57600080fd5b9350602085013561100d81610bf7565b9250604085013561101d81610bf7565b9396929550929360600135925050565b82815260c08101610a72602083018480518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b8051610bf281610bd5565b8051610bf281610bf7565b8051610bf281610c17565b8051610bf281610c33565b8051610bf281610c4d565b600060a082840312156110b557600080fd5b6110bd610b88565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015292915050565b6000610200828403121561110457600080fd5b61110c610bb1565b6111158361106c565b815261112360208401611077565b602082015261113460408401611077565b604082015261114560608401611077565b606082015261115660808401611077565b608082015261116760a08401611082565b60a082015261117860c0840161108d565b60c082015261118960e0840161108d565b60e082015261010061119c818501611098565b9082015261012083810151908201526101408084015190820152610160610d8f858286016110a3565b6000808335601e198436030181126111dc57600080fd5b83018035915067ffffffffffffffff8211156111f757600080fd5b60200191503681900382131561120c57600080fd5b9250929050565b6000806000806000806000806000806000806101808d8f03121561123657600080fd5b8c516bffffffffffffffffffffffff8116811461125257600080fd5b9b5061126060208e01611077565b9a5061126e60408e01611077565b995061127c60608e01611077565b985061128a60808e01611082565b975061129860a08e0161108d565b96506112a660c08e0161108d565b95506112b460e08e01611098565b94506101008d015193506101208d015192506112d36101408e01611098565b91506112e26101608e01611098565b90509295989b509295989b509295989b565b60006020828403121561130657600080fd5b8151610a7281610bf7565b805161ffff81168114610bf257600080fd5b600080600080600080600060e0888a03121561133e57600080fd5b875161134981610bf7565b602089015190975061135a81610c33565b955061136860408901611311565b945061137660608901611311565b935061138460808901611311565b925060a088015161139481610bd5565b60c089015190925080151581146113aa57600080fd5b8091505092959891949750929550565b8183823760009101908152919050565b634e487b7160e01b600052601260045260246000fdfea2646970667358221220d172af50135f47df2c2ec5dad9851f48c390a5c3a6fdb2f6d0faad0bfad35d0364736f6c63430008110033'

type UNI_V3ValidatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: UNI_V3ValidatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class UNI_V3Validator__factory extends ContractFactory {
  constructor(...args: UNI_V3ValidatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UNI_V3Validator> {
    return super.deploy(overrides || {}) as Promise<UNI_V3Validator>
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): UNI_V3Validator {
    return super.attach(address) as UNI_V3Validator
  }
  override connect(signer: Signer): UNI_V3Validator__factory {
    return super.connect(signer) as UNI_V3Validator__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): UNI_V3ValidatorInterface {
    return new utils.Interface(_abi) as UNI_V3ValidatorInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UNI_V3Validator {
    return new Contract(address, _abi, signerOrProvider) as UNI_V3Validator
  }
}
